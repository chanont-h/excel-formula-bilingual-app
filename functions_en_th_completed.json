[
  {
    "id": 1,
    "Function_name": "ABS",
    "description_en": "Returns the absolute value of a number",
    "Category": "Math and trigonometry",
    "syntax_en": "ABS(number)",
    "example_en": "=ABS(-250)",
    "Tutorial_1": "Report financial losses as absolute values.",
    "Tutorial_2": "Calculate absolute errors in predictions.",
    "Tutorial_3": "Measure deviations from a target value.",
    "Tutorial_4": "Track magnitude of stock price changes."
  },
  {
    "id": 2,
    "Function_name": "ACCRINT",
    "description_en": "Returns the accrued interest for a security that pays periodic interest",
    "Category": "Financial",
    "syntax_en": "ACCRINT(issue, first_interest, settlement, rate, par, frequency, [basis], [calc_method])",
    "example_en": "=ACCRINT(\"1-Jan-23\",\"1-Jul-23\",\"1-Mar-23\",0.05,1000,2)",
    "Tutorial_1": "Calculate accrued interest on corporate bonds.",
    "Tutorial_2": "Determine interest payable on investment bonds.",
    "Tutorial_3": "Compute partial-period interest accrual.",
    "Tutorial_4": "Evaluate interest earnings for accounting purposes."
  },
  {
    "id": 3,
    "Function_name": "ACCRINTM",
    "description_en": "Returns the accrued interest for a security that pays interest at maturity",
    "Category": "Financial",
    "syntax_en": "ACCRINTM(issue, settlement, rate, par, [basis])",
    "example_en": "=ACCRINTM(\"1-Jan-23\",\"1-Jun-23\",0.04,1000)",
    "Tutorial_1": "Compute accrued interest for maturity-date bonds.",
    "Tutorial_2": "Evaluate total interest income at bond maturity.",
    "Tutorial_3": "Manage accounting entries for bonds.",
    "Tutorial_4": "Track expected returns from fixed-income securities."
  },
  {
    "id": 4,
    "Function_name": "ACOS",
    "description_en": "Returns the arccosine of a number",
    "Category": "Math and trigonometry",
    "syntax_en": "ACOS(number)",
    "example_en": "=ACOS(0.5)",
    "Tutorial_1": "Calculate angle from cosine value.",
    "Tutorial_2": "Solve geometry problems involving angles.",
    "Tutorial_3": "Use in engineering for calculating angles.",
    "Tutorial_4": "Analyze trigonometric ratios in data."
  },
  {
    "id": 5,
    "Function_name": "ACOSH",
    "description_en": "Returns the inverse hyperbolic cosine of a number",
    "Category": "Math and trigonometry",
    "syntax_en": "ACOSH(number)",
    "example_en": "=ACOSH(10)",
    "Tutorial_1": "Solve hyperbolic geometry problems.",
    "Tutorial_2": "Analyze engineering or physics computations.",
    "Tutorial_3": "Apply to advanced math modeling.",
    "Tutorial_4": "Use in electrical engineering calculations."
  },
  {
    "id": 6,
    "Function_name": "ACOT",
    "description_en": "Returns the arccotangent of a number",
    "Category": "Math and trigonometry",
    "syntax_en": "ACOT(number)",
    "example_en": "=ACOT(1)",
    "Tutorial_1": "Compute angles from cotangent ratios.",
    "Tutorial_2": "Solve inverse trigonometric problems.",
    "Tutorial_3": "Engineering angle computations.",
    "Tutorial_4": "Analyze data in trigonometric analysis."
  },
  {
    "id": 7,
    "Function_name": "ACOTH",
    "description_en": "Returns the hyperbolic arccotangent of a number",
    "Category": "Math and trigonometry",
    "syntax_en": "ACOTH(number)",
    "example_en": "=ACOTH(2)",
    "Tutorial_1": "Evaluate inverse hyperbolic cotangent.",
    "Tutorial_2": "Mathematical modeling for complex data.",
    "Tutorial_3": "Engineering calculations with hyperbolic functions.",
    "Tutorial_4": "Advanced statistics and calculus scenarios."
  },
  {
    "id": 8,
    "Function_name": "ADDRESS",
    "description_en": "Returns a reference as text to a single cell in a worksheet",
    "Category": "Lookup and reference",
    "syntax_en": "ADDRESS(row_num, column_num, [abs_num], [A1], [sheet])",
    "example_en": "=ADDRESS(2,3)",
    "Tutorial_1": "Create cell references dynamically.",
    "Tutorial_2": "Construct references for report automation.",
    "Tutorial_3": "Dynamically link multiple sheets.",
    "Tutorial_4": "Generate summary sheets with cell addresses."
  },
  {
    "id": 9,
    "Function_name": "AGGREGATE",
    "description_en": "Returns an aggregate in a list or database",
    "Category": "Math and trigonometry",
    "syntax_en": "AGGREGATE(function_num, options, ref1, [ref2],...)",
    "example_en": "=AGGREGATE(9,4,A1:A7)",
    "Tutorial_1": "Sum values ignoring hidden rows.",
    "Tutorial_2": "Find averages excluding errors.",
    "Tutorial_3": "Determine min/max while ignoring error values.",
    "Tutorial_4": "Aggregate data for filtered records only."
  },
  {
    "id": 10,
    "Function_name": "AMORDEGRC",
    "description_en": "Returns the depreciation for each accounting period by using a depreciation coefficient",
    "Category": "Financial",
    "syntax_en": "AMORDEGRC(cost, date_purchased, first_period, salvage, period, rate, [basis])",
    "example_en": "=AMORDEGRC(10000,\"1-Jan-23\",\"31-Dec-23\",2000,1,0.1)",
    "Tutorial_1": "Depreciate asset cost each period.",
    "Tutorial_2": "Manage fixed-asset accounting depreciation.",
    "Tutorial_3": "Schedule equipment depreciation expenses.",
    "Tutorial_4": "Financial reporting for asset lifecycle."
  },
  {
    "id": 11,
    "Function_name": "AMORLINC",
    "description_en": "Returns the depreciation for each accounting period",
    "Category": "Financial",
    "syntax_en": "AMORLINC(cost, date_purchased, first_period, salvage, period, rate, [basis])",
    "example_en": "=AMORLINC(8000,\"1-Jan-23\",\"31-Dec-23\",1000,1,0.2)",
    "Tutorial_1": "Straight-line asset depreciation calculation.",
    "Tutorial_2": "Accounting entries for asset depreciation.",
    "Tutorial_3": "Project financial asset depreciation.",
    "Tutorial_4": "Manage budget depreciation allocation."
  },
  {
    "id": 12,
    "Function_name": "AND",
    "description_en": "Returns TRUE if all of its arguments are TRUE",
    "Category": "Logical",
    "syntax_en": "AND(logical1, [logical2],...)",
    "example_en": "=AND(A1>0,A1<5)",
    "Tutorial_1": "Check multiple conditions at once.",
    "Tutorial_2": "Validate data entry forms.",
    "Tutorial_3": "Approve loans if criteria match multiple rules.",
    "Tutorial_4": "Automate report filtering."
  },
  {
    "id": 13,
    "Function_name": "ARABIC",
    "description_en": "Converts a Roman number to Arabic, as a number",
    "Category": "Math and trigonometry",
    "syntax_en": "ARABIC(text)",
    "example_en": "=ARABIC(\"XV\")",
    "Tutorial_1": "Convert Roman numerals to Arabic numbers.",
    "Tutorial_2": "Use in historical data conversion.",
    "Tutorial_3": "Process Roman numeral data in lists.",
    "Tutorial_4": "Automate numeric conversions for reports."
  },
  {
    "id": 14,
    "Function_name": "AREAS",
    "description_en": "Returns the number of areas in a reference",
    "Category": "Lookup and reference",
    "syntax_en": "AREAS(reference)",
    "example_en": "=AREAS((A1:B2,C3:D4))",
    "Tutorial_1": "Count areas in multiple references.",
    "Tutorial_2": "Analyze complex data range selections.",
    "Tutorial_3": "Audit multiple selected ranges.",
    "Tutorial_4": "Check report data continuity."
  },
  {
    "id": 15,
    "Function_name": "ARRAYTOTEXT",
    "description_en": "Returns an array of text values from any specified range",
    "Category": "Text",
    "syntax_en": "ARRAYTOTEXT(array, [format])",
    "example_en": "=ARRAYTOTEXT(A1:C3)",
    "Tutorial_1": "Convert array data into readable text.",
    "Tutorial_2": "Generate readable logs from arrays.",
    "Tutorial_3": "Prepare text-based reports from numeric arrays.",
    "Tutorial_4": "Automate messaging from Excel data arrays."
  },
  {
    "id": 16,
    "Function_name": "ASC",
    "description_en": "Changes full-width (double-byte) English letters or katakana within a character string to half-width (single-byte) characters",
    "Category": "Text",
    "syntax_en": "ASC(text)",
    "example_en": "=ASC(\"????\")",
    "Tutorial_1": "Convert double-byte to single-byte characters.",
    "Tutorial_2": "Standardize imported Asian character data.",
    "Tutorial_3": "Prepare text data for database uploads.",
    "Tutorial_4": "Cleanse and format multilingual data sets."
  },
  {
    "id": 17,
    "Function_name": "ASIN",
    "description_en": "Returns the arcsine of a number",
    "Category": "Math and trigonometry",
    "syntax_en": "ASIN(number)",
    "example_en": "=ASIN(0.5)",
    "Tutorial_1": "Find angles from sine values.",
    "Tutorial_2": "Solve geometry problems.",
    "Tutorial_3": "Compute engineering angles.",
    "Tutorial_4": "Analyze trigonometric data."
  },
  {
    "id": 18,
    "Function_name": "ASINH",
    "description_en": "Returns the inverse hyperbolic sine of a number",
    "Category": "Math and trigonometry",
    "syntax_en": "ASINH(number)",
    "example_en": "=ASINH(2)",
    "Tutorial_1": "Solve hyperbolic inverse sine equations.",
    "Tutorial_2": "Engineering calculations involving hyperbolic functions.",
    "Tutorial_3": "Advanced math models.",
    "Tutorial_4": "Physics simulation computations."
  },
  {
    "id": 19,
    "Function_name": "ATAN",
    "description_en": "Returns the arctangent of a number",
    "Category": "Math and trigonometry",
    "syntax_en": "ATAN(number)",
    "example_en": "=ATAN(1)",
    "Tutorial_1": "Calculate angles from tangent values.",
    "Tutorial_2": "Engineering angle measurement.",
    "Tutorial_3": "Geometry problem-solving.",
    "Tutorial_4": "Data analysis in trigonometry."
  },
  {
    "id": 20,
    "Function_name": "ATAN2",
    "description_en": "Returns the arctangent from x- and y-coordinates",
    "Category": "Math and trigonometry",
    "syntax_en": "ATAN2(x_num, y_num)",
    "example_en": "=ATAN2(4,3)",
    "Tutorial_1": "Find directional angles in coordinate geometry.",
    "Tutorial_2": "Compute bearings from coordinate data.",
    "Tutorial_3": "Robotics angle computations.",
    "Tutorial_4": "Physics vector angle analysis."
  },
  {
    "id": 21,
    "Function_name": "ATANH",
    "description_en": "Returns the inverse hyperbolic tangent of a number",
    "Category": "Math and trigonometry",
    "syntax_en": "ATANH(number)",
    "example_en": "=ATANH(0.3)",
    "Tutorial_1": "Calculate inverse hyperbolic tangent.",
    "Tutorial_2": "Engineering model simulations.",
    "Tutorial_3": "Math modeling scenarios.",
    "Tutorial_4": "Physics computations."
  },
  {
    "id": 22,
    "Function_name": "AVEDEV",
    "description_en": "Returns the average of the absolute deviations of data points from their mean",
    "Category": "Statistical",
    "syntax_en": "AVEDEV(number1,[number2],...)",
    "example_en": "=AVEDEV(A1:A6)",
    "Tutorial_1": "Measure average deviation in data.",
    "Tutorial_2": "Statistical analysis of sales variance.",
    "Tutorial_3": "Check quality control variations.",
    "Tutorial_4": "Evaluate average fluctuations in finance."
  },
  {
    "id": 23,
    "Function_name": "AVERAGE",
    "description_en": "Returns the average of its arguments",
    "Category": "Statistical",
    "syntax_en": "AVERAGE(number1,[number2],...)",
    "example_en": "=AVERAGE(B1:B16)",
    "Tutorial_1": "Compute student grade averages.",
    "Tutorial_2": "Calculate monthly temperature averages.",
    "Tutorial_3": "Determine average employee productivity.",
    "Tutorial_4": "Find average revenue per quarter."
  },
  {
    "id": 24,
    "Function_name": "AVERAGEA",
    "description_en": "Returns the average of its arguments, including numbers, text, and logical values",
    "Category": "Statistical",
    "syntax_en": "AVERAGEA(value1,[value2],...)",
    "example_en": "=AVERAGEA(A1:A1)",
    "Tutorial_1": "Average mixed data including text as zero.",
    "Tutorial_2": "Data cleaning before analysis.",
    "Tutorial_3": "Include logical values in averages.",
    "Tutorial_4": "Analyze survey data with mixed responses."
  },
  {
    "id": 25,
    "Function_name": "AVERAGEIF",
    "description_en": "Returns the average (arithmetic mean) of all the cells in a range that meet a given criteria",
    "Category": "Statistical",
    "syntax_en": "AVERAGEIF(range, criteria, [average_range])",
    "example_en": "=AVERAGEIF(A1:A6,\">50\")",
    "Tutorial_1": "Average sales above a certain threshold.",
    "Tutorial_2": "Compute average performance above targets.",
    "Tutorial_3": "Find average scores meeting criteria.",
    "Tutorial_4": "Calculate average response time below a limit."
  },
  {
    "id": 26,
    "Function_name": "AVERAGEIFS",
    "description_en": "Returns the average (arithmetic mean) of all cells that meet multiple criteria.",
    "Category": "Statistical",
    "syntax_en": "AVERAGEIFS(average_range, criteria_range1, criteria1,...)",
    "example_en": "=AVERAGEIFS(C1:C6,A1:A6,\"John\",B1:B6,\">50\")",
    "Tutorial_1": "Calculate average sales by salesperson.",
    "Tutorial_2": "Evaluate average scores across multiple criteria.",
    "Tutorial_3": "Analyze data sets filtered by date and category.",
    "Tutorial_4": "Determine average expenses by department and month."
  },
  {
    "id": 27,
    "Function_name": "BAHTTEXT",
    "description_en": "Converts a number to text, using the ÃŸ (baht) currency format",
    "Category": "Text",
    "syntax_en": "BAHTTEXT(number)",
    "example_en": "=BAHTTEXT(1234)",
    "Tutorial_1": "Convert numbers into Thai Baht currency text.",
    "Tutorial_2": "Generate payment slips in Thai language.",
    "Tutorial_3": "Automate Thai financial reports.",
    "Tutorial_4": "Prepare invoices for Thai customers."
  },
  {
    "id": 28,
    "Function_name": "BASE",
    "description_en": "Converts a number into a text representation with the given radix (base)",
    "Category": "Math and trigonometry",
    "syntax_en": "BASE(number, radix, [min_length])",
    "example_en": "=BASE(10,2)",
    "Tutorial_1": "Convert decimal to binary representation.",
    "Tutorial_2": "Generate hexadecimal codes for colors.",
    "Tutorial_3": "Convert numbers to octal/base-8 format.",
    "Tutorial_4": "Programming numeric conversions."
  },
  {
    "id": 29,
    "Function_name": "BESSELI",
    "description_en": "Returns the modified Bessel function In(x)",
    "Category": "Engineering",
    "syntax_en": "BESSELI(x, n)",
    "example_en": "=BESSELI(1.5,2)",
    "Tutorial_1": "Calculate modified Bessel functions in engineering.",
    "Tutorial_2": "Solve heat conduction equations.",
    "Tutorial_3": "Compute electromagnetic wave solutions.",
    "Tutorial_4": "Physics research simulations."
  },
  {
    "id": 30,
    "Function_name": "BESSELJ",
    "description_en": "Returns the Bessel function Jn(x)",
    "Category": "Engineering",
    "syntax_en": "BESSELJ(x, n)",
    "example_en": "=BESSELJ(2,1)",
    "Tutorial_1": "Evaluate Bessel functions in physics.",
    "Tutorial_2": "Solve vibration problems.",
    "Tutorial_3": "Acoustics and wave analysis computations.",
    "Tutorial_4": "Mathematical modeling of circular systems."
  },
  {
    "id": 31,
    "Function_name": "BESSELK",
    "description_en": "Returns the modified Bessel function Kn(x)",
    "Category": "Engineering",
    "syntax_en": "BESSELK(x, n)",
    "example_en": "=BESSELK(3,0)",
    "Tutorial_1": "Solve modified Bessel equations in physics.",
    "Tutorial_2": "Engineering stress analysis.",
    "Tutorial_3": "Calculate electromagnetic propagation.",
    "Tutorial_4": "Model fluid dynamics phenomena."
  },
  {
    "id": 32,
    "Function_name": "BESSELY",
    "description_en": "Returns the Bessel function Yn(x)",
    "Category": "Engineering",
    "syntax_en": "BESSELY(x, n)",
    "example_en": "=BESSELY(4,2)",
    "Tutorial_1": "Calculate Bessel functions of the second kind.",
    "Tutorial_2": "Analyze wave diffraction problems.",
    "Tutorial_3": "Solve complex physical system equations.",
    "Tutorial_4": "Engineering and acoustic wave modeling."
  },
  {
    "id": 33,
    "Function_name": "BETA.DIST",
    "description_en": "Returns the beta cumulative distribution function",
    "Category": "Statistical",
    "syntax_en": "BETA.DIST(x,alpha,beta,cumulative,[A],[B])",
    "example_en": "=BETA.DIST(0.4,3,4,TRUE)",
    "Tutorial_1": "Evaluate cumulative beta distributions.",
    "Tutorial_2": "Analyze probability of events.",
    "Tutorial_3": "Quality management statistical evaluation.",
    "Tutorial_4": "Estimate project completion probabilities."
  },
  {
    "id": 34,
    "Function_name": "BETA.INVn",
    "description_en": "Returns the inverse of the cumulative distribution function for a specified beta distribution",
    "Category": "Statistical",
    "syntax_en": "BETA.INV(probability,alpha,beta,[A],[B])",
    "example_en": "=BETA.INV(0.75,4,5)",
    "Tutorial_1": "Inverse beta distribution calculations.",
    "Tutorial_2": "Statistical hypothesis testing.",
    "Tutorial_3": "Estimate optimal production rates.",
    "Tutorial_4": "Budget risk management analysis."
  },
  {
    "id": 35,
    "Function_name": "BETADIST",
    "description_en": "Returns the beta cumulative distribution function",
    "Category": "Compatibility",
    "syntax_en": "BETADIST(x,alpha,beta,[A],[B])",
    "example_en": "=BETADIST(0.5,2,3)",
    "Tutorial_1": "Probability distributions in statistical analysis.",
    "Tutorial_2": "Analyze risk and uncertainty in projects.",
    "Tutorial_3": "Predict sales patterns.",
    "Tutorial_4": "Quality control statistics."
  },
  {
    "id": 36,
    "Function_name": "BETAINV",
    "description_en": "Returns the inverse of the cumulative distribution function for a specified beta distribution",
    "Category": "Compatibility",
    "syntax_en": "BETAINV(probability,alpha,beta,[A],[B])",
    "example_en": "=BETAINV(0.9,2,3)",
    "Tutorial_1": "Find critical values in beta distribution analysis.",
    "Tutorial_2": "Risk management thresholds.",
    "Tutorial_3": "Statistical decision making.",
    "Tutorial_4": "Project resource allocation decisions."
  },
  {
    "id": 37,
    "Function_name": "BIN2DEC",
    "description_en": "Converts a binary number to decimal",
    "Category": "Engineering",
    "syntax_en": "BIN2DEC(number)",
    "example_en": "=BIN2DEC(\"1101\")",
    "Tutorial_1": "Convert binary values to decimal numbers.",
    "Tutorial_2": "Analyze binary data from sensors.",
    "Tutorial_3": "Interpret binary coded data logs.",
    "Tutorial_4": "Educational use for teaching binary concepts."
  },
  {
    "id": 38,
    "Function_name": "BIN2HEX",
    "description_en": "Converts a binary number to hexadecimal",
    "Category": "Engineering",
    "syntax_en": "BIN2HEX(number, [places])",
    "example_en": "=BIN2HEX(\"1010\")",
    "Tutorial_1": "Convert binary numbers to hexadecimal values.",
    "Tutorial_2": "Software development data processing.",
    "Tutorial_3": "Analyze hardware-generated data.",
    "Tutorial_4": "Educational demonstrations of numeric systems."
  },
  {
    "id": 39,
    "Function_name": "BIN2OCT",
    "description_en": "Converts a binary number to octal",
    "Category": "Engineering",
    "syntax_en": "BIN2OCT(number, [places])",
    "example_en": "=BIN2OCT(\"111\")",
    "Tutorial_1": "Convert binary numbers to octal values.",
    "Tutorial_2": "Work with legacy computer systems.",
    "Tutorial_3": "Manage numeric system conversions.",
    "Tutorial_4": "Learning and teaching numeric systems."
  },
  {
    "id": 40,
    "Function_name": "BINOM.DIST",
    "description_en": "Returns the individual term binomial distribution probability",
    "Category": "Statistical",
    "syntax_en": "BINOM.DIST(number_s, trials, probability_s, cumulative)",
    "example_en": "=BINOM.DIST(5,12,0.4,TRUE)",
    "Tutorial_1": "Evaluate cumulative binomial probabilities.",
    "Tutorial_2": "Predict outcomes in marketing campaigns.",
    "Tutorial_3": "Quality assurance defect analysis.",
    "Tutorial_4": "Statistical evaluation of survey responses."
  },
  {
    "id": 41,
    "Function_name": "BINOM.DIST.RANGE",
    "description_en": "Returns the probability of a trial result using a binomial distribution",
    "Category": "Statistical",
    "syntax_en": "BINOM.DIST.RANGE(trials, probability_s, number_s, [number_s2])",
    "example_en": "=BINOM.DIST.RANGE(10,0.5,3,6)",
    "Tutorial_1": "Probability of results within a specific range.",
    "Tutorial_2": "Project management risk evaluation.",
    "Tutorial_3": "Statistical modeling of event outcomes.",
    "Tutorial_4": "Evaluating scenario-based probabilities."
  },
  {
    "id": 42,
    "Function_name": "BINOM.INV",
    "description_en": "Returns the smallest value for which the cumulative binomial distribution is less than or equal to a criterion value",
    "Category": "Statistical",
    "syntax_en": "BINOM.INV(trials, probability_s, alpha)",
    "example_en": "=BINOM.INV(100,0.5,0.9)",
    "Tutorial_1": "Determine required successes for given probability.",
    "Tutorial_2": "Risk threshold calculation.",
    "Tutorial_3": "Goal-setting for quality control processes.",
    "Tutorial_4": "Establish criteria for success benchmarks."
  },
  {
    "id": 43,
    "Function_name": "BINOMDIST",
    "description_en": "Returns the individual term binomial distribution probability",
    "Category": "Compatibility",
    "syntax_en": "BINOMDIST(number_s, trials, probability_s, cumulative)",
    "example_en": "=BINOMDIST(3,10,0.5,FALSE)",
    "Tutorial_1": "Compute probabilities in binomial distributions.",
    "Tutorial_2": "Analyze quality control pass rates.",
    "Tutorial_3": "Evaluate the likelihood of test results.",
    "Tutorial_4": "Calculate success rates in product launches."
  },
  {
    "id": 44,
    "Function_name": "BITAND",
    "description_en": "Returns a 'Bitwise And' of two numbers",
    "Category": "Engineering",
    "syntax_en": "BITAND(number1, number2)",
    "example_en": "=BITAND(12,5)",
    "Tutorial_1": "Perform bitwise AND operation.",
    "Tutorial_2": "Analyze binary flags in systems.",
    "Tutorial_3": "Computer programming debugging.",
    "Tutorial_4": "Digital signal processing applications."
  },
  {
    "id": 45,
    "Function_name": "BITLSHIFT",
    "description_en": "Returns a value number shifted left by shift_amount bits",
    "Category": "Engineering",
    "syntax_en": "BITLSHIFT(number, shift_amount)",
    "example_en": "=BITLSHIFT(4,2)",
    "Tutorial_1": "Shift binary bits left by specified places.",
    "Tutorial_2": "Implement efficient binary arithmetic.",
    "Tutorial_3": "Hardware register manipulation.",
    "Tutorial_4": "Data encoding and compression techniques."
  },
  {
    "id": 46,
    "Function_name": "BITOR",
    "description_en": "Returns a bitwise OR of 2 numbers",
    "Category": "Engineering",
    "syntax_en": "BITOR(number1, number2)",
    "example_en": "=BITOR(3,6)",
    "Tutorial_1": "Perform bitwise OR operation.",
    "Tutorial_2": "Set binary configuration flags.",
    "Tutorial_3": "Analyze hardware register status.",
    "Tutorial_4": "Manage software feature toggles."
  },
  {
    "id": 47,
    "Function_name": "BITRSHIFT",
    "description_en": "Returns a value number shifted right by shift_amount bits",
    "Category": "Engineering",
    "syntax_en": "BITRSHIFT(number, shift_amount)",
    "example_en": "=BITRSHIFT(16,3)",
    "Tutorial_1": "Shift binary bits right by specified places.",
    "Tutorial_2": "Efficient division by powers of two.",
    "Tutorial_3": "Bitwise analysis in programming.",
    "Tutorial_4": "Binary data interpretation in systems."
  },
  {
    "id": 48,
    "Function_name": "BITXOR",
    "description_en": "Returns a bitwise 'Exclusive Or' of two numbers",
    "Category": "Engineering",
    "syntax_en": "BITXOR(number1, number2)",
    "example_en": "=BITXOR(7,5)",
    "Tutorial_1": "Perform bitwise XOR operation.",
    "Tutorial_2": "Data encryption and masking.",
    "Tutorial_3": "Identify bitwise differences in signals.",
    "Tutorial_4": "Error detection and data verification."
  },
  {
    "id": 49,
    "Function_name": "BYCOL",
    "description_en": "Applies aÂ LAMBDAÂ to each column and returns an array of the results",
    "Category": "Logical",
    "syntax_en": "BYCOL(array, lambda)",
    "example_en": "=BYCOL(A1:C3,LAMBDA(column,SUM(column)))",
    "Tutorial_1": "Apply functions column-wise dynamically.",
    "Tutorial_2": "Calculate column totals quickly.",
    "Tutorial_3": "Statistical summaries of survey data columns.",
    "Tutorial_4": "Automate data aggregation vertically."
  },
  {
    "id": 50,
    "Function_name": "BYROW",
    "description_en": "Applies aÂ LAMBDAÂ to each row and returns an array of the results",
    "Category": "Logical",
    "syntax_en": "BYROW(array, lambda)",
    "example_en": "=BYROW(A1:C3,LAMBDA(row,AVERAGE(row)))",
    "Tutorial_1": "Apply functions row-wise dynamically.",
    "Tutorial_2": "Compute row-wise average scores.",
    "Tutorial_3": "Quickly analyze row totals for budgets.",
    "Tutorial_4": "Automate horizontal data summarization."
  },
  {
    "id": 51,
    "Function_name": "CALL",
    "description_en": "Calls a procedure in a dynamic link library or code resource",
    "Category": "Add-in and Automation",
    "syntax_en": "CALL(module_text, procedure, type_text, [argument1],...)",
    "example_en": "=CALL(\"USER32\",\"MessageBoxA\",\"JJCC\",\"\",0)",
    "Tutorial_1": "Execute external library procedures.",
    "Tutorial_2": "Integrate Excel with external APIs.",
    "Tutorial_3": "Advanced data processing via external scripts.",
    "Tutorial_4": "Custom automation and macros integration."
  },
  {
    "id": 52,
    "Function_name": "CEILING",
    "description_en": "Rounds a number to the nearest integer or to the nearest multiple of significance",
    "Category": "Compatibility",
    "syntax_en": "CEILING(number, significance)",
    "example_en": "=CEILING(4.2,1)",
    "Tutorial_1": "Round numbers up to nearest significance.",
    "Tutorial_2": "Price rounding for retail businesses.",
    "Tutorial_3": "Inventory unit rounding.",
    "Tutorial_4": "Billing increment calculations."
  },
  {
    "id": 53,
    "Function_name": "CEILING.MATH",
    "description_en": "Rounds a number up, to the nearest integer or to the nearest multiple of significance",
    "Category": "Math and trigonometry",
    "syntax_en": "CEILING.MATH(number,[significance],[mode])",
    "example_en": "=CEILING.MATH(-5.7)",
    "Tutorial_1": "Round numbers up using mathematical rules.",
    "Tutorial_2": "Statistical reporting rounding rules.",
    "Tutorial_3": "Financial forecasting rounding scenarios.",
    "Tutorial_4": "Product packaging quantity calculations."
  },
  {
    "id": 54,
    "Function_name": "CEILING.PRECISE",
    "description_en": "Rounds a number the nearest integer or to the nearest multiple of significance. Regardless of the sign of the number, the number is rounded up.",
    "Category": "Math and trigonometry",
    "syntax_en": "CEILING.PRECISE(number,[significance])",
    "example_en": "=CEILING.PRECISE(6.2)",
    "Tutorial_1": "Round numbers up precisely.",
    "Tutorial_2": "Accurate budget forecasting.",
    "Tutorial_3": "Precise measurement conversions.",
    "Tutorial_4": "Strict compliance in financial reports."
  },
  {
    "id": 55,
    "Function_name": "CELL",
    "description_en": "Returns information about the formatting, location, or contents of a cell",
    "Category": "Information",
    "syntax_en": "CELL(info_type,[reference])",
    "example_en": "=CELL(\"address\",A1)",
    "Tutorial_1": "Retrieve detailed cell information.",
    "Tutorial_2": "Create dynamic spreadsheet navigation.",
    "Tutorial_3": "Identify cell formats for audits.",
    "Tutorial_4": "Generate reports on spreadsheet properties."
  },
  {
    "id": 56,
    "Function_name": "CHAR",
    "description_en": "Returns the character specified by the code number",
    "Category": "Text",
    "syntax_en": "CHAR(number)",
    "example_en": "=CHAR(65)",
    "Tutorial_1": "Return character based on ASCII code.",
    "Tutorial_2": "Convert numeric data to text labels.",
    "Tutorial_3": "Automate labeling from numeric codes.",
    "Tutorial_4": "Generate special symbols for formatting."
  },
  {
    "id": 57,
    "Function_name": "CHIDIST",
    "description_en": "Returns the one-tailed probability of the chi-squared distribution",
    "Category": "Compatibility",
    "syntax_en": "CHIDIST(x, degrees_freedom)",
    "example_en": "=CHIDIST(5.2, 2)",
    "Tutorial_1": "Statistical hypothesis testing.",
    "Tutorial_2": "Chi-square test on survey data.",
    "Tutorial_3": "Analyze variance in experimental data.",
    "Tutorial_4": "Evaluate quality assurance outcomes."
  },
  {
    "id": 58,
    "Function_name": "CHIINV",
    "description_en": "Returns the inverse of the one-tailed probability of the chi-squared distribution",
    "Category": "Compatibility",
    "syntax_en": "CHIINV(probability, degrees_freedom)",
    "example_en": "=CHIINV(0.05, 10)",
    "Tutorial_1": "Critical value for Chi-square tests.",
    "Tutorial_2": "Set significance levels for research.",
    "Tutorial_3": "Threshold analysis in market surveys.",
    "Tutorial_4": "Quality control statistical limits."
  },
  {
    "id": 59,
    "Function_name": "CHISQ.DIST",
    "description_en": "Returns the cumulative beta probability density function",
    "Category": "Statistical",
    "syntax_en": "CHISQ.DIST(x, degrees_freedom, cumulative)",
    "example_en": "=CHISQ.DIST(3,5,TRUE)",
    "Tutorial_1": "Probability distribution evaluation.",
    "Tutorial_2": "Perform hypothesis testing.",
    "Tutorial_3": "Quality assurance assessments.",
    "Tutorial_4": "Statistical data analysis in research."
  },
  {
    "id": 60,
    "Function_name": "CHISQ.DIST.RT",
    "description_en": "Returns the one-tailed probability of the chi-squared distribution",
    "Category": "Statistical",
    "syntax_en": "CHISQ.DIST.RT(x, degrees_freedom)",
    "example_en": "=CHISQ.DIST.RT(4,3)",
    "Tutorial_1": "Right-tailed Chi-square probability calculation.",
    "Tutorial_2": "Statistical evaluation of anomalies.",
    "Tutorial_3": "Significance testing in quality management.",
    "Tutorial_4": "Analyze rare event probabilities."
  },
  {
    "id": 61,
    "Function_name": "CHISQ.INV",
    "description_en": "Returns the cumulative beta probability density function",
    "Category": "Statistical",
    "syntax_en": "CHISQ.INV(probability, degrees_freedom)",
    "example_en": "=CHISQ.INV(0.95,2)",
    "Tutorial_1": "Determine critical Chi-square values.",
    "Tutorial_2": "Statistical threshold setup.",
    "Tutorial_3": "Identify cutoff values for research data.",
    "Tutorial_4": "Quality assurance acceptance criteria."
  },
  {
    "id": 62,
    "Function_name": "CHISQ.INV.RT",
    "description_en": "Returns the inverse of the one-tailed probability of the chi-squared distribution",
    "Category": "Statistical",
    "syntax_en": "CHISQ.INV.RT(probability, degrees_freedom)",
    "example_en": "=CHISQ.INV.RT(0.05,3)",
    "Tutorial_1": "Right-tail inverse Chi-square values.",
    "Tutorial_2": "Risk assessment for decision-making.",
    "Tutorial_3": "Set upper statistical control limits.",
    "Tutorial_4": "Analyze critical outcomes in experiments."
  },
  {
    "id": 63,
    "Function_name": "CHISQ.TEST",
    "description_en": "Returns the test for independence",
    "Category": "Statistical",
    "syntax_en": "CHISQ.TEST(actual_range, expected_range)",
    "example_en": "=CHISQ.TEST(A1:A1,B1:B1)",
    "Tutorial_1": "Validate expected frequencies in experiments.",
    "Tutorial_2": "Evaluate deviations in market behavior.",
    "Tutorial_3": "Analyze distribution fit in product testing.",
    "Tutorial_4": "Confirm statistical consistency in audits."
  },
  {
    "id": 64,
    "Function_name": "CHITEST",
    "description_en": "Returns the test for independence",
    "Category": "Compatibility",
    "syntax_en": "CHITEST(actual_range, expected_range)",
    "example_en": "=CHITEST(A2:A6,B2:B6)",
    "Tutorial_1": "Compare actual vs. expected results.",
    "Tutorial_2": "Evaluate market research accuracy.",
    "Tutorial_3": "Verify distributions of survey results.",
    "Tutorial_4": "Determine fit between observed and predicted data."
  },
  {
    "id": 65,
    "Function_name": "CHOOSE",
    "description_en": "Chooses a value from a list of values",
    "Category": "Lookup and reference",
    "syntax_en": "CHOOSE(index_num, value1, [value2],...)",
    "example_en": "=CHOOSE(2,\"Red\",\"Blue\",\"Green\")",
    "Tutorial_1": "Dynamically select product categories.",
    "Tutorial_2": "Automate monthly report labels.",
    "Tutorial_3": "Conditional selection in pricing models.",
    "Tutorial_4": "Interactive scenario analysis."
  },
  {
    "id": 66,
    "Function_name": "CHOOSECOLS",
    "description_en": "Returns the specified columns from an array",
    "Category": "Lookup and reference",
    "syntax_en": "CHOOSECOLS(array, col_num1,[col_num2],...)",
    "example_en": "=CHOOSECOLS(A1:C3,1,3)",
    "Tutorial_1": "Extract specific columns quickly.",
    "Tutorial_2": "Rearrange columns dynamically.",
    "Tutorial_3": "Filter columns for reporting.",
    "Tutorial_4": "Data transformation for exports."
  },
  {
    "id": 67,
    "Function_name": "CHOOSEROWS",
    "description_en": "Returns the specified rows from an array",
    "Category": "Lookup and reference",
    "syntax_en": "CHOOSEROWS(array, row_num1,[row_num2],...)",
    "example_en": "=CHOOSEROWS(A1:D6,1,5)",
    "Tutorial_1": "Select key rows from data tables.",
    "Tutorial_2": "Dynamic row filtering in dashboards.",
    "Tutorial_3": "Report summary preparation.",
    "Tutorial_4": "Extract data subsets for analysis."
  },
  {
    "id": 68,
    "Function_name": "CLEAN",
    "description_en": "Removes all nonprintable characters from text",
    "Category": "Text",
    "syntax_en": "CLEAN(text)",
    "example_en": "=CLEAN(A1)",
    "Tutorial_1": "Remove unwanted characters.",
    "Tutorial_2": "Clean up imported text data.",
    "Tutorial_3": "Prepare text for database insertion.",
    "Tutorial_4": "Data sanitization for reports."
  },
  {
    "id": 69,
    "Function_name": "CODE",
    "description_en": "Returns a numeric code for the first character in a text string",
    "Category": "Text",
    "syntax_en": "CODE(text)",
    "example_en": "=CODE(\"A\")",
    "Tutorial_1": "Retrieve ASCII code for characters.",
    "Tutorial_2": "Text data analysis.",
    "Tutorial_3": "Identify special character codes.",
    "Tutorial_4": "Automate data encoding tasks."
  },
  {
    "id": 70,
    "Function_name": "COLUMN",
    "description_en": "Returns the column number of a reference",
    "Category": "Lookup and reference",
    "syntax_en": "COLUMN([reference])",
    "example_en": "=COLUMN(C1)",
    "Tutorial_1": "Identify column number dynamically.",
    "Tutorial_2": "Spreadsheet navigation assistance.",
    "Tutorial_3": "Formula-based data extraction.",
    "Tutorial_4": "Automate column references in reports."
  },
  {
    "id": 71,
    "Function_name": "COLUMNS",
    "description_en": "Returns the number of columns in a reference",
    "Category": "Lookup and reference",
    "syntax_en": "COLUMNS(array)",
    "example_en": "=COLUMNS(A1:C1)",
    "Tutorial_1": "Count columns within a range.",
    "Tutorial_2": "Dynamically manage spreadsheet tables.",
    "Tutorial_3": "Automate range-based calculations.",
    "Tutorial_4": "Analyze width of data sets."
  },
  {
    "id": 72,
    "Function_name": "COMBIN",
    "description_en": "Returns the number of combinations for a given number of objects",
    "Category": "Math and trigonometry",
    "syntax_en": "COMBIN(number, number_chosen)",
    "example_en": "=COMBIN(10,2)",
    "Tutorial_1": "Calculate combinations in probability.",
    "Tutorial_2": "Analyze lottery or gaming odds.",
    "Tutorial_3": "Optimize selection scenarios.",
    "Tutorial_4": "Resource allocation strategies."
  },
  {
    "id": 73,
    "Function_name": "COMBINA",
    "description_en": "Returns the number of combinations with repetitions for a given number of items",
    "Category": "Math and trigonometry",
    "syntax_en": "COMBINA(number, number_chosen)",
    "example_en": "=COMBINA(4,2)",
    "Tutorial_1": "Combinations allowing repetitions.",
    "Tutorial_2": "Product bundle selection analysis.",
    "Tutorial_3": "Optimize repeated choices in menus.",
    "Tutorial_4": "Marketing strategy combination analysis."
  },
  {
    "id": 74,
    "Function_name": "COMPLEX",
    "description_en": "Converts real and imaginary coefficients into a complex number",
    "Category": "Engineering",
    "syntax_en": "COMPLEX(real_num, i_num, [suffix])",
    "example_en": "=COMPLEX(4,5)",
    "Tutorial_1": "Represent complex numbers in calculations.",
    "Tutorial_2": "Electrical engineering calculations.",
    "Tutorial_3": "Analyze signal processing data.",
    "Tutorial_4": "Mathematical modeling involving complex numbers."
  },
  {
    "id": 75,
    "Function_name": "CONCAT",
    "description_en": "Combines the text from multiple ranges and/or strings, but it doesn't provide the delimiter or IgnoreEmpty arguments.",
    "Category": "Text",
    "syntax_en": "CONCAT(text1,[text2],...)",
    "example_en": "=CONCAT(A1,\"-\",B1)",
    "Tutorial_1": "Merge multiple text values efficiently.",
    "Tutorial_2": "Create structured product codes.",
    "Tutorial_3": "Automate customer name formatting.",
    "Tutorial_4": "Consolidate addresses into one cell."
  },
  {
    "id": 76,
    "Function_name": "CONCATENATE",
    "description_en": "Joins two or more text strings into one.",
    "Category": "Text",
    "syntax_en": "CONCATENATE(text1,[text2],...)",
    "example_en": "=CONCATENATE(A74,\" \",B74)",
    "Tutorial_1": "Combine first and last names.",
    "Tutorial_2": "Merge address components into one cell.",
    "Tutorial_3": "Generate product codes from multiple fields.",
    "Tutorial_4": "Create email addresses from names and domains."
  },
  {
    "id": 77,
    "Function_name": "CONFIDENCE",
    "description_en": "Returns the confidence interval for a population mean",
    "Category": "Compatibility",
    "syntax_en": "CONFIDENCE(alpha, standard_dev, size)",
    "example_en": "=CONFIDENCE(0.05,1.2,30)",
    "Tutorial_1": "Statistical confidence interval calculation.",
    "Tutorial_2": "Determine survey reliability.",
    "Tutorial_3": "Estimate margin of error for polling data.",
    "Tutorial_4": "Quality control interval assessments."
  },
  {
    "id": 78,
    "Function_name": "CONFIDENCE.NORM",
    "description_en": "Returns the confidence interval for a population mean",
    "Category": "Statistical",
    "syntax_en": "CONFIDENCE.NORM(alpha, standard_dev, size)",
    "example_en": "=CONFIDENCE.NORM(0.05,2,50)",
    "Tutorial_1": "Calculate confidence intervals for large samples.",
    "Tutorial_2": "Analyze customer satisfaction survey data.",
    "Tutorial_3": "Evaluate reliability of quality audits.",
    "Tutorial_4": "Statistical evaluation of marketing results."
  },
  {
    "id": 79,
    "Function_name": "CONFIDENCE.T",
    "description_en": "Returns the confidence interval for a population mean, using a Student's t distribution",
    "Category": "Statistical",
    "syntax_en": "CONFIDENCE.T(alpha, standard_dev, size)",
    "example_en": "=CONFIDENCE.T(0.05,1.5,20)",
    "Tutorial_1": "Calculate confidence intervals for small samples.",
    "Tutorial_2": "Estimate accuracy of small-group surveys.",
    "Tutorial_3": "Quality assurance in small production batches.",
    "Tutorial_4": "Assess precision in lab measurements."
  },
  {
    "id": 80,
    "Function_name": "CONVERT",
    "description_en": "Converts a number from one measurement system to another",
    "Category": "Engineering",
    "syntax_en": "CONVERT(number, from_unit, to_unit)",
    "example_en": "=CONVERT(10,\"mi\",\"km\")",
    "Tutorial_1": "Convert distances between metric and imperial.",
    "Tutorial_2": "Change weight units in recipe calculations.",
    "Tutorial_3": "Temperature conversions in international reports.",
    "Tutorial_4": "Engineering measurements conversions."
  },
  {
    "id": 81,
    "Function_name": "CORREL",
    "description_en": "Returns the correlation coefficient between two data sets",
    "Category": "Statistical",
    "syntax_en": "CORREL(array1, array2)",
    "example_en": "=CORREL(A1:A3,B1:B3)",
    "Tutorial_1": "Calculate correlation between two datasets.",
    "Tutorial_2": "Analyze sales vs. advertising spend.",
    "Tutorial_3": "Correlation analysis in research data.",
    "Tutorial_4": "Measure stock price movements."
  },
  {
    "id": 82,
    "Function_name": "COS",
    "description_en": "Returns the cosine of a number",
    "Category": "Math and trigonometry",
    "syntax_en": "COS(number)",
    "example_en": "=COS(1.047)",
    "Tutorial_1": "Solve trigonometric angle calculations.",
    "Tutorial_2": "Analyze periodic business data.",
    "Tutorial_3": "Engineering and architectural calculations.",
    "Tutorial_4": "Compute oscillations in physics."
  },
  {
    "id": 83,
    "Function_name": "COSH",
    "description_en": "Returns the hyperbolic cosine of a number",
    "Category": "Math and trigonometry",
    "syntax_en": "COSH(number)",
    "example_en": "=COSH(2)",
    "Tutorial_1": "Hyperbolic cosine for engineering solutions.",
    "Tutorial_2": "Electrical engineering wave calculations.",
    "Tutorial_3": "Physics-based simulations.",
    "Tutorial_4": "Structural load modeling."
  },
  {
    "id": 84,
    "Function_name": "COT",
    "description_en": "Returns the hyperbolic cosine of a number",
    "Category": "Math and trigonometry",
    "syntax_en": "COT(number)",
    "example_en": "=COT(1)",
    "Tutorial_1": "Compute cotangent values in geometry.",
    "Tutorial_2": "Engineering angle calculations.",
    "Tutorial_3": "Analyze trigonometric data trends.",
    "Tutorial_4": "Physics experiments involving angles."
  },
  {
    "id": 85,
    "Function_name": "COTH",
    "description_en": "Returns the cotangent of an angle",
    "Category": "Math and trigonometry",
    "syntax_en": "COTH(number)",
    "example_en": "=COTH(2)",
    "Tutorial_1": "Evaluate hyperbolic cotangent functions.",
    "Tutorial_2": "Advanced engineering computations.",
    "Tutorial_3": "Math models involving hyperbolic functions.",
    "Tutorial_4": "Physics wave analysis."
  },
  {
    "id": 86,
    "Function_name": "COUNT",
    "description_en": "Counts how many numbers are in the list of arguments",
    "Category": "Statistical",
    "syntax_en": "COUNT(value1,[value2],...)",
    "example_en": "=COUNT(A1:A7)",
    "Tutorial_1": "Count numeric cells in a range.",
    "Tutorial_2": "Summarize numeric responses in surveys.",
    "Tutorial_3": "Track numeric entries in sales records.",
    "Tutorial_4": "Audit numeric entries in data reports."
  },
  {
    "id": 87,
    "Function_name": "COUNTA",
    "description_en": "Counts how many values are in the list of arguments",
    "Category": "Statistical",
    "syntax_en": "COUNTA(value1,[value2],...)",
    "example_en": "=COUNTA(B1:B17)",
    "Tutorial_1": "Count non-empty cells in datasets.",
    "Tutorial_2": "Evaluate filled survey responses.",
    "Tutorial_3": "Identify non-empty fields for database exports.",
    "Tutorial_4": "Audit data completeness."
  },
  {
    "id": 88,
    "Function_name": "COUNTBLANK",
    "description_en": "Counts the number of blank cells within a range",
    "Category": "Statistical",
    "syntax_en": "COUNTBLANK(range)",
    "example_en": "=COUNTBLANK(A1:A7)",
    "Tutorial_1": "Count empty cells in a range.",
    "Tutorial_2": "Check missing data in forms.",
    "Tutorial_3": "Audit data completeness in spreadsheets.",
    "Tutorial_4": "Evaluate survey data gaps."
  },
  {
    "id": 89,
    "Function_name": "COUNTIF",
    "description_en": "Counts the number of cells within a range that meet the given criteria",
    "Category": "Statistical",
    "syntax_en": "COUNTIF(range, criteria)",
    "example_en": "=COUNTIF(A1:A17,\">50\")",
    "Tutorial_1": "Count values meeting specific criteria.",
    "Tutorial_2": "Count products sold above a certain quantity.",
    "Tutorial_3": "Count employees exceeding performance goals.",
    "Tutorial_4": "Summarize results of surveys."
  },
  {
    "id": 90,
    "Function_name": "COUNTIFS",
    "description_en": "Counts the number of cells within a range that meet multiple criteria",
    "Category": "Statistical",
    "syntax_en": "COUNTIFS(criteria_range1, criteria1,[criteria_range2, criteria2],...)",
    "example_en": "=COUNTIFS(A1:A7,\"Apple\",B1:B7,\">100\")",
    "Tutorial_1": "Count sales matching multiple criteria.",
    "Tutorial_2": "Evaluate project milestones.",
    "Tutorial_3": "Analyze multi-condition survey responses.",
    "Tutorial_4": "Quality check meeting multiple standards."
  },
  {
    "id": 91,
    "Function_name": "COUPDAYBS",
    "description_en": "Returns the number of days from the beginning of the coupon period to the settlement date",
    "Category": "Financial",
    "syntax_en": "COUPDAYBS(settlement, maturity, frequency, [basis])",
    "example_en": "=COUPDAYBS(\"1-Jan-2024\",\"31-Dec-2025\",2)",
    "Tutorial_1": "Calculate days before settlement to coupon date.",
    "Tutorial_2": "Analyze bond interest schedules.",
    "Tutorial_3": "Financial accounting of bond investments.",
    "Tutorial_4": "Manage coupon payment schedules."
  },
  {
    "id": 92,
    "Function_name": "COUPDAYS",
    "description_en": "Returns the number of days in the coupon period that contains the settlement date",
    "Category": "Financial",
    "syntax_en": "COUPDAYS(settlement, maturity, frequency, [basis])",
    "example_en": "=COUPDAYS(\"1-Mar-2024\",\"1-Mar-2026\",4)",
    "Tutorial_1": "Total days in coupon period.",
    "Tutorial_2": "Bond interest calculations.",
    "Tutorial_3": "Investment income projections.",
    "Tutorial_4": "Financial schedule management."
  },
  {
    "id": 93,
    "Function_name": "COUPDAYSNC",
    "description_en": "Returns the number of days from the settlement date to the next coupon date",
    "Category": "Financial",
    "syntax_en": "COUPDAYSNC(settlement, maturity, frequency, [basis])",
    "example_en": "=COUPDAYSNC(\"1-Apr-2024\",\"1-Apr-2027\",2)",
    "Tutorial_1": "Days from settlement to next coupon date.",
    "Tutorial_2": "Financial forecasting for bonds.",
    "Tutorial_3": "Calculate bond yields accurately.",
    "Tutorial_4": "Manage bond-related accounting entries."
  },
  {
    "id": 94,
    "Function_name": "COUPNCD",
    "description_en": "Returns the next coupon date after the settlement date",
    "Category": "Financial",
    "syntax_en": "COUPNCD(settlement, maturity, frequency, [basis])",
    "example_en": "=COUPNCD(\"1-Jan-2024\",\"1-Jan-2026\",2)",
    "Tutorial_1": "Identify next coupon payment date.",
    "Tutorial_2": "Schedule bond interest payments.",
    "Tutorial_3": "Bond investment cash-flow analysis.",
    "Tutorial_4": "Planning coupon payments in portfolios."
  },
  {
    "id": 95,
    "Function_name": "COUPNUM",
    "description_en": "Returns the number of coupons payable between the settlement date and maturity date",
    "Category": "Financial",
    "syntax_en": "COUPNUM(settlement, maturity, frequency, [basis])",
    "example_en": "=COUPNUM(\"1-Jan-2024\",\"1-Jan-2027\",2)",
    "Tutorial_1": "Count remaining coupon payments.",
    "Tutorial_2": "Investment planning for bondholders.",
    "Tutorial_3": "Forecasting bond investment returns.",
    "Tutorial_4": "Financial management of bond portfolios."
  },
  {
    "id": 96,
    "Function_name": "COUPPCD",
    "description_en": "Returns the previous coupon date before the settlement date",
    "Category": "Financial",
    "syntax_en": "COUPPCD(settlement, maturity, frequency, [basis])",
    "example_en": "=COUPPCD(\"1-Jan-2024\",\"1-Jan-2026\",2)",
    "Tutorial_1": "Previous coupon payment date calculation.",
    "Tutorial_2": "Accounting for bond income.",
    "Tutorial_3": "Tracking bond payment history.",
    "Tutorial_4": "Bond portfolio cash-flow review."
  },
  {
    "id": 97,
    "Function_name": "COVAR",
    "description_en": "Returns covariance, the average of the products of paired deviations",
    "Category": "Compatibility",
    "syntax_en": "COVAR(array1, array2)",
    "example_en": "=COVAR(A1:A7,B1:B7)",
    "Tutorial_1": "Calculate covariance between datasets.",
    "Tutorial_2": "Analyze relationships between variables.",
    "Tutorial_3": "Risk analysis in investment portfolios.",
    "Tutorial_4": "Statistical analysis in economic models."
  },
  {
    "id": 98,
    "Function_name": "COVARIANCE.P",
    "description_en": "Returns covariance, the average of the products of paired deviations",
    "Category": "Statistical",
    "syntax_en": "COVARIANCE.P(array1, array2)",
    "example_en": "=COVARIANCE.P(A1:A7,B1:B7)",
    "Tutorial_1": "Population covariance calculation.",
    "Tutorial_2": "Analyze financial data sets.",
    "Tutorial_3": "Risk assessment in investments.",
    "Tutorial_4": "Statistical relationship evaluation."
  },
  {
    "id": 99,
    "Function_name": "COVARIANCE.S",
    "description_en": "Returns the sample covariance, the average of the products deviations for each data point pair in two data sets",
    "Category": "Statistical",
    "syntax_en": "COVARIANCE.S(array1, array2)",
    "example_en": "=COVARIANCE.S(A1:A8,B1:B8)",
    "Tutorial_1": "Sample covariance calculation.",
    "Tutorial_2": "Research data statistical analysis.",
    "Tutorial_3": "Evaluate variability in market trends.",
    "Tutorial_4": "Compare performance of two investments."
  },
  {
    "id": 100,
    "Function_name": "CRITBINOM",
    "description_en": "Returns the smallest value for which the cumulative binomial distribution is less than or equal to a criterion value",
    "Category": "Compatibility",
    "syntax_en": "CRITBINOM(trials, probability_s, alpha)",
    "example_en": "=CRITBINOM(100,0.5,0.05)",
    "Tutorial_1": "Critical binomial distribution analysis.",
    "Tutorial_2": "Determine minimum success for quality control.",
    "Tutorial_3": "Threshold calculation for testing scenarios.",
    "Tutorial_4": "Establish acceptance criteria in manufacturing."
  },
  {
    "id": 101,
    "Function_name": "CSC",
    "description_en": "Returns the cosecant of an angle",
    "Category": "Math and trigonometry",
    "syntax_en": "CSC(number)",
    "example_en": "=CSC(1.5708)",
    "Tutorial_1": "Calculate cosecant of angles.",
    "Tutorial_2": "Solve geometry problems.",
    "Tutorial_3": "Engineering trigonometry calculations.",
    "Tutorial_4": "Analyze wave functions in physics."
  },
  {
    "id": 102,
    "Function_name": "CSCH",
    "description_en": "Returns the hyperbolic cosecant of an angle",
    "Category": "Math and trigonometry",
    "syntax_en": "CSCH(number)",
    "example_en": "=CSCH(2)",
    "Tutorial_1": "Hyperbolic cosecant calculations.",
    "Tutorial_2": "Advanced engineering modeling.",
    "Tutorial_3": "Physics wave simulations.",
    "Tutorial_4": "Analyze exponential decay processes."
  },
  {
    "id": 103,
    "Function_name": "CUBEKPIMEMBER",
    "description_en": "Returns a key performance indicator (KPI) name, property, and measure, and displays the name and property in the cell. A KPI is a quantifiable measurement, such as monthly gross profit or quarterly employee turnover, used to monitor an organization's performance.",
    "Category": "Cube",
    "syntax_en": "CUBEKPIMEMBER(connection,kpi_name,kpi_property,[caption])",
    "example_en": "=CUBEKPIMEMBER(\"Sales\",\"Profit\",\"Goal\")",
    "Tutorial_1": "Analyze KPI data dynamically.",
    "Tutorial_2": "Dashboard KPI tracking.",
    "Tutorial_3": "Business intelligence KPI reporting.",
    "Tutorial_4": "Real-time performance evaluations."
  },
  {
    "id": 104,
    "Function_name": "CUBEMEMBER",
    "description_en": "Returns a member or tuple in a cube hierarchy. Use to validate that the member or tuple exists in the cube.",
    "Category": "Cube",
    "syntax_en": "CUBEMEMBER(connection,member_expression,[caption])",
    "example_en": "=CUBEMEMBER(\"Sales\",\"[Region].[West]\")",
    "Tutorial_1": "Dynamically link cube data.",
    "Tutorial_2": "Reporting multidimensional data.",
    "Tutorial_3": "Interactive business reports.",
    "Tutorial_4": "OLAP data navigation."
  },
  {
    "id": 105,
    "Function_name": "CUBEMEMBERPROPERTY",
    "description_en": "Returns the value of a member property in the cube. Use to validate that a member name exists within the cube and to return the specified property for this member.",
    "Category": "Cube",
    "syntax_en": "CUBEMEMBERPROPERTY(connection,member_expression,property)",
    "example_en": "=CUBEMEMBERPROPERTY(\"Sales\",\"[Region].[East]\",\"Population\")",
    "Tutorial_1": "Access specific cube member properties.",
    "Tutorial_2": "Region-specific analysis in reporting.",
    "Tutorial_3": "Product property evaluation.",
    "Tutorial_4": "OLAP data property extraction."
  },
  {
    "id": 106,
    "Function_name": "CUBERANKEDMEMBER",
    "description_en": "Returns the nth, or ranked, member in a set. Use to return one or more elements in a set, such as the top sales performer or top 10 students.",
    "Category": "Cube",
    "syntax_en": "CUBERANKEDMEMBER(connection,set_expression,rank,[caption])",
    "example_en": "=CUBERANKEDMEMBER(\"Sales\",\"[Product].Children\",1)",
    "Tutorial_1": "Rank products by sales performance.",
    "Tutorial_2": "Generate top-performing lists.",
    "Tutorial_3": "OLAP data ranking analysis.",
    "Tutorial_4": "Report automation based on rank."
  },
  {
    "id": 107,
    "Function_name": "CUBESET",
    "description_en": "Defines a calculated set of members or tuples by sending a set expression to the cube on the server, which creates the set, and then returns that set to Microsoft Office Excel.",
    "Category": "Cube",
    "syntax_en": "CUBESET(connection,set_expression,[caption],[sort_order],[sort_by])",
    "example_en": "=CUBESET(\"Sales\",\"[Products].Children\",\"Top Products\",1)",
    "Tutorial_1": "Create dynamic sets from OLAP cubes.",
    "Tutorial_2": "Reporting grouped data summaries.",
    "Tutorial_3": "Interactive dashboards.",
    "Tutorial_4": "Multidimensional data filtering."
  },
  {
    "id": 108,
    "Function_name": "CUBESETCOUNT",
    "description_en": "Returns the number of items in a set.",
    "Category": "Cube",
    "syntax_en": "CUBESETCOUNT(set)",
    "example_en": "=CUBESETCOUNT(CUBESET(\"Sales\",\"[Region].Children\"))",
    "Tutorial_1": "Count items in OLAP cube sets.",
    "Tutorial_2": "Dashboard data verification.",
    "Tutorial_3": "Summarize multidimensional data sets.",
    "Tutorial_4": "Evaluate report completeness."
  },
  {
    "id": 109,
    "Function_name": "CUBEVALUE",
    "description_en": "Returns an aggregated value from a cube.",
    "Category": "Cube",
    "syntax_en": "CUBEVALUE(connection,member_expression1,[member_expression2],...)",
    "example_en": "=CUBEVALUE(\"Sales\",\"[Region].[East]\",\"[Year].[2024]\")",
    "Tutorial_1": "Retrieve data from cubes dynamically.",
    "Tutorial_2": "Generate dynamic financial reports.",
    "Tutorial_3": "Real-time data analysis in dashboards.",
    "Tutorial_4": "OLAP data integration in Excel."
  },
  {
    "id": 110,
    "Function_name": "CUMIPMT",
    "description_en": "Returns the cumulative interest paid between two periods",
    "Category": "Financial",
    "syntax_en": "CUMIPMT(rate,nper,pv,start_period,end_period,type)",
    "example_en": "=CUMIPMT(0.05/12,60,10000,1,12,0)",
    "Tutorial_1": "Calculate cumulative loan interest.",
    "Tutorial_2": "Loan repayment planning.",
    "Tutorial_3": "Financial forecasting for loans.",
    "Tutorial_4": "Budgeting interest payments."
  },
  {
    "id": 111,
    "Function_name": "CUMPRINC",
    "description_en": "Returns the cumulative principal paid on a loan between two periods",
    "Category": "Financial",
    "syntax_en": "CUMPRINC(rate,nper,pv,start_period,end_period,type)",
    "example_en": "=CUMPRINC(0.04/12,48,5000,1,12,0)",
    "Tutorial_1": "Compute cumulative principal repayments.",
    "Tutorial_2": "Manage debt repayments.",
    "Tutorial_3": "Budget forecasting for principal payments.",
    "Tutorial_4": "Analyze loan amortization."
  },
  {
    "id": 112,
    "Function_name": "DATE",
    "description_en": "Returns the serial number of a particular date",
    "Category": "Date and time",
    "syntax_en": "DATE(year,month,day)",
    "example_en": "=DATE(2025,12,31)",
    "Tutorial_1": "Create dates from separate values.",
    "Tutorial_2": "Generate dynamic project timelines.",
    "Tutorial_3": "Automate date-driven reports.",
    "Tutorial_4": "Schedule planning in spreadsheets."
  },
  {
    "id": 113,
    "Function_name": "DATEDIF",
    "description_en": "Calculates the number of days, months, or years between two dates. This function is useful in formulas where you need to calculate an age.",
    "Category": "Date and time",
    "syntax_en": "DATEDIF(start_date,end_date,unit)",
    "example_en": "=DATEDIF(\"1-Jan-2023\",\"1-Jan-2024\",\"m\")",
    "Tutorial_1": "Calculate differences between dates.",
    "Tutorial_2": "Age calculation for HR management.",
    "Tutorial_3": "Duration analysis for project planning.",
    "Tutorial_4": "Tenure calculation for employment records."
  },
  {
    "id": 114,
    "Function_name": "DATEVALUE",
    "description_en": "Converts a date in the form of text to a serial number",
    "Category": "Date and time",
    "syntax_en": "DATEVALUE(date_text)",
    "example_en": "=DATEVALUE(\"01/01/2025\")",
    "Tutorial_1": "Convert text dates to numeric format.",
    "Tutorial_2": "Clean imported text dates.",
    "Tutorial_3": "Standardize date formats for analysis.",
    "Tutorial_4": "Automate date parsing from data feeds."
  },
  {
    "id": 115,
    "Function_name": "DAVERAGE",
    "description_en": "Returns the average of selected database entries",
    "Category": "Database",
    "syntax_en": "DAVERAGE(database,field,criteria)",
    "example_en": "=DAVERAGE(A1:C7,\"Salary\",E1:E2)",
    "Tutorial_1": "Calculate averages in databases with criteria.",
    "Tutorial_2": "Employee salary analysis.",
    "Tutorial_3": "Analyze sales average by region.",
    "Tutorial_4": "Financial data summaries with conditions."
  },
  {
    "id": 116,
    "Function_name": "DAY",
    "description_en": "Converts a serial number to a day of the month",
    "Category": "Date and time",
    "syntax_en": "DAY(serial_number)",
    "example_en": "=DAY(\"2024-12-25\")",
    "Tutorial_1": "Extract day number from dates.",
    "Tutorial_2": "Analyze monthly sales data.",
    "Tutorial_3": "Daily reporting automation.",
    "Tutorial_4": "Date-based filtering in analysis."
  },
  {
    "id": 117,
    "Function_name": "DAYS",
    "description_en": "Returns the number of days between two dates",
    "Category": "Date and time",
    "syntax_en": "DAYS(end_date,start_date)",
    "example_en": "=DAYS(\"31-Dec-2025\",\"1-Jan-2025\")",
    "Tutorial_1": "Count total days between two dates.",
    "Tutorial_2": "Project duration calculations.",
    "Tutorial_3": "Countdown to deadlines.",
    "Tutorial_4": "Analyze durations in logistics planning."
  },
  {
    "id": 118,
    "Function_name": "DAYS360",
    "description_en": "Calculates the number of days between two dates based on a 360-day year",
    "Category": "Date and time",
    "syntax_en": "DAYS360(start_date,end_date,[method])",
    "example_en": "=DAYS360(\"1-Jan-2025\",\"31-Dec-2025\")",
    "Tutorial_1": "Financial year calculations.",
    "Tutorial_2": "Loan interest computations.",
    "Tutorial_3": "Accounting period analysis.",
    "Tutorial_4": "Bond payment scheduling."
  },
  {
    "id": 119,
    "Function_name": "DB",
    "description_en": "Returns the depreciation of an asset for a specified period by using the fixed-declining balance method",
    "Category": "Financial",
    "syntax_en": "DB(cost,salvage,life,period,[month])",
    "example_en": "=DB(10000,1000,5,1)",
    "Tutorial_1": "Calculate declining balance depreciation.",
    "Tutorial_2": "Manage asset depreciation schedules.",
    "Tutorial_3": "Budget for asset replacements.",
    "Tutorial_4": "Financial reporting on assets."
  },
  {
    "id": 120,
    "Function_name": "DBCS",
    "description_en": "Changes half-width (single-byte) English letters or katakana within a character string to full-width (double-byte) characters",
    "Category": "Text",
    "syntax_en": "DBCS(text)",
    "example_en": "=DBCS(\"Excel\")",
    "Tutorial_1": "Convert text to double-byte characters.",
    "Tutorial_2": "Multilingual report preparation.",
    "Tutorial_3": "Data migration for Asian databases.",
    "Tutorial_4": "Standardize text encoding."
  },
  {
    "id": 121,
    "Function_name": "DCOUNT",
    "description_en": "Counts the cells that contain numbers in a database",
    "Category": "Database",
    "syntax_en": "DCOUNT(database,field,criteria)",
    "example_en": "=DCOUNT(A1:C7,\"Age\",E1:E2)",
    "Tutorial_1": "Count numeric database entries with criteria.",
    "Tutorial_2": "HR demographics reporting.",
    "Tutorial_3": "Statistical analysis in marketing.",
    "Tutorial_4": "Data filtering counts."
  },
  {
    "id": 122,
    "Function_name": "DCOUNTA",
    "description_en": "Counts nonblank cells in a database",
    "Category": "Database",
    "syntax_en": "DCOUNTA(database,field,criteria)",
    "example_en": "=DCOUNTA(A1:C7,\"Name\",E1:E2)",
    "Tutorial_1": "Count non-empty database entries.",
    "Tutorial_2": "Employee database completeness check.",
    "Tutorial_3": "Inventory management data audits.",
    "Tutorial_4": "CRM data quality assurance."
  },
  {
    "id": 123,
    "Function_name": "DDB",
    "description_en": "Returns the depreciation of an asset for a specified period by using the double-declining balance method or some other method that you specify",
    "Category": "Financial",
    "syntax_en": "DDB(cost,salvage,life,period,[factor])",
    "example_en": "=DDB(5000,200,10,2)",
    "Tutorial_1": "Double declining balance depreciation.",
    "Tutorial_2": "Asset management accounting.",
    "Tutorial_3": "Financial projections for equipment.",
    "Tutorial_4": "Budget allocation for depreciation."
  },
  {
    "id": 124,
    "Function_name": "DEC2BIN",
    "description_en": "Converts a decimal number to binary",
    "Category": "Engineering",
    "syntax_en": "DEC2BIN(number,[places])",
    "example_en": "=DEC2BIN(12)",
    "Tutorial_1": "Convert decimal numbers to binary.",
    "Tutorial_2": "Binary system teaching.",
    "Tutorial_3": "Numeric conversions for computing.",
    "Tutorial_4": "Data encoding tasks."
  },
  {
    "id": 125,
    "Function_name": "DEC2HEX",
    "description_en": "Converts a decimal number to hexadecimal",
    "Category": "Engineering",
    "syntax_en": "DEC2HEX(number,[places])",
    "example_en": "=DEC2HEX(255)",
    "Tutorial_1": "Decimal to hexadecimal conversion.",
    "Tutorial_2": "Web color code generation.",
    "Tutorial_3": "Programming numeric conversions.",
    "Tutorial_4": "Data preparation for software."
  },
  {
    "id": 126,
    "Function_name": "DEC2OCT",
    "description_en": "Converts a decimal number to octal",
    "Category": "Engineering",
    "syntax_en": "DEC2OCT(number,[places])",
    "example_en": "=DEC2OCT(64)",
    "Tutorial_1": "Decimal to octal conversion.",
    "Tutorial_2": "Legacy system numeric data preparation.",
    "Tutorial_3": "Numeric system demonstrations.",
    "Tutorial_4": "Educational numeric system lessons."
  },
  {
    "id": 127,
    "Function_name": "DECIMAL",
    "description_en": "Converts a text representation of a number in a given base into a decimal number",
    "Category": "Math and trigonometry",
    "syntax_en": "DECIMAL(text,radix)",
    "example_en": "=DECIMAL(\"FF\",16)",
    "Tutorial_1": "Convert number from any base to decimal.",
    "Tutorial_2": "Numeric conversions in software development.",
    "Tutorial_3": "Engineering data interpretation.",
    "Tutorial_4": "Data import and processing."
  },
  {
    "id": 128,
    "Function_name": "DEGREES",
    "description_en": "Converts radians to degrees",
    "Category": "Math and trigonometry",
    "syntax_en": "DEGREES(angle)",
    "example_en": "=DEGREES(PI())",
    "Tutorial_1": "Convert radians to degrees.",
    "Tutorial_2": "Geometry problem-solving.",
    "Tutorial_3": "Engineering angle conversions.",
    "Tutorial_4": "Physics and math calculations."
  },
  {
    "id": 129,
    "Function_name": "DELTA",
    "description_en": "Tests whether two values are equal",
    "Category": "Engineering",
    "syntax_en": "DELTA(number1,[number2])",
    "example_en": "=DELTA(5,5)",
    "Tutorial_1": "Test numeric equality.",
    "Tutorial_2": "Logical tests in calculations.",
    "Tutorial_3": "Engineering tolerance checks.",
    "Tutorial_4": "Data validation comparisons."
  },
  {
    "id": 130,
    "Function_name": "DETECTLANGUAGE",
    "description_en": "Identifies the language of a specified text",
    "Category": "Text",
    "syntax_en": "DETECTLANGUAGE(text)",
    "example_en": "=DETECTLANGUAGE(\"Hello\")",
    "Tutorial_1": "Identify text language automatically.",
    "Tutorial_2": "Multilingual data sorting.",
    "Tutorial_3": "Customer support language routing.",
    "Tutorial_4": "Automate translation workflows."
  },
  {
    "id": 131,
    "Function_name": "DEVSQ",
    "description_en": "Returns the sum of squares of deviations",
    "Category": "Statistical",
    "syntax_en": "DEVSQ(number1,[number2],...)",
    "example_en": "=DEVSQ(A1:A7)",
    "Tutorial_1": "Compute sum of squared deviations.",
    "Tutorial_2": "Statistical variance analysis.",
    "Tutorial_3": "Quality control data evaluation.",
    "Tutorial_4": "Analyze dispersion of test scores."
  },
  {
    "id": 132,
    "Function_name": "DGET",
    "description_en": "Extracts from a database a single record that matches the specified criteria",
    "Category": "Database",
    "syntax_en": "DGET(database,field,criteria)",
    "example_en": "=DGET(A1:C7,\"Salary\",E1:E2)",
    "Tutorial_1": "Retrieve single database record matching criteria.",
    "Tutorial_2": "Employee detail lookups.",
    "Tutorial_3": "Product pricing retrievals.",
    "Tutorial_4": "CRM database querying."
  },
  {
    "id": 133,
    "Function_name": "DISC",
    "description_en": "Returns the discount rate for a security",
    "Category": "Financial",
    "syntax_en": "DISC(settlement,maturity,pr,redemption,[basis])",
    "example_en": "=DISC(\"1-Jan-2025\",\"1-Jan-2026\",98,100)",
    "Tutorial_1": "Calculate discount rates for securities.",
    "Tutorial_2": "Financial investment analysis.",
    "Tutorial_3": "Bond investment evaluations.",
    "Tutorial_4": "Financial reporting accuracy."
  },
  {
    "id": 134,
    "Function_name": "DMAX",
    "description_en": "Returns the maximum value from selected database entries",
    "Category": "Database",
    "syntax_en": "DMAX(database,field,criteria)",
    "example_en": "=DMAX(A1:C7,\"Sales\",E1:E2)",
    "Tutorial_1": "Find maximum database value with criteria.",
    "Tutorial_2": "Sales performance analytics.",
    "Tutorial_3": "HR salary benchmarking.",
    "Tutorial_4": "Inventory maximum stock checks."
  },
  {
    "id": 135,
    "Function_name": "DMIN",
    "description_en": "Returns the minimum value from selected database entries",
    "Category": "Database",
    "syntax_en": "DMIN(database,field,criteria)",
    "example_en": "=DMIN(A1:C7,\"Price\",E1:E2)",
    "Tutorial_1": "Find minimum database value with criteria.",
    "Tutorial_2": "Price evaluation in procurement.",
    "Tutorial_3": "Lowest-performing products identification.",
    "Tutorial_4": "Budgeting minimum-cost analysis."
  },
  {
    "id": 136,
    "Function_name": "DOLLAR",
    "description_en": "Converts a number to text, using the $ (dollar) currency format",
    "Category": "Text",
    "syntax_en": "DOLLAR(number,[decimals])",
    "example_en": "=DOLLAR(1234.56,2)",
    "Tutorial_1": "Format numbers as currency text.",
    "Tutorial_2": "Financial reporting formatting.",
    "Tutorial_3": "Invoice total formatting.",
    "Tutorial_4": "Budget reporting enhancements."
  },
  {
    "id": 137,
    "Function_name": "DOLLARDE",
    "description_en": "Converts a dollar price, expressed as a fraction, into a dollar price, expressed as a decimal number",
    "Category": "Financial",
    "syntax_en": "DOLLARDE(fractional_dollar,fraction)",
    "example_en": "=DOLLARDE(1.02,16)",
    "Tutorial_1": "Convert fractional currency to decimal.",
    "Tutorial_2": "Financial market analysis.",
    "Tutorial_3": "Stock price evaluations.",
    "Tutorial_4": "Bond price conversions."
  },
  {
    "id": 138,
    "Function_name": "DOLLARFR",
    "description_en": "Converts a dollar price, expressed as a decimal number, into a dollar price, expressed as a fraction",
    "Category": "Financial",
    "syntax_en": "DOLLARFR(decimal_dollar,fraction)",
    "example_en": "=DOLLARFR(1.125,8)",
    "Tutorial_1": "Convert decimal currency to fractional.",
    "Tutorial_2": "Financial trading analysis.",
    "Tutorial_3": "Bond market data preparation.",
    "Tutorial_4": "Stock market price representation."
  },
  {
    "id": 139,
    "Function_name": "DPRODUCT",
    "description_en": "Multiplies the values in a particular field of records that match the criteria in a database",
    "Category": "Database",
    "syntax_en": "DPRODUCT(database,field,criteria)",
    "example_en": "=DPRODUCT(A1:C7,\"Quantity\",E1:E2)",
    "Tutorial_1": "Multiply database entries meeting criteria.",
    "Tutorial_2": "Inventory quantity analysis.",
    "Tutorial_3": "Bulk purchasing calculations.",
    "Tutorial_4": "Manufacturing production estimates."
  },
  {
    "id": 140,
    "Function_name": "DROP",
    "description_en": "Excludes a specified number of rows or columns from the start or end of an array",
    "Category": "Lookup and reference",
    "syntax_en": "DROP(array,rows,[columns])",
    "example_en": "=DROP(A1:C2,2)",
    "Tutorial_1": "Remove rows or columns from array data.",
    "Tutorial_2": "Clean datasets for analysis.",
    "Tutorial_3": "Simplify report generation.",
    "Tutorial_4": "Prepare data for visualization."
  },
  {
    "id": 141,
    "Function_name": "DSTDEV",
    "description_en": "Estimates the standard deviation based on a sample of selected database entries",
    "Category": "Database",
    "syntax_en": "DSTDEV(database,field,criteria)",
    "example_en": "=DSTDEV(A1:C7,\"Revenue\",E1:E2)",
    "Tutorial_1": "Database standard deviation sample.",
    "Tutorial_2": "Analyze variability in sales.",
    "Tutorial_3": "Evaluate financial performance metrics.",
    "Tutorial_4": "Statistical quality control."
  },
  {
    "id": 142,
    "Function_name": "DSTDEVP",
    "description_en": "Calculates the standard deviation based on the entire population of selected database entries",
    "Category": "Database",
    "syntax_en": "DSTDEVP(database,field,criteria)",
    "example_en": "=DSTDEVP(A1:C7,\"Cost\",E1:E2)",
    "Tutorial_1": "Database standard deviation population.",
    "Tutorial_2": "Full population sales data analysis.",
    "Tutorial_3": "Cost variability assessment.",
    "Tutorial_4": "Product consistency analysis."
  },
  {
    "id": 143,
    "Function_name": "DSUM",
    "description_en": "Adds the numbers in the field column of records in the database that match the criteria",
    "Category": "Database",
    "syntax_en": "DSUM(database,field,criteria)",
    "example_en": "=DSUM(A1:C7,\"Profit\",E1:E2)",
    "Tutorial_1": "Sum database records meeting criteria.",
    "Tutorial_2": "Profitability analysis per region.",
    "Tutorial_3": "Sales total for specific products.",
    "Tutorial_4": "Budgeting based on departmental data."
  },
  {
    "id": 144,
    "Function_name": "DURATION",
    "description_en": "Returns the annual duration of a security with periodic interest payments",
    "Category": "Financial",
    "syntax_en": "DURATION(settlement,maturity,coupon,yld,frequency,[basis])",
    "example_en": "=DURATION(\"1-Jan-2024\",\"1-Jan-2029\",0.05,0.04,2)",
    "Tutorial_1": "Calculate bond duration sensitivity.",
    "Tutorial_2": "Risk analysis of bond investments.",
    "Tutorial_3": "Financial asset management.",
    "Tutorial_4": "Portfolio duration balancing."
  },
  {
    "id": 145,
    "Function_name": "DVAR",
    "description_en": "Estimates variance based on a sample from selected database entries",
    "Category": "Database",
    "syntax_en": "DVAR(database,field,criteria)",
    "example_en": "=DVAR(A1:C7,\"Sales\",E1:E2)",
    "Tutorial_1": "Sample variance of database.",
    "Tutorial_2": "Evaluate market data variability.",
    "Tutorial_3": "HR data analysis for variability.",
    "Tutorial_4": "Cost management analysis."
  },
  {
    "id": 146,
    "Function_name": "DVARP",
    "description_en": "Calculates variance based on the entire population of selected database entries",
    "Category": "Database",
    "syntax_en": "DVARP(database,field,criteria)",
    "example_en": "=DVARP(A1:C7,\"Price\",E1:E2)",
    "Tutorial_1": "Population variance of database.",
    "Tutorial_2": "Pricing consistency evaluation.",
    "Tutorial_3": "Product performance tracking.",
    "Tutorial_4": "Inventory control analysis."
  },
  {
    "id": 147,
    "Function_name": "EDATE",
    "description_en": "Returns the serial number of the date that is the indicated number of months before or after the start date",
    "Category": "Date and time",
    "syntax_en": "EDATE(start_date,months)",
    "example_en": "=EDATE(\"1-Jan-2024\",6)",
    "Tutorial_1": "Calculate dates after given months.",
    "Tutorial_2": "Subscription renewal scheduling.",
    "Tutorial_3": "Project timeline adjustments.",
    "Tutorial_4": "Inventory reorder scheduling."
  },
  {
    "id": 148,
    "Function_name": "EFFECT",
    "description_en": "Returns the effective annual interest rate",
    "Category": "Financial",
    "syntax_en": "EFFECT(nominal_rate,npery)",
    "example_en": "=EFFECT(0.06,4)",
    "Tutorial_1": "Effective annual interest rate.",
    "Tutorial_2": "Financial loan comparisons.",
    "Tutorial_3": "Investment return analysis.",
    "Tutorial_4": "Savings account rate evaluations."
  },
  {
    "id": 149,
    "Function_name": "ENCODEURL",
    "description_en": "Returns a URL-encoded string",
    "Category": "Web",
    "syntax_en": "ENCODEURL(text)",
    "example_en": "=ENCODEURL(\"https://example.com/query?name'=Excel\")",
    "Tutorial_1": "URL-encode text strings.",
    "Tutorial_2": "Web link generation in spreadsheets.",
    "Tutorial_3": "Integration with web APIs.",
    "Tutorial_4": "Data preparation for web requests."
  },
  {
    "id": 150,
    "Function_name": "EOMONTH",
    "description_en": "Returns the serial number of the last day of the month before or after a specified number of months",
    "Category": "Date and time",
    "syntax_en": "EOMONTH(start_date,months)",
    "example_en": "=EOMONTH(\"1-Jan-2024\",1)",
    "Tutorial_1": "End-of-month date calculation.",
    "Tutorial_2": "Monthly billing cycles.",
    "Tutorial_3": "Financial reporting deadlines.",
    "Tutorial_4": "Payroll date calculations."
  },
  {
    "id": 151,
    "Function_name": "ERF",
    "description_en": "Returns the error function",
    "Category": "Engineering",
    "syntax_en": "ERF(lower_limit,[upper_limit])",
    "example_en": "=ERF(0,1)",
    "Tutorial_1": "Compute error function integrals.",
    "Tutorial_2": "Probability calculations in statistics.",
    "Tutorial_3": "Engineering tolerance analyses.",
    "Tutorial_4": "Quality control assessments."
  },
  {
    "id": 152,
    "Function_name": "ERF.PRECISE",
    "description_en": "Returns the error function",
    "Category": "Engineering",
    "syntax_en": "ERF.PRECISE(x)",
    "example_en": "=ERF.PRECISE(1.5)",
    "Tutorial_1": "High-precision error function.",
    "Tutorial_2": "Advanced statistical analysis.",
    "Tutorial_3": "Engineering simulations.",
    "Tutorial_4": "Scientific research computations."
  },
  {
    "id": 153,
    "Function_name": "ERFC",
    "description_en": "Returns the complementary error function",
    "Category": "Engineering",
    "syntax_en": "ERFC(x)",
    "example_en": "=ERFC(1)",
    "Tutorial_1": "Complementary error function calculations.",
    "Tutorial_2": "Statistical distribution analyses.",
    "Tutorial_3": "Evaluate probability tails.",
    "Tutorial_4": "Scientific experiment analysis."
  },
  {
    "id": 154,
    "Function_name": "ERFC.PRECISE",
    "description_en": "Returns the complementary ERF function integrated between x and infinity",
    "Category": "Engineering",
    "syntax_en": "ERFC.PRECISE(x)",
    "example_en": "=ERFC.PRECISE(2)",
    "Tutorial_1": "Precise complementary error function.",
    "Tutorial_2": "Advanced scientific modeling.",
    "Tutorial_3": "Probability tail assessments.",
    "Tutorial_4": "Physics data analyses."
  },
  {
    "id": 155,
    "Function_name": "ERROR.TYPE",
    "description_en": "Returns a number corresponding to an error type",
    "Category": "Information",
    "syntax_en": "ERROR.TYPE(error_val)",
    "example_en": "=ERROR.TYPE(#DIV/0!)",
    "Tutorial_1": "Identify Excel error types numerically.",
    "Tutorial_2": "Spreadsheet debugging.",
    "Tutorial_3": "Data quality audits.",
    "Tutorial_4": "Error logging automation."
  },
  {
    "id": 156,
    "Function_name": "EUROCONVERT",
    "description_en": "Converts a number to euros, converts a number from euros to a euro member currency, or converts a number from one euro member currency to another by using the euro as an intermediary (triangulation).",
    "Category": "Add-in and Automation",
    "syntax_en": "EUROCONVERT(number,source,target,full_precision,[triangulation_precision])",
    "example_en": "=EUROCONVERT(100,\"DEM\",\"EUR\",FALSE)",
    "Tutorial_1": "Convert legacy currencies to Euros.",
    "Tutorial_2": "Financial reporting in Eurozone.",
    "Tutorial_3": "Historical financial data conversion.",
    "Tutorial_4": "Currency standardization."
  },
  {
    "id": 157,
    "Function_name": "EVEN",
    "description_en": "Rounds a number up to the nearest even integer",
    "Category": "Math and trigonometry",
    "syntax_en": "EVEN(number)",
    "example_en": "=EVEN(5)",
    "Tutorial_1": "Round numbers to nearest even integer.",
    "Tutorial_2": "Inventory packaging calculations.",
    "Tutorial_3": "Batch processing in manufacturing.",
    "Tutorial_4": "Reporting standardization in financial analysis."
  },
  {
    "id": 158,
    "Function_name": "EXACT",
    "description_en": "Checks to see if two text values are identical",
    "Category": "Text",
    "syntax_en": "EXACT(text1,text2)",
    "example_en": "=EXACT(\"Excel\",\"excel\")",
    "Tutorial_1": "Case-sensitive text comparisons.",
    "Tutorial_2": "Data validation checks.",
    "Tutorial_3": "Password verification logic.",
    "Tutorial_4": "Duplicate entry detection."
  },
  {
    "id": 159,
    "Function_name": "EXP",
    "description_en": "ReturnsÂ eÂ raised to the power of a given number",
    "Category": "Math and trigonometry",
    "syntax_en": "EXP(number)",
    "example_en": "=EXP(1)",
    "Tutorial_1": "Calculate exponential values.",
    "Tutorial_2": "Financial growth forecasting.",
    "Tutorial_3": "Population growth modeling.",
    "Tutorial_4": "Continuous interest calculation."
  },
  {
    "id": 160,
    "Function_name": "EXPAND",
    "description_en": "Expands or pads an array to specified row and column dimensions",
    "Category": "Lookup and reference",
    "syntax_en": "EXPAND(array, rows, [columns], [pad_with])",
    "example_en": "=EXPAND(A1:C1,3,3,\"N/A\")",
    "Tutorial_1": "Resize arrays dynamically.",
    "Tutorial_2": "Data formatting for reports.",
    "Tutorial_3": "Standardizing table dimensions.",
    "Tutorial_4": "Prepare data for dashboards."
  },
  {
    "id": 161,
    "Function_name": "EXPON.DIST",
    "description_en": "Returns the exponential distribution",
    "Category": "Statistical",
    "syntax_en": "EXPON.DIST(x,lambda,cumulative)",
    "example_en": "=EXPON.DIST(2,0.5,TRUE)",
    "Tutorial_1": "Exponential distribution probabilities.",
    "Tutorial_2": "Failure rate analysis in products.",
    "Tutorial_3": "Waiting time analyses in queues.",
    "Tutorial_4": "Lifetime expectancy predictions."
  },
  {
    "id": 162,
    "Function_name": "EXPONDIST",
    "description_en": "Returns the exponential distribution",
    "Category": "Compatibility",
    "syntax_en": "EXPONDIST(x,lambda,cumulative)",
    "example_en": "=EXPONDIST(3,0.2,FALSE)",
    "Tutorial_1": "Probability distribution evaluations.",
    "Tutorial_2": "Reliability analyses in engineering.",
    "Tutorial_3": "Risk modeling in operations.",
    "Tutorial_4": "Time-between-events studies."
  },
  {
    "id": 163,
    "Function_name": "F.DIST",
    "description_en": "Returns the F probability distribution",
    "Category": "Statistical",
    "syntax_en": "FDIST(x,deg_freedom1,deg_freedom2)",
    "example_en": "=FDIST(1.5,4,8)",
    "Tutorial_1": "Probability density function for F-distribution.",
    "Tutorial_2": "Analyze variability in research data.",
    "Tutorial_3": "Statistical evaluation in experiments.",
    "Tutorial_4": "Comparing group variances."
  },
  {
    "id": 164,
    "Function_name": "F.DIST.RT",
    "description_en": "Returns the F probability distribution",
    "Category": "Statistical",
    "syntax_en": "F.DIST.RT(x,deg_freedom1,deg_freedom2)",
    "example_en": "=F.DIST.RT(3.5,4,10)",
    "Tutorial_1": "Right-tail F-distribution probabilities.",
    "Tutorial_2": "Statistical test result interpretation.",
    "Tutorial_3": "Determine significance in data analyses.",
    "Tutorial_4": "Research hypothesis evaluations."
  },
  {
    "id": 165,
    "Function_name": "F.INV",
    "description_en": "Returns the inverse of the F probability distribution",
    "Category": "Statistical",
    "syntax_en": "F.INV(probability,deg_freedom1,deg_freedom2)",
    "example_en": "=F.INV(0.05,4,10)",
    "Tutorial_1": "Inverse F-distribution values.",
    "Tutorial_2": "ANOVA threshold determinations.",
    "Tutorial_3": "Critical value analysis in experiments.",
    "Tutorial_4": "Statistical decision-making."
  },
  {
    "id": 166,
    "Function_name": "F.INV.RT",
    "description_en": "Returns the inverse of the F probability distribution",
    "Category": "Statistical",
    "syntax_en": "F.INV.RT(probability,deg_freedom1,deg_freedom2)",
    "example_en": "=F.INV.RT(0.01,5,10)",
    "Tutorial_1": "Right-tail inverse F-distribution calculation.",
    "Tutorial_2": "Risk assessments in research.",
    "Tutorial_3": "Establishing statistical cutoffs.",
    "Tutorial_4": "Variance threshold identification."
  },
  {
    "id": 167,
    "Function_name": "F.TEST",
    "description_en": "Returns the result of an F-test",
    "Category": "Statistical",
    "syntax_en": "F.TEST(array1,array2)",
    "example_en": "=F.TEST(A1:C3,A1:C3)",
    "Tutorial_1": "Variance comparison tests.",
    "Tutorial_2": "Statistical validation in research.",
    "Tutorial_3": "Quality control analysis.",
    "Tutorial_4": "Experimental data comparisons."
  },
  {
    "id": 168,
    "Function_name": "FACT",
    "description_en": "Returns the factorial of a number",
    "Category": "Math and trigonometry",
    "syntax_en": "FACT(number)",
    "example_en": "=FACT(5)",
    "Tutorial_1": "Calculate factorial values.",
    "Tutorial_2": "Probability calculations.",
    "Tutorial_3": "Combinatorial problem solving.",
    "Tutorial_4": "Statistical permutations."
  },
  {
    "id": 169,
    "Function_name": "FACTDOUBLE",
    "description_en": "Returns the double factorial of a number",
    "Category": "Math and trigonometry",
    "syntax_en": "FACTDOUBLE(number)",
    "example_en": "=FACTDOUBLE(7)",
    "Tutorial_1": "Double factorial calculations.",
    "Tutorial_2": "Advanced statistical analyses.",
    "Tutorial_3": "Probability modeling scenarios.",
    "Tutorial_4": "Mathematical sequence computations."
  },
  {
    "id": 170,
    "Function_name": "FDIST",
    "description_en": "Returns the F probability distribution",
    "Category": "Compatibility",
    "syntax_en": "F.DIST(x,deg_freedom1,deg_freedom2,cumulative)",
    "example_en": "=F.DIST(2,10,12,TRUE)",
    "Tutorial_1": "F-distribution for variance analysis.",
    "Tutorial_2": "ANOVA testing scenarios.",
    "Tutorial_3": "Quality control process checks.",
    "Tutorial_4": "Statistical hypothesis testing."
  },
  {
    "id": 171,
    "Function_name": "FILTER",
    "description_en": "Filters a range of data based on criteria you define",
    "Category": "Lookup and reference",
    "syntax_en": "FILTER(array,include,[if_empty])",
    "example_en": "=FILTER(A1:C3,B1:B3>50)",
    "Tutorial_1": "Dynamically filter data sets.",
    "Tutorial_2": "Create dynamic reports.",
    "Tutorial_3": "Real-time dashboard updates.",
    "Tutorial_4": "Conditional data extraction."
  },
  {
    "id": 172,
    "Function_name": "FILTERXML",
    "description_en": "Returns specific data from the XML content by using the specified XPath",
    "Category": "Web",
    "syntax_en": "FILTERXML(xml,xpath)",
    "example_en": "=FILTERXML(\"<data><item>1</item></data>\",\"//item\")",
    "Tutorial_1": "Parse XML data into Excel.",
    "Tutorial_2": "API response processing.",
    "Tutorial_3": "Web-scraping integration.",
    "Tutorial_4": "Automated data feed processing."
  },
  {
    "id": 173,
    "Function_name": "FIND",
    "description_en": "Finds one text value within another (case-sensitive)",
    "Category": "Text",
    "syntax_en": "FIND(find_text, within_text, [start_num])",
    "example_en": "=FIND(\"a\",\"Data\",1)",
    "Tutorial_1": "Locate text within strings.",
    "Tutorial_2": "Text data extraction.",
    "Tutorial_3": "Parsing strings for information.",
    "Tutorial_4": "Data cleanup processes."
  },
  {
    "id": 174,
    "Function_name": "FINDB",
    "description_en": "Finds one text value within another (case-sensitive)",
    "Category": "Text",
    "syntax_en": "FINDB(find_text,within_text,[start_num])",
    "example_en": "=FINDB(\"?\",\"??????\")",
    "Tutorial_1": "Locate text within double-byte strings.",
    "Tutorial_2": "Multilingual data parsing.",
    "Tutorial_3": "Asian language text processing.",
    "Tutorial_4": "Data extraction in global reports."
  },
  {
    "id": 175,
    "Function_name": "FINV",
    "description_en": "Returns the inverse of the F probability distribution",
    "Category": "Compatibility",
    "syntax_en": "FINV(probability,deg_freedom1,deg_freedom2)",
    "example_en": "=FINV(0.05,6,12)",
    "Tutorial_1": "Legacy inverse F-distribution calculation.",
    "Tutorial_2": "Traditional statistical analysis.",
    "Tutorial_3": "Historical data interpretation.",
    "Tutorial_4": "Research data validations."
  },
  {
    "id": 176,
    "Function_name": "FISHER",
    "description_en": "Returns the Fisher transformation",
    "Category": "Statistical",
    "syntax_en": "FISHER(x)",
    "example_en": "=FISHER(0.8)",
    "Tutorial_1": "Fisher transformation for correlation.",
    "Tutorial_2": "Normalize correlation data.",
    "Tutorial_3": "Statistical correlation analysis.",
    "Tutorial_4": "Prepare data for hypothesis testing."
  },
  {
    "id": 177,
    "Function_name": "FISHERINV",
    "description_en": "Returns the inverse of the Fisher transformation",
    "Category": "Statistical",
    "syntax_en": "FISHERINV(y)",
    "example_en": "=FISHERINV(1.1)",
    "Tutorial_1": "Inverse Fisher transformation.",
    "Tutorial_2": "Revert normalized correlations.",
    "Tutorial_3": "Statistical data interpretation.",
    "Tutorial_4": "Convert analysis results back to correlations."
  },
  {
    "id": 178,
    "Function_name": "FIXED",
    "description_en": "Formats a number as text with a fixed number of decimals",
    "Category": "Text",
    "syntax_en": "FIXED(number,[decimals],[no_commas])",
    "example_en": "=FIXED(1234.567,2,FALSE)",
    "Tutorial_1": "Format numbers with fixed decimals.",
    "Tutorial_2": "Financial report formatting.",
    "Tutorial_3": "Invoice data standardization.",
    "Tutorial_4": "Numeric data presentation."
  },
  {
    "id": 179,
    "Function_name": "FLOOR",
    "description_en": "Rounds a number down, toward zero",
    "Category": "Compatibility",
    "syntax_en": "FLOOR(number,significance)",
    "example_en": "=FLOOR(15.7,5)",
    "Tutorial_1": "Round numbers down to nearest multiple.",
    "Tutorial_2": "Inventory unit calculations.",
    "Tutorial_3": "Pricing structures.",
    "Tutorial_4": "Reporting standardization."
  },
  {
    "id": 180,
    "Function_name": "FLOOR.MATH",
    "description_en": "Rounds a number down, to the nearest integer or to the nearest multiple of significance",
    "Category": "Math and trigonometry",
    "syntax_en": "FLOOR.MATH(number,[significance],[mode])",
    "example_en": "=FLOOR.MATH(-2.3)",
    "Tutorial_1": "Mathematical floor rounding.",
    "Tutorial_2": "Data analytics rounding.",
    "Tutorial_3": "Budgeting scenarios.",
    "Tutorial_4": "Sales discount calculations."
  },
  {
    "id": 181,
    "Function_name": "FLOOR.PRECISE",
    "description_en": "Rounds a number the nearest integer or to the nearest multiple of significance. Regardless of the sign of the number, the number is rounded up.",
    "Category": "Math and trigonometry",
    "syntax_en": "FLOOR.PRECISE(number,[significance])",
    "example_en": "=FLOOR.PRECISE(3.7,1)",
    "Tutorial_1": "Precise downward rounding.",
    "Tutorial_2": "Scientific measurement data.",
    "Tutorial_3": "Engineering calculations.",
    "Tutorial_4": "Financial data precision."
  },
  {
    "id": 182,
    "Function_name": "FORECAST",
    "description_en": "Returns a value along a linear trend",
    "Category": "Statistical",
    "syntax_en": "FORECAST(x,known_y's,known_x's)",
    "example_en": "=FORECAST(30,A1:A7,B1:B7)",
    "Tutorial_1": "Sales prediction modeling.",
    "Tutorial_2": "Trend analysis in revenue.",
    "Tutorial_3": "Forecast demand for products.",
    "Tutorial_4": "Financial planning scenarios."
  },
  {
    "id": 183,
    "Function_name": "FORECAST.ETS",
    "description_en": "Returns a future value based on existing (historical) values by using the AAA version of the Exponential Smoothing (ETS) algorithm",
    "Category": "Statistical",
    "syntax_en": "FORECAST.ETS(target_date,values,timeline,[seasonality],[data_completion],[aggregation])",
    "example_en": "=FORECAST.ETS(\"2025-12-31\",B1:B10,A1:A10)",
    "Tutorial_1": "Seasonal sales forecasts.",
    "Tutorial_2": "Demand planning.",
    "Tutorial_3": "Inventory control prediction.",
    "Tutorial_4": "Project future market trends."
  },
  {
    "id": 184,
    "Function_name": "FORECAST.ETS.CONFINT",
    "description_en": "Returns a confidence interval for the forecast value at the specified target date",
    "Category": "Statistical",
    "syntax_en": "FORECAST.ETS.CONFINT(target_date,values,timeline,[confidence_level],[seasonality],[data_completion],[aggregation])",
    "example_en": "=FORECAST.ETS.CONFINT(\"2025-12-31\",B1:B10,A1:A10,0.95)",
    "Tutorial_1": "Confidence intervals for forecasts.",
    "Tutorial_2": "Forecast accuracy analysis.",
    "Tutorial_3": "Risk assessment in planning.",
    "Tutorial_4": "Evaluate forecast reliability."
  },
  {
    "id": 185,
    "Function_name": "FORECAST.ETS.SEASONALITY",
    "description_en": "Returns the length of the repetitive pattern Excel detects for the specified time series",
    "Category": "Statistical",
    "syntax_en": "FORECAST.ETS.SEASONALITY(values,timeline,[data_completion],[aggregation])",
    "example_en": "=FORECAST.ETS.SEASONALITY(B1:B10,A1:A10)",
    "Tutorial_1": "Identify data seasonal patterns.",
    "Tutorial_2": "Seasonal product analysis.",
    "Tutorial_3": "Business cycle evaluation.",
    "Tutorial_4": "Inventory stocking decisions."
  },
  {
    "id": 186,
    "Function_name": "FORECAST.ETS.STAT",
    "description_en": "Returns a statistical value as a result of time series forecasting",
    "Category": "Statistical",
    "syntax_en": "FORECAST.ETS.STAT(values,timeline,stat_type,[seasonality],[data_completion],[aggregation])",
    "example_en": "=FORECAST.ETS.STAT(B1:B10,A1:A10,1)",
    "Tutorial_1": "Statistical forecast analysis.",
    "Tutorial_2": "Evaluate model accuracy.",
    "Tutorial_3": "Error rate calculations.",
    "Tutorial_4": "Data-driven decision making."
  },
  {
    "id": 187,
    "Function_name": "FORECAST.LINEAR",
    "description_en": "Returns a future value based on existing values",
    "Category": "Statistical",
    "syntax_en": "FORECAST.LINEAR(x,known_y's,known_x's)",
    "example_en": "=FORECAST.LINEAR(25,B1:B3,A1:A3)",
    "Tutorial_1": "Linear sales forecasting.",
    "Tutorial_2": "Financial projections.",
    "Tutorial_3": "Predict future performance.",
    "Tutorial_4": "Revenue trend analysis."
  },
  {
    "id": 188,
    "Function_name": "FORMULATEXT",
    "description_en": "Returns the formula at the given reference as text",
    "Category": "Lookup and reference",
    "syntax_en": "FORMULATEXT(reference)",
    "example_en": "=FORMULATEXT(B2)",
    "Tutorial_1": "Display cell formulas as text.",
    "Tutorial_2": "Spreadsheet auditing.",
    "Tutorial_3": "Documentation of Excel formulas.",
    "Tutorial_4": "Error detection and analysis."
  },
  {
    "id": 189,
    "Function_name": "FREQUENCY",
    "description_en": "Returns a frequency distribution as a vertical array",
    "Category": "Statistical",
    "syntax_en": "FREQUENCY(data_array,bins_array)",
    "example_en": "=FREQUENCY(A1:A8,B1:B2)",
    "Tutorial_1": "Frequency distribution analysis.",
    "Tutorial_2": "Customer purchase patterns.",
    "Tutorial_3": "Statistical data binning.",
    "Tutorial_4": "Histogram data preparation."
  },
  {
    "id": 190,
    "Function_name": "FTEST",
    "description_en": "Returns the result of an F-test",
    "Category": "Compatibility",
    "syntax_en": "FTEST(array1,array2)",
    "example_en": "=FTEST(A1:A6,B1:B6)",
    "Tutorial_1": "Legacy variance comparison test.",
    "Tutorial_2": "Historical data analysis.",
    "Tutorial_3": "Quality assurance evaluation.",
    "Tutorial_4": "Validate experimental variance."
  },
  {
    "id": 191,
    "Function_name": "FV",
    "description_en": "Returns the future value of an investment",
    "Category": "Financial",
    "syntax_en": "FV(rate,nper,pmt,[pv],[type])",
    "example_en": "=FV(0.05/12,10,-100)",
    "Tutorial_1": "Future value calculation of investments.",
    "Tutorial_2": "Retirement planning analysis.",
    "Tutorial_3": "Savings account projections.",
    "Tutorial_4": "Investment return estimations."
  },
  {
    "id": 192,
    "Function_name": "FVSCHEDULE",
    "description_en": "Returns the future value of an initial principal after applying a series of compound interest rates",
    "Category": "Financial",
    "syntax_en": "FVSCHEDULE(principal,schedule)",
    "example_en": "=FVSCHEDULE(1000,A1:A2)",
    "Tutorial_1": "Future value with variable rates.",
    "Tutorial_2": "Evaluate changing interest rates.",
    "Tutorial_3": "Investment scenario modeling.",
    "Tutorial_4": "Financial planning over periods."
  },
  {
    "id": 193,
    "Function_name": "GAMMA",
    "description_en": "Returns the Gamma function value",
    "Category": "Statistical",
    "syntax_en": "GAMMA(number)",
    "example_en": "=GAMMA(2.5)",
    "Tutorial_1": "Gamma function calculations.",
    "Tutorial_2": "Advanced statistical modeling.",
    "Tutorial_3": "Probability distribution analysis.",
    "Tutorial_4": "Scientific research computations."
  },
  {
    "id": 194,
    "Function_name": "GAMMA.DIST",
    "description_en": "Returns the gamma distribution",
    "Category": "Statistical",
    "syntax_en": "GAMMA.DIST(x,alpha,beta,cumulative)",
    "example_en": "=GAMMA.DIST(2,3,2,TRUE)",
    "Tutorial_1": "Gamma distribution probabilities.",
    "Tutorial_2": "Risk modeling in finance.",
    "Tutorial_3": "Predictive modeling for events.",
    "Tutorial_4": "Analyze failure rates."
  },
  {
    "id": 195,
    "Function_name": "GAMMA.INV",
    "description_en": "Returns the inverse of the gamma cumulative distribution",
    "Category": "Statistical",
    "syntax_en": "GAMMA.INV(probability,alpha,beta)",
    "example_en": "=GAMMA.INV(0.8,2,1)",
    "Tutorial_1": "Inverse gamma distribution values.",
    "Tutorial_2": "Set thresholds in risk management.",
    "Tutorial_3": "Statistical analysis in research.",
    "Tutorial_4": "Probability-based decision making."
  },
  {
    "id": 196,
    "Function_name": "GAMMADIST",
    "description_en": "Returns the gamma distribution",
    "Category": "Compatibility",
    "syntax_en": "GAMMADIST(x,alpha,beta,cumulative)",
    "example_en": "=GAMMADIST(3,1,2,FALSE)",
    "Tutorial_1": "Legacy gamma distribution evaluation.",
    "Tutorial_2": "Historical probability modeling.",
    "Tutorial_3": "Risk assessment analysis.",
    "Tutorial_4": "Quality control statistics."
  },
  {
    "id": 197,
    "Function_name": "GAMMAINV",
    "description_en": "Returns the inverse of the gamma cumulative distribution",
    "Category": "Compatibility",
    "syntax_en": "GAMMAINV(probability,alpha,beta)",
    "example_en": "=GAMMAINV(0.75,3,1)",
    "Tutorial_1": "Legacy inverse gamma distribution.",
    "Tutorial_2": "Historical data threshold analysis.",
    "Tutorial_3": "Statistical quality evaluations.",
    "Tutorial_4": "Risk management studies."
  },
  {
    "id": 198,
    "Function_name": "GAMMALN",
    "description_en": "Returns the natural logarithm of the gamma function, Î“(x)",
    "Category": "Statistical",
    "syntax_en": "GAMMALN(x)",
    "example_en": "=GAMMALN(4)",
    "Tutorial_1": "Natural log gamma function calculation.",
    "Tutorial_2": "Statistical modeling.",
    "Tutorial_3": "Probability distribution log transformations.",
    "Tutorial_4": "Advanced mathematical analysis."
  },
  {
    "id": 199,
    "Function_name": "GAMMALN.PRECISE",
    "description_en": "Returns the natural logarithm of the gamma function, Î“(x)",
    "Category": "Statistical",
    "syntax_en": "GAMMALN.PRECISE(x)",
    "example_en": "=GAMMALN.PRECISE(3.5)",
    "Tutorial_1": "Precise natural log gamma calculation.",
    "Tutorial_2": "Scientific calculations.",
    "Tutorial_3": "Statistical distributions.",
    "Tutorial_4": "High-accuracy probability modeling."
  },
  {
    "id": 200,
    "Function_name": "GAUSS",
    "description_en": "Returns 0.5 less than the standard normal cumulative distribution",
    "Category": "Statistical",
    "syntax_en": "GAUSS(z)",
    "example_en": "=GAUSS(1.5)",
    "Tutorial_1": "Gaussian normal distribution values.",
    "Tutorial_2": "Statistical analysis.",
    "Tutorial_3": "Probability calculation.",
    "Tutorial_4": "Error rate modeling."
  },
  {
    "id": 201,
    "Function_name": "GCD",
    "description_en": "Returns the greatest common divisor",
    "Category": "Math and trigonometry",
    "syntax_en": "GCD(number1,[number2],...)",
    "example_en": "=GCD(20,30,50)",
    "Tutorial_1": "Greatest common divisor calculation.",
    "Tutorial_2": "Inventory management.",
    "Tutorial_3": "Packaging unit optimization.",
    "Tutorial_4": "Simplify numeric ratios."
  },
  {
    "id": 202,
    "Function_name": "GEOMEAN",
    "description_en": "Returns the geometric mean",
    "Category": "Statistical",
    "syntax_en": "GEOMEAN(number1,[number2],...)",
    "example_en": "=GEOMEAN(A1:A7)",
    "Tutorial_1": "Geometric mean calculations.",
    "Tutorial_2": "Investment performance evaluation.",
    "Tutorial_3": "Compound growth analysis.",
    "Tutorial_4": "Statistical data analysis."
  },
  {
    "id": 203,
    "Function_name": "GESTEP",
    "description_en": "Tests whether a number is greater than a threshold value",
    "Category": "Engineering",
    "syntax_en": "GESTEP(number,[step])",
    "example_en": "=GESTEP(5,4)",
    "Tutorial_1": "Step function evaluation.",
    "Tutorial_2": "Data threshold alerts.",
    "Tutorial_3": "Quality control checks.",
    "Tutorial_4": "Logical test in decision-making."
  },
  {
    "id": 204,
    "Function_name": "GETPIVOTDATA",
    "description_en": "Returns data stored in a PivotTable report",
    "Category": "Lookup and reference",
    "syntax_en": "GETPIVOTDATA(data_field,pivot_table,[field1,item1],...)",
    "example_en": "=GETPIVOTDATA(\"Sales\",A3,\"Region\",\"East\")",
    "Tutorial_1": "Retrieve pivot table data dynamically.",
    "Tutorial_2": "Interactive dashboards.",
    "Tutorial_3": "Automate reports from pivots.",
    "Tutorial_4": "Data-driven summaries."
  },
  {
    "id": 205,
    "Function_name": "GROUPBY",
    "description_en": "Helps a user group, aggregate, sort, and filter data based on the fields you specify",
    "Category": "Lookup and reference",
    "syntax_en": "GROUPBY(array,by_array,[lambda])",
    "example_en": "=GROUPBY(A1:A10,B1:B10,LAMBDA(x,SUM(x)))",
    "Tutorial_1": "Group and summarize data dynamically.",
    "Tutorial_2": "Analyze sales by category.",
    "Tutorial_3": "Aggregate customer data.",
    "Tutorial_4": "Financial summary reports."
  },
  {
    "id": 206,
    "Function_name": "GROWTH",
    "description_en": "Returns values along an exponential trend",
    "Category": "Statistical",
    "syntax_en": "GROWTH(known_y's,[known_x's],[new_x's],[const])",
    "example_en": "=GROWTH(A1:A2,B1:B2,B3:B7)",
    "Tutorial_1": "Exponential trend predictions.",
    "Tutorial_2": "Sales forecasting.",
    "Tutorial_3": "Revenue growth analysis.",
    "Tutorial_4": "Market trend assessments."
  },
  {
    "id": 207,
    "Function_name": "HARMEAN",
    "description_en": "Returns the harmonic mean",
    "Category": "Statistical",
    "syntax_en": "HARMEAN(number1,[number2],...)",
    "example_en": "=HARMEAN(A1:A2)",
    "Tutorial_1": "Harmonic mean calculation.",
    "Tutorial_2": "Speed and time analyses.",
    "Tutorial_3": "Financial averaging.",
    "Tutorial_4": "Data analysis in rates."
  },
  {
    "id": 208,
    "Function_name": "HEX2BIN",
    "description_en": "Converts a hexadecimal number to binary",
    "Category": "Engineering",
    "syntax_en": "HEX2BIN(number,[places])",
    "example_en": "=HEX2BIN(\"F\",4)",
    "Tutorial_1": "Convert hexadecimal to binary numbers.",
    "Tutorial_2": "Data encoding in software.",
    "Tutorial_3": "Binary representation for hardware.",
    "Tutorial_4": "Programming numeric conversions."
  },
  {
    "id": 209,
    "Function_name": "HEX2DEC",
    "description_en": "Converts a hexadecimal number to decimal",
    "Category": "Engineering",
    "syntax_en": "HEX2DEC(number)",
    "example_en": "=HEX2DEC(\"FF\")",
    "Tutorial_1": "Hexadecimal to decimal conversion.",
    "Tutorial_2": "Numeric conversions for computing.",
    "Tutorial_3": "Hardware communication data parsing.",
    "Tutorial_4": "Programming and debugging."
  },
  {
    "id": 210,
    "Function_name": "HEX2OCT",
    "description_en": "Converts a hexadecimal number to octal",
    "Category": "Engineering",
    "syntax_en": "HEX2OCT(number,[places])",
    "example_en": "=HEX2OCT(\"A\",3)",
    "Tutorial_1": "Hexadecimal to octal conversion.",
    "Tutorial_2": "Numeric system transformations.",
    "Tutorial_3": "Legacy system integrations.",
    "Tutorial_4": "Data preparation for analysis."
  },
  {
    "id": 211,
    "Function_name": "HLOOKUP",
    "description_en": "Looks in the top row of an array and returns the value of the indicated cell",
    "Category": "Lookup and reference",
    "syntax_en": "HLOOKUP(lookup_value,table_array,row_index_num,[range_lookup])",
    "example_en": "=HLOOKUP(\"Price\",A1:C3,2,FALSE)",
    "Tutorial_1": "Lookup data horizontally in tables.",
    "Tutorial_2": "Price list management.",
    "Tutorial_3": "Employee data retrieval.",
    "Tutorial_4": "Sales data lookup."
  },
  {
    "id": 212,
    "Function_name": "HOUR",
    "description_en": "Converts a serial number to an hour",
    "Category": "Date and time",
    "syntax_en": "HOUR(serial_number)",
    "example_en": "=HOUR(\"14:30\")",
    "Tutorial_1": "Extract hour from time values.",
    "Tutorial_2": "Time-based reporting.",
    "Tutorial_3": "Employee shift analysis.",
    "Tutorial_4": "Analyze customer activity hours."
  },
  {
    "id": 213,
    "Function_name": "HSTACK",
    "description_en": "Appends arrays horizontally andÂ in sequence to return a larger array",
    "Category": "Lookup and reference",
    "syntax_en": "HSTACK(array1,[array2],...)",
    "example_en": "=HSTACK(A1:A3,B1:B3)",
    "Tutorial_1": "Horizontally stack arrays.",
    "Tutorial_2": "Data merging for reporting.",
    "Tutorial_3": "Data restructuring.",
    "Tutorial_4": "Prepare combined datasets."
  },
  {
    "id": 214,
    "Function_name": "HYPERLINK",
    "description_en": "Creates a shortcut or jump that opens a document stored on a network server, an intranet, or the Internet",
    "Category": "Lookup and reference",
    "syntax_en": "HYPERLINK(link_location,[friendly_name])",
    "example_en": "=HYPERLINK(\"http://www.example.com\",\"Example\")",
    "Tutorial_1": "Create clickable hyperlinks.",
    "Tutorial_2": "Interactive reports.",
    "Tutorial_3": "Dashboard navigation.",
    "Tutorial_4": "Document linking."
  },
  {
    "id": 215,
    "Function_name": "HYPGEOM.DIST",
    "description_en": "Returns the hypergeometric distribution",
    "Category": "Statistical",
    "syntax_en": "HYPGEOM.DIST(sample_s,number_sample,population_s,number_pop,cumulative)",
    "example_en": "=HYPGEOM.DIST(2,5,10,20,FALSE)",
    "Tutorial_1": "Hypergeometric distribution probabilities.",
    "Tutorial_2": "Lottery winning probability.",
    "Tutorial_3": "Quality sampling evaluation.",
    "Tutorial_4": "Defect analysis in production."
  },
  {
    "id": 216,
    "Function_name": "HYPGEOMDIST",
    "description_en": "Returns the hypergeometric distribution",
    "Category": "Compatibility",
    "syntax_en": "HYPGEOMDIST(sample_s,number_sample,population_s,number_pop)",
    "example_en": "=HYPGEOMDIST(3,4,8,16)",
    "Tutorial_1": "Legacy hypergeometric calculations.",
    "Tutorial_2": "Historical probability studies.",
    "Tutorial_3": "Quality assurance tests.",
    "Tutorial_4": "Sampling strategy evaluations."
  },
  {
    "id": 217,
    "Function_name": "IF",
    "description_en": "Returns one value if a condition is TRUE and another if FALSE.",
    "Category": "Logical",
    "syntax_en": "IF(logical_test, value_if_true, [value_if_false])",
    "example_en": "=IF(C216>'=60,\"Pass\",\"Fail\")",
    "Tutorial_1": "Determine student pass or fail status.",
    "Tutorial_2": "Check if stock levels require reorder.",
    "Tutorial_3": "Evaluate loan eligibility based on salary.",
    "Tutorial_4": "Apply conditional discounts on purchases."
  },
  {
    "id": 218,
    "Function_name": "IFERROR",
    "description_en": "Returns a value you specify if a formula evaluates to an error; otherwise, returns the result of the formula",
    "Category": "Logical",
    "syntax_en": "IFERROR(value,value_if_error)",
    "example_en": "=IFNA(VLOOKUP(C1,A:B,2,FALSE),\"Not Found\")",
    "Tutorial_1": "Manage division by zero errors.",
    "Tutorial_2": "Error handling in reports.",
    "Tutorial_3": "Formula robustness improvements.",
    "Tutorial_4": "Data cleansing routines."
  },
  {
    "id": 219,
    "Function_name": "IFNA",
    "description_en": "Returns the value you specify if the expression resolves to #N/A, otherwise returns the result of the expression",
    "Category": "Logical",
    "syntax_en": "IFNA(value,value_if_na)",
    "example_en": "=IFS(A1>80,\"A\",A1>60,\"B\",TRUE,\"C\")",
    "Tutorial_1": "Handle #N/A errors gracefully.",
    "Tutorial_2": "Lookup error management.",
    "Tutorial_3": "Database query handling.",
    "Tutorial_4": "Data matching error reduction."
  },
  {
    "id": 220,
    "Function_name": "IFS",
    "description_en": "Checks whether one or more conditions are met and returns a value that corresponds to the first TRUE condition.",
    "Category": "Logical",
    "syntax_en": "IFS(logical_test1,value_if_true1,[logical_test2,value_if_true2],...)",
    "example_en": "=IFS(A1>80,\"A\",A1>60,\"B\",TRUE,\"C\")",
    "Tutorial_1": "Assign grades dynamically.",
    "Tutorial_2": "Sales commission rates.",
    "Tutorial_3": "Customer satisfaction ratings.",
    "Tutorial_4": "Project risk classifications."
  },
  {
    "id": 221,
    "Function_name": "IMABS",
    "description_en": "Returns the absolute value (modulus) of a complex number",
    "Category": "Engineering",
    "syntax_en": "IMABS(inumber)",
    "example_en": "=IMABS(\"3+4i\")",
    "Tutorial_1": "Absolute value of complex numbers.",
    "Tutorial_2": "Signal magnitude in engineering.",
    "Tutorial_3": "Electrical engineering computations.",
    "Tutorial_4": "Mathematical research calculations."
  },
  {
    "id": 222,
    "Function_name": "IMAGE",
    "description_en": "Returns an image from a given source",
    "Category": "Lookup and reference",
    "syntax_en": "IMAGE(source,[alt_text],[sizing],[height],[width])",
    "example_en": "=IMAGE(\"http://example.com/img.png\")",
    "Tutorial_1": "Embed images from URLs.",
    "Tutorial_2": "Visual product catalog.",
    "Tutorial_3": "Dashboard visualizations.",
    "Tutorial_4": "Reporting with dynamic images."
  },
  {
    "id": 223,
    "Function_name": "IMAGINARY",
    "description_en": "Returns the imaginary coefficient of a complex number",
    "Category": "Engineering",
    "syntax_en": "IMAGINARY(inumber)",
    "example_en": "=IMAGINARY(\"5+3i\")",
    "Tutorial_1": "Extract imaginary part of complex numbers.",
    "Tutorial_2": "Signal analysis.",
    "Tutorial_3": "Engineering calculations.",
    "Tutorial_4": "Physics problem-solving."
  },
  {
    "id": 224,
    "Function_name": "IMARGUMENT",
    "description_en": "Returns the argument theta, an angle expressed in radians",
    "Category": "Engineering",
    "syntax_en": "IMARGUMENT(inumber)",
    "example_en": "=IMARGUMENT(\"1+i\")",
    "Tutorial_1": "Calculate argument of complex numbers.",
    "Tutorial_2": "Polar coordinate conversion.",
    "Tutorial_3": "Vector angle analysis.",
    "Tutorial_4": "Waveform calculations."
  },
  {
    "id": 225,
    "Function_name": "IMCONJUGATE",
    "description_en": "Returns the complex conjugate of a complex number",
    "Category": "Engineering",
    "syntax_en": "IMCONJUGATE(inumber)",
    "example_en": "=IMCONJUGATE(\"4+3i\")",
    "Tutorial_1": "Conjugate of complex numbers.",
    "Tutorial_2": "Electrical engineering computations.",
    "Tutorial_3": "Complex number simplification.",
    "Tutorial_4": "Mathematical modeling."
  },
  {
    "id": 226,
    "Function_name": "IMCOS",
    "description_en": "Returns the cosine of a complex number",
    "Category": "Engineering",
    "syntax_en": "IMCOS(inumber)",
    "example_en": "=IMCOS(\"1+i\")",
    "Tutorial_1": "Cosine of complex numbers.",
    "Tutorial_2": "Engineering waveform analysis.",
    "Tutorial_3": "Signal processing applications.",
    "Tutorial_4": "Scientific simulations."
  },
  {
    "id": 227,
    "Function_name": "IMCOSH",
    "description_en": "Returns the hyperbolic cosine of a complex number",
    "Category": "Engineering",
    "syntax_en": "IMCOSH(inumber)",
    "example_en": "=IMCOSH(\"2+3i\")",
    "Tutorial_1": "Hyperbolic cosine of complex numbers.",
    "Tutorial_2": "Advanced engineering calculations.",
    "Tutorial_3": "Mathematical modeling.",
    "Tutorial_4": "Physics and wave analysis."
  },
  {
    "id": 228,
    "Function_name": "IMCOT",
    "description_en": "Returns the cotangent of a complex number",
    "Category": "Engineering",
    "syntax_en": "IMCOT(inumber)",
    "example_en": "=IMCOT(\"1+i\")",
    "Tutorial_1": "Cotangent of complex numbers.",
    "Tutorial_2": "Electrical circuit analysis.",
    "Tutorial_3": "Signal phase calculations.",
    "Tutorial_4": "Mathematical computation."
  },
  {
    "id": 229,
    "Function_name": "IMCSC",
    "description_en": "Returns the cosecant of a complex number",
    "Category": "Engineering",
    "syntax_en": "IMCSC(inumber)",
    "example_en": "=IMCSC(\"2+2i\")",
    "Tutorial_1": "Cosecant of complex numbers.",
    "Tutorial_2": "Advanced mathematical modeling.",
    "Tutorial_3": "Electrical signal analysis.",
    "Tutorial_4": "Engineering computations."
  },
  {
    "id": 230,
    "Function_name": "IMCSCH",
    "description_en": "Returns the hyperbolic cosecant of a complex number",
    "Category": "Engineering",
    "syntax_en": "IMCSCH(inumber)",
    "example_en": "=IMCSCH(\"3+2i\")",
    "Tutorial_1": "Hyperbolic cosecant of complex numbers.",
    "Tutorial_2": "Wave behavior modeling.",
    "Tutorial_3": "Engineering physics simulations.",
    "Tutorial_4": "Scientific computations."
  },
  {
    "id": 231,
    "Function_name": "IMDIV",
    "description_en": "Returns the quotient of two complex numbers",
    "Category": "Engineering",
    "syntax_en": "IMDIV(inumber1,inumber2)",
    "example_en": "=IMDIV(\"6+4i\",\"1+2i\")",
    "Tutorial_1": "Complex number division.",
    "Tutorial_2": "Electrical impedance analysis.",
    "Tutorial_3": "Mathematical research.",
    "Tutorial_4": "Physics vector computations."
  },
  {
    "id": 232,
    "Function_name": "IMEXP",
    "description_en": "Returns the exponential of a complex number",
    "Category": "Engineering",
    "syntax_en": "IMEXP(inumber)",
    "example_en": "=IMEXP(\"1+i\")",
    "Tutorial_1": "Exponential calculation of complex numbers.",
    "Tutorial_2": "Signal processing in engineering.",
    "Tutorial_3": "Mathematical modeling.",
    "Tutorial_4": "Scientific simulations."
  },
  {
    "id": 233,
    "Function_name": "IMLN",
    "description_en": "Returns the natural logarithm of a complex number",
    "Category": "Engineering",
    "syntax_en": "IMLN(inumber)",
    "example_en": "=IMLN(\"3+4i\")",
    "Tutorial_1": "Natural log of complex numbers.",
    "Tutorial_2": "Advanced mathematical modeling.",
    "Tutorial_3": "Engineering calculations.",
    "Tutorial_4": "Logarithmic data analysis."
  },
  {
    "id": 234,
    "Function_name": "IMLOG10",
    "description_en": "Returns the base-10 logarithm of a complex number",
    "Category": "Engineering",
    "syntax_en": "IMLOG10(inumber)",
    "example_en": "=IMLOG10(\"2+3i\")",
    "Tutorial_1": "Base-10 logarithm of complex numbers.",
    "Tutorial_2": "Signal attenuation analysis.",
    "Tutorial_3": "Engineering measurements.",
    "Tutorial_4": "Logarithmic scaling."
  },
  {
    "id": 235,
    "Function_name": "IMLOG2",
    "description_en": "Returns the base-2 logarithm of a complex number",
    "Category": "Engineering",
    "syntax_en": "IMLOG2(inumber)",
    "example_en": "=IMLOG2(\"4+4i\")",
    "Tutorial_1": "Base-2 logarithm of complex numbers.",
    "Tutorial_2": "Digital signal processing.",
    "Tutorial_3": "Information theory applications.",
    "Tutorial_4": "Engineering computations."
  },
  {
    "id": 236,
    "Function_name": "IMPOWER",
    "description_en": "Returns a complex number raised to an integer power",
    "Category": "Engineering",
    "syntax_en": "IMPOWER(inumber,number)",
    "example_en": "=IMPOWER(\"1+i\",3)",
    "Tutorial_1": "Raise complex numbers to a power.",
    "Tutorial_2": "Electrical circuit design.",
    "Tutorial_3": "Waveform signal analysis.",
    "Tutorial_4": "Mathematical simulations."
  },
  {
    "id": 237,
    "Function_name": "IMPRODUCT",
    "description_en": "Returns the product of complex numbers",
    "Category": "Engineering",
    "syntax_en": "IMPRODUCT(inumber1,[inumber2],...)",
    "example_en": "=IMPRODUCT(\"1+i\",\"2+i\")",
    "Tutorial_1": "Multiply complex numbers.",
    "Tutorial_2": "Electrical circuit analysis.",
    "Tutorial_3": "Engineering waveform calculations.",
    "Tutorial_4": "Scientific modeling tasks."
  },
  {
    "id": 238,
    "Function_name": "IMREAL",
    "description_en": "Returns the real coefficient of a complex number",
    "Category": "Engineering",
    "syntax_en": "IMREAL(inumber)",
    "example_en": "=IMREAL(\"6+9i\")",
    "Tutorial_1": "Extract real part of complex numbers.",
    "Tutorial_2": "Data extraction for engineering.",
    "Tutorial_3": "Signal processing tasks.",
    "Tutorial_4": "Vector analysis in physics."
  },
  {
    "id": 239,
    "Function_name": "IMSEC",
    "description_en": "Returns the secant of a complex number",
    "Category": "Engineering",
    "syntax_en": "IMSEC(inumber)",
    "example_en": "=IMSEC(\"3+2i\")",
    "Tutorial_1": "Calculate secant of complex numbers.",
    "Tutorial_2": "Signal analysis computations.",
    "Tutorial_3": "Mathematical modeling scenarios.",
    "Tutorial_4": "Electrical waveform analysis."
  },
  {
    "id": 240,
    "Function_name": "IMSECH",
    "description_en": "Returns the hyperbolic secant of a complex number",
    "Category": "Engineering",
    "syntax_en": "IMSECH(inumber)",
    "example_en": "=IMSECH(\"1+i\")",
    "Tutorial_1": "Hyperbolic secant of complex numbers.",
    "Tutorial_2": "Advanced wave analysis.",
    "Tutorial_3": "Scientific research modeling.",
    "Tutorial_4": "Engineering calculations."
  },
  {
    "id": 241,
    "Function_name": "IMSIN",
    "description_en": "Returns the sine of a complex number",
    "Category": "Engineering",
    "syntax_en": "IMSIN(inumber)",
    "example_en": "=IMSIN(\"2+3i\")",
    "Tutorial_1": "Sine of complex numbers.",
    "Tutorial_2": "Signal processing calculations.",
    "Tutorial_3": "Engineering waveform analysis.",
    "Tutorial_4": "Scientific simulation tasks."
  },
  {
    "id": 242,
    "Function_name": "IMSINH",
    "description_en": "Returns the hyperbolic sine of a complex number",
    "Category": "Engineering",
    "syntax_en": "IMSINH(inumber)",
    "example_en": "=IMSINH(\"1+2i\")",
    "Tutorial_1": "Hyperbolic sine of complex numbers.",
    "Tutorial_2": "Physics-based simulations.",
    "Tutorial_3": "Advanced mathematical analysis.",
    "Tutorial_4": "Engineering data processing."
  },
  {
    "id": 243,
    "Function_name": "IMSQRT",
    "description_en": "Returns the square root of a complex number",
    "Category": "Engineering",
    "syntax_en": "IMSQRT(inumber)",
    "example_en": "=IMSQRT(\"4+4i\")",
    "Tutorial_1": "Square root of complex numbers.",
    "Tutorial_2": "Electrical impedance calculations.",
    "Tutorial_3": "Engineering simulations.",
    "Tutorial_4": "Complex number simplification."
  },
  {
    "id": 244,
    "Function_name": "IMSUB",
    "description_en": "Returns the difference between two complex numbers",
    "Category": "Engineering",
    "syntax_en": "IMSUB(inumber1,inumber2)",
    "example_en": "=IMSUB(\"5+3i\",\"2+i\")",
    "Tutorial_1": "Subtract complex numbers.",
    "Tutorial_2": "Engineering and physics calculations.",
    "Tutorial_3": "Waveform data processing.",
    "Tutorial_4": "Mathematical modeling."
  },
  {
    "id": 245,
    "Function_name": "IMSUM",
    "description_en": "Returns the sum of complex numbers",
    "Category": "Engineering",
    "syntax_en": "IMSUM(inumber1,[inumber2],...)",
    "example_en": "=IMSUM(\"3+2i\",\"1+4i\")",
    "Tutorial_1": "Sum complex numbers.",
    "Tutorial_2": "Signal processing.",
    "Tutorial_3": "Engineering analysis tasks.",
    "Tutorial_4": "Scientific research simulations."
  },
  {
    "id": 246,
    "Function_name": "IMTAN",
    "description_en": "Returns the tangent of a complex number",
    "Category": "Engineering",
    "syntax_en": "IMTAN(inumber)",
    "example_en": "=IMTAN(\"2+3i\")",
    "Tutorial_1": "Tangent of complex numbers.",
    "Tutorial_2": "Electrical engineering computations.",
    "Tutorial_3": "Wave propagation studies.",
    "Tutorial_4": "Mathematical analysis."
  },
  {
    "id": 247,
    "Function_name": "INDEX",
    "description_en": "Uses an index to choose a value from a reference or array",
    "Category": "Lookup and reference",
    "syntax_en": "INDEX(array,row_num,[column_num])",
    "example_en": "=INDEX(A1:B8,3,2)",
    "Tutorial_1": "Retrieve data from arrays dynamically.",
    "Tutorial_2": "Lookup employee details.",
    "Tutorial_3": "Product database queries.",
    "Tutorial_4": "Financial report generation."
  },
  {
    "id": 248,
    "Function_name": "INDIRECT",
    "description_en": "Returns a reference indicated by a text value",
    "Category": "Lookup and reference",
    "syntax_en": "INDIRECT(ref_text,[a1])",
    "example_en": "=INDIRECT(\"A\"&B1)",
    "Tutorial_1": "Dynamic cell references.",
    "Tutorial_2": "Dashboard interactivity.",
    "Tutorial_3": "Data-driven navigation.",
    "Tutorial_4": "Spreadsheet automation."
  },
  {
    "id": 249,
    "Function_name": "INFO",
    "description_en": "Returns information about the current operating environment",
    "Category": "Information",
    "syntax_en": "INFO(type_text)",
    "example_en": "=INFO(\"numfile\")",
    "Tutorial_1": "Retrieve environment information.",
    "Tutorial_2": "System audits in Excel.",
    "Tutorial_3": "Technical troubleshooting.",
    "Tutorial_4": "Document metadata reporting."
  },
  {
    "id": 250,
    "Function_name": "INT",
    "description_en": "Rounds a number down to the nearest integer",
    "Category": "Math and trigonometry",
    "syntax_en": "INT(number)",
    "example_en": "=INT(7.9)",
    "Tutorial_1": "Round numbers down to nearest integer.",
    "Tutorial_2": "Inventory calculations.",
    "Tutorial_3": "Sales quantity standardization.",
    "Tutorial_4": "Financial reporting."
  },
  {
    "id": 251,
    "Function_name": "INTERCEPT",
    "description_en": "Returns the intercept of the linear regression line",
    "Category": "Statistical",
    "syntax_en": "INTERCEPT(known_y's,known_x's)",
    "example_en": "=INTERCEPT(A1:A8,B1:B8)",
    "Tutorial_1": "Linear regression intercept calculation.",
    "Tutorial_2": "Trend analysis in sales data.",
    "Tutorial_3": "Statistical research models.",
    "Tutorial_4": "Financial forecasting."
  },
  {
    "id": 252,
    "Function_name": "INTRATE",
    "description_en": "Returns the interest rate for a fully invested security",
    "Category": "Financial",
    "syntax_en": "INTRATE(settlement,maturity,investment,redemption,[basis])",
    "example_en": "=INTRATE(\"1-Jan-2025\",\"1-Jan-2026\",1000,1100)",
    "Tutorial_1": "Calculate interest rate for investments.",
    "Tutorial_2": "Bond investment analysis.",
    "Tutorial_3": "Financial returns calculation.",
    "Tutorial_4": "Interest rate comparisons."
  },
  {
    "id": 253,
    "Function_name": "IPMT",
    "description_en": "Returns the interest payment for an investment for a given period",
    "Category": "Financial",
    "syntax_en": "IPMT(rate,per,nper,pv,[fv],[type])",
    "example_en": "=IPMT(0.06/12,1,60,10000)",
    "Tutorial_1": "Interest payment calculation for loans.",
    "Tutorial_2": "Mortgage payment analysis.",
    "Tutorial_3": "Loan amortization schedules.",
    "Tutorial_4": "Financial planning for debt management."
  },
  {
    "id": 254,
    "Function_name": "IRR",
    "description_en": "Returns the internal rate of return for a series of cash flows",
    "Category": "Financial",
    "syntax_en": "IRR(values,[guess])",
    "example_en": "=IRR(A1:A3)",
    "Tutorial_1": "Internal rate of return calculation.",
    "Tutorial_2": "Investment analysis.",
    "Tutorial_3": "Financial feasibility studies.",
    "Tutorial_4": "Project valuation analysis."
  },
  {
    "id": 255,
    "Function_name": "ISBLANK",
    "description_en": "Returns TRUE if the value is blank",
    "Category": "Information",
    "syntax_en": "ISBLANK(value)",
    "example_en": "=ISERR(A1/B1)",
    "Tutorial_1": "Check if cells are empty.",
    "Tutorial_2": "Data completeness audits.",
    "Tutorial_3": "Data validation tasks.",
    "Tutorial_4": "Report accuracy checks."
  },
  {
    "id": 256,
    "Function_name": "ISERR",
    "description_en": "Returns TRUE if the value is any error value except #N/A",
    "Category": "Information",
    "syntax_en": "ISERR(value)",
    "example_en": "=ISERROR(A1/B1)",
    "Tutorial_1": "Check if a value has errors excluding #N/A.",
    "Tutorial_2": "Formula auditing.",
    "Tutorial_3": "Error detection in financial data.",
    "Tutorial_4": "Report validation automation."
  },
  {
    "id": 257,
    "Function_name": "ISERROR",
    "description_en": "Returns TRUE if the value is any error value",
    "Category": "Information",
    "syntax_en": "ISERROR(value)",
    "example_en": "=ISERROR(A1/B1)",
    "Tutorial_1": "Detect any error in formulas.",
    "Tutorial_2": "Data validation processes.",
    "Tutorial_3": "Error management in financial reports.",
    "Tutorial_4": "Automated spreadsheet audits."
  },
  {
    "id": 258,
    "Function_name": "ISEVEN",
    "description_en": "Returns TRUE if the number is even",
    "Category": "Information",
    "syntax_en": "ISEVEN(number)",
    "example_en": "=ISEVEN(4)",
    "Tutorial_1": "Identify even numbers.",
    "Tutorial_2": "Numeric data analysis.",
    "Tutorial_3": "Conditional formatting logic.",
    "Tutorial_4": "Inventory batch calculations."
  },
  {
    "id": 259,
    "Function_name": "ISFORMULA",
    "description_en": "Returns TRUE if there is a reference to a cell that contains a formula",
    "Category": "Information",
    "syntax_en": "ISFORMULA(reference)",
    "example_en": "=ISFORMULA(A1)",
    "Tutorial_1": "Check if a cell contains a formula.",
    "Tutorial_2": "Spreadsheet audits.",
    "Tutorial_3": "Documentation verification.",
    "Tutorial_4": "Data integrity checks."
  },
  {
    "id": 260,
    "Function_name": "ISLOGICAL",
    "description_en": "Returns TRUE if the value is a logical value",
    "Category": "Information",
    "syntax_en": "ISLOGICAL(value)",
    "example_en": "=ISLOGICAL(TRUE)",
    "Tutorial_1": "Verify if cell contains logical values.",
    "Tutorial_2": "Data validation in surveys.",
    "Tutorial_3": "Boolean data checks.",
    "Tutorial_4": "Logical analysis in decision trees."
  },
  {
    "id": 261,
    "Function_name": "ISNA",
    "description_en": "Returns TRUE if the value is the #N/A error value",
    "Category": "Information",
    "syntax_en": "ISNA(value)",
    "example_en": "=ISNA(VLOOKUP(\"Excel\",A:B,2,FALSE))",
    "Tutorial_1": "Check for #N/A errors specifically.",
    "Tutorial_2": "Lookup validation.",
    "Tutorial_3": "Error handling in database searches.",
    "Tutorial_4": "Data matching processes."
  },
  {
    "id": 262,
    "Function_name": "ISNONTEXT",
    "description_en": "Returns TRUE if the value is not text",
    "Category": "Information",
    "syntax_en": "ISNONTEXT(value)",
    "example_en": "=ISNONTEXT(123)",
    "Tutorial_1": "Confirm cell contains non-text data.",
    "Tutorial_2": "Data validation checks.",
    "Tutorial_3": "Numeric data audits.",
    "Tutorial_4": "Report accuracy assessments."
  },
  {
    "id": 263,
    "Function_name": "ISNUMBER",
    "description_en": "Returns TRUE if the value is a number",
    "Category": "Information",
    "syntax_en": "ISNUMBER(value)",
    "example_en": "=ISNUMBER(A1)",
    "Tutorial_1": "Identify numeric cells.",
    "Tutorial_2": "Data cleansing processes.",
    "Tutorial_3": "Numeric data verification.",
    "Tutorial_4": "Formula input validation."
  },
  {
    "id": 264,
    "Function_name": "ISO.CEILING",
    "description_en": "Returns a number that is rounded up to the nearest integer or to the nearest multiple of significance",
    "Category": "Math and trigonometry",
    "syntax_en": "ISO.CEILING(number,[significance])",
    "example_en": "=ISO.CEILING(4.2)",
    "Tutorial_1": "Round numbers up to nearest integer or specified multiple.",
    "Tutorial_2": "Inventory restocking decisions.",
    "Tutorial_3": "Financial rounding standards.",
    "Tutorial_4": "Budget forecasting."
  },
  {
    "id": 265,
    "Function_name": "ISODD",
    "description_en": "Returns TRUE if the number is odd",
    "Category": "Information",
    "syntax_en": "ISODD(number)",
    "example_en": "=ISODD(3)",
    "Tutorial_1": "Detect odd numbers.",
    "Tutorial_2": "Batch processing analysis.",
    "Tutorial_3": "Conditional reporting.",
    "Tutorial_4": "Statistical data checks."
  },
  {
    "id": 266,
    "Function_name": "ISOMITTED",
    "description_en": "Checks whether the value in aÂ LAMBDAÂ is missing and returns TRUE or FALSE",
    "Category": "Information",
    "syntax_en": "ISOMITTED(argument)",
    "example_en": "=ISOMITTED(B1)",
    "Tutorial_1": "Check if a function argument is omitted (LAMBDA contexts).",
    "Tutorial_2": "Validate parameter inputs.",
    "Tutorial_3": "Dynamic function audits.",
    "Tutorial_4": "Error checking in advanced formulas."
  },
  {
    "id": 267,
    "Function_name": "ISOWEEKNUM",
    "description_en": "Returns the number of the ISO week number of the year for a given date",
    "Category": "Date and time",
    "syntax_en": "ISOWEEKNUM(date)",
    "example_en": "=ISOWEEKNUM(\"2025-01-01\")",
    "Tutorial_1": "Calculate ISO week numbers.",
    "Tutorial_2": "Project timeline analysis.",
    "Tutorial_3": "Employee schedule planning.",
    "Tutorial_4": "Financial reporting cycles."
  },
  {
    "id": 268,
    "Function_name": "ISPMT",
    "description_en": "Calculates the interest paid during a specific period of an investment",
    "Category": "Financial",
    "syntax_en": "ISPMT(rate,per,nper,pv)",
    "example_en": "=ISPMT(0.05/12,1,60,10000)",
    "Tutorial_1": "Interest portion of loan payments.",
    "Tutorial_2": "Loan amortization tracking.",
    "Tutorial_3": "Debt management analysis.",
    "Tutorial_4": "Financial planning scenarios."
  },
  {
    "id": 269,
    "Function_name": "ISREF",
    "description_en": "Returns TRUE if the value is a reference",
    "Category": "Information",
    "syntax_en": "ISREF(value)",
    "example_en": "=ISREF(A2)",
    "Tutorial_1": "Verify if a cell contains a reference.",
    "Tutorial_2": "Spreadsheet formula audits.",
    "Tutorial_3": "Formula validation routines.",
    "Tutorial_4": "Report integrity checks."
  },
  {
    "id": 270,
    "Function_name": "ISTEXT",
    "description_en": "Returns TRUE if the value is text",
    "Category": "Information",
    "syntax_en": "ISTEXT(value)",
    "example_en": "=ISTEXT(\"Excel\")",
    "Tutorial_1": "Check for text in cells.",
    "Tutorial_2": "Data type validation.",
    "Tutorial_3": "Data import processes.",
    "Tutorial_4": "Data quality audits."
  },
  {
    "id": 271,
    "Function_name": "JIS",
    "description_en": "Changes half-width (single-byte) characters within a string to full-width (double-byte) characters",
    "Category": "Text",
    "syntax_en": "JIS(text)",
    "example_en": "=JIS(\"????\")",
    "Tutorial_1": "Convert half-width characters to full-width.",
    "Tutorial_2": "Japanese text data normalization.",
    "Tutorial_3": "Data cleansing for Asian languages.",
    "Tutorial_4": "Database import preparation."
  },
  {
    "id": 272,
    "Function_name": "KURT",
    "description_en": "Returns the kurtosis of a data set",
    "Category": "Statistical",
    "syntax_en": "KURT(number1,[number2],...)",
    "example_en": "=KURT(A1:A8)",
    "Tutorial_1": "Calculate kurtosis of data distribution.",
    "Tutorial_2": "Statistical research.",
    "Tutorial_3": "Risk analysis in finance.",
    "Tutorial_4": "Distribution shape analysis."
  },
  {
    "id": 273,
    "Function_name": "LAMBDA",
    "description_en": "Create custom, reusable and call them by a friendly name",
    "Category": "Logical",
    "syntax_en": "LAMBDA([parameter1],[parameter2],...,calculation)",
    "example_en": "=LAMBDA(x,x+1)",
    "Tutorial_1": "Create custom reusable functions.",
    "Tutorial_2": "Complex financial modeling.",
    "Tutorial_3": "Dynamic report calculations.",
    "Tutorial_4": "Data transformation tasks."
  },
  {
    "id": 274,
    "Function_name": "LARGE",
    "description_en": "Returns the k-th largest value in a data set",
    "Category": "Statistical",
    "syntax_en": "LARGE(array,k)",
    "example_en": "=LARGE(A1:A8,3)",
    "Tutorial_1": "Find the k-th largest value.",
    "Tutorial_2": "Identify top sales performers.",
    "Tutorial_3": "Ranking student test scores.",
    "Tutorial_4": "Financial analysis of top values."
  },
  {
    "id": 275,
    "Function_name": "LCM",
    "description_en": "Returns the least common multiple",
    "Category": "Math and trigonometry",
    "syntax_en": "LCM(number1,[number2],...)",
    "example_en": "=LCM(4,6)",
    "Tutorial_1": "Least common multiple calculation.",
    "Tutorial_2": "Scheduling tasks.",
    "Tutorial_3": "Inventory replenishment cycles.",
    "Tutorial_4": "Process synchronization in manufacturing."
  },
  {
    "id": 276,
    "Function_name": "LEFT",
    "description_en": "Returns the leftmost characters from a text value",
    "Category": "Text",
    "syntax_en": "LEFT(text,[num_chars])",
    "example_en": "=LEFT(\"Excel\",2)",
    "Tutorial_1": "Extract characters from left.",
    "Tutorial_2": "Data parsing tasks.",
    "Tutorial_3": "Text data cleansing.",
    "Tutorial_4": "Report formatting."
  },
  {
    "id": 277,
    "Function_name": "LEFTB",
    "description_en": "Returns the leftmost characters from a text value",
    "Category": "Text",
    "syntax_en": "LEFTB(text,[num_bytes])",
    "example_en": "=LEFTB(\"??Excel\",4)",
    "Tutorial_1": "Extract bytes from left (DBCS text).",
    "Tutorial_2": "Asian language data extraction.",
    "Tutorial_3": "Text data parsing tasks.",
    "Tutorial_4": "Multilingual data management."
  },
  {
    "id": 278,
    "Function_name": "LEN",
    "description_en": "Returns the number of characters in a text string",
    "Category": "Text",
    "syntax_en": "LEN(text)",
    "example_en": "=LEN(\"Excel\")",
    "Tutorial_1": "Count characters in text strings.",
    "Tutorial_2": "Data validation checks.",
    "Tutorial_3": "Input length constraints.",
    "Tutorial_4": "Text analysis reports."
  },
  {
    "id": 279,
    "Function_name": "LENB",
    "description_en": "Returns the number of characters in a text string",
    "Category": "Text",
    "syntax_en": "LENB(text)",
    "example_en": "=LENB(\"????\")",
    "Tutorial_1": "Count bytes in DBCS text.",
    "Tutorial_2": "Asian character analysis.",
    "Tutorial_3": "Data import validation.",
    "Tutorial_4": "Multilingual content checks."
  },
  {
    "id": 280,
    "Function_name": "LET",
    "description_en": "Assigns names to calculation results",
    "Category": "Logical",
    "syntax_en": "LET(name1,name_value1,...,calculation)",
    "example_en": "=LET(x,5,y,3,x+y)",
    "Tutorial_1": "Define named variables within formulas.",
    "Tutorial_2": "Complex formula simplification.",
    "Tutorial_3": "Financial model construction.",
    "Tutorial_4": "Scenario-based calculations."
  },
  {
    "id": 281,
    "Function_name": "LINEST",
    "description_en": "Returns the parameters of a linear trend",
    "Category": "Statistical",
    "syntax_en": "LINEST(known_y's,[known_x's],[const],[stats])",
    "example_en": "=LINEST(A1:A4,B1:B4,TRUE,TRUE)",
    "Tutorial_1": "Linear regression statistics.",
    "Tutorial_2": "Trend analysis in sales data.",
    "Tutorial_3": "Financial forecasting models.",
    "Tutorial_4": "Statistical research modeling."
  },
  {
    "id": 282,
    "Function_name": "LN",
    "description_en": "Returns the natural logarithm of a number",
    "Category": "Math and trigonometry",
    "syntax_en": "LN(number)",
    "example_en": "=LN(10)",
    "Tutorial_1": "Natural logarithm calculation.",
    "Tutorial_2": "Exponential growth analysis.",
    "Tutorial_3": "Statistical modeling.",
    "Tutorial_4": "Financial calculations."
  },
  {
    "id": 283,
    "Function_name": "LOG",
    "description_en": "Returns the logarithm of a number to a specified base",
    "Category": "Math and trigonometry",
    "syntax_en": "LOG(number,[base])",
    "example_en": "=LOG(8,2)",
    "Tutorial_1": "Logarithm calculation with custom base.",
    "Tutorial_2": "Scientific data analysis.",
    "Tutorial_3": "Financial growth evaluations.",
    "Tutorial_4": "Mathematical computations."
  },
  {
    "id": 284,
    "Function_name": "LOG10",
    "description_en": "Returns the base-10 logarithm of a number",
    "Category": "Math and trigonometry",
    "syntax_en": "LOG10(number)",
    "example_en": "=LOG10(100)",
    "Tutorial_1": "Base-10 logarithm calculation.",
    "Tutorial_2": "Scientific notation conversion.",
    "Tutorial_3": "Decibel calculations.",
    "Tutorial_4": "Data scaling in reports."
  },
  {
    "id": 285,
    "Function_name": "LOGEST",
    "description_en": "Returns the parameters of an exponential trend",
    "Category": "Statistical",
    "syntax_en": "LOGEST(known_y's,[known_x's],[const],[stats])",
    "example_en": "=LOGEST(A1:A3,B1:B3)",
    "Tutorial_1": "Exponential regression analysis.",
    "Tutorial_2": "Growth trend predictions.",
    "Tutorial_3": "Financial forecasts.",
    "Tutorial_4": "Product demand modeling."
  },
  {
    "id": 286,
    "Function_name": "LOGINV",
    "description_en": "Returns the inverse of the lognormal cumulative distribution",
    "Category": "Compatibility",
    "syntax_en": "LOGINV(probability,mean,standard_dev)",
    "example_en": "=LOGINV(0.5,1,0.2)",
    "Tutorial_1": "Lognormal distribution inverse calculation (legacy).",
    "Tutorial_2": "Financial risk analysis.",
    "Tutorial_3": "Statistical data analysis.",
    "Tutorial_4": "Probability modeling."
  },
  {
    "id": 287,
    "Function_name": "LOGNORM.DIST",
    "description_en": "Returns the cumulative lognormal distribution",
    "Category": "Statistical",
    "syntax_en": "LOGNORM.DIST(x,mean,standard_dev,cumulative)",
    "example_en": "=LOGNORM.DIST(3,1,0.5,TRUE)",
    "Tutorial_1": "Lognormal distribution calculations.",
    "Tutorial_2": "Financial modeling.",
    "Tutorial_3": "Risk management assessments.",
    "Tutorial_4": "Project uncertainty evaluations."
  },
  {
    "id": 288,
    "Function_name": "LOGNORM.INV",
    "description_en": "Returns the inverse of the lognormal cumulative distribution",
    "Category": "Statistical",
    "syntax_en": "LOGNORM.INV(probability,mean,standard_dev)",
    "example_en": "=LOGNORM.INV(0.7,1,0.5)",
    "Tutorial_1": "Lognormal inverse distribution.",
    "Tutorial_2": "Risk analysis thresholds.",
    "Tutorial_3": "Financial scenario modeling.",
    "Tutorial_4": "Probability-based planning."
  },
  {
    "id": 289,
    "Function_name": "LOGNORMDIST",
    "description_en": "Returns the cumulative lognormal distribution",
    "Category": "Compatibility",
    "syntax_en": "LOGNORMDIST(x,mean,standard_dev)",
    "example_en": "=LOGNORMDIST(4,2,0.3)",
    "Tutorial_1": "Legacy lognormal distribution.",
    "Tutorial_2": "Historical financial analyses.",
    "Tutorial_3": "Statistical studies.",
    "Tutorial_4": "Probability assessments."
  },
  {
    "id": 290,
    "Function_name": "LOOKUP",
    "description_en": "Looks up values in a vector or array",
    "Category": "Lookup and reference",
    "syntax_en": "LOOKUP(lookup_value,lookup_vector,[result_vector])",
    "example_en": "=LOOKUP(\"Apple\",A1:A3,B1:B3)",
    "Tutorial_1": "Simple lookup from single-row/column arrays.",
    "Tutorial_2": "Quick product price retrieval.",
    "Tutorial_3": "Employee data searches.",
    "Tutorial_4": "Report data linking."
  },
  {
    "id": 291,
    "Function_name": "LOWER",
    "description_en": "Converts text to lowercase",
    "Category": "Text",
    "syntax_en": "LOWER(text)",
    "example_en": "=LOWER(\"EXCEL\")",
    "Tutorial_1": "Convert text to lowercase.",
    "Tutorial_2": "Data standardization tasks.",
    "Tutorial_3": "Case-insensitive searches.",
    "Tutorial_4": "Data cleansing routines."
  },
  {
    "id": 292,
    "Function_name": "MAKEARRAY",
    "description_en": "Returns aÂ calculated array of a specified row and column size, by applying aÂ LAMBDA",
    "Category": "Logical",
    "syntax_en": "MAKEARRAY(rows,columns,lambda)",
    "example_en": "=MAKEARRAY(2,2,LAMBDA(r,c,r*c))",
    "Tutorial_1": "Generate arrays dynamically.",
    "Tutorial_2": "Data table creation.",
    "Tutorial_3": "Complex data simulations.",
    "Tutorial_4": "Scenario modeling."
  },
  {
    "id": 293,
    "Function_name": "MAP",
    "description_en": "Returns an arrayÂ formed by mappingÂ each value in the array(s) to a new value by applying aÂ LAMBDAÂ to create a new value",
    "Category": "Logical",
    "syntax_en": "MAP(array1,[array2],...,lambda)",
    "example_en": "=MAP(A1:A5,LAMBDA(x,x*2))",
    "Tutorial_1": "Apply functions to arrays element-wise.",
    "Tutorial_2": "Dynamic calculations.",
    "Tutorial_3": "Data transformations.",
    "Tutorial_4": "Custom report generation."
  },
  {
    "id": 294,
    "Function_name": "MATCH",
    "description_en": "Looks up values in a reference or array",
    "Category": "Lookup and reference",
    "syntax_en": "MATCH(lookup_value,lookup_array,[match_type])",
    "example_en": "=MATCH(\"Excel\",A1:A8,0)",
    "Tutorial_1": "Locate position of matched data.",
    "Tutorial_2": "Data validation and checking.",
    "Tutorial_3": "Report data referencing.",
    "Tutorial_4": "Dynamic formula creation."
  },
  {
    "id": 295,
    "Function_name": "MAX",
    "description_en": "Returns the maximum value in a list of arguments",
    "Category": "Statistical",
    "syntax_en": "MAX(number1,[number2],...)",
    "example_en": "=MAX(A1:A8)",
    "Tutorial_1": "Identify maximum value.",
    "Tutorial_2": "Sales performance analytics.",
    "Tutorial_3": "Record-breaking evaluations.",
    "Tutorial_4": "Financial analysis."
  },
  {
    "id": 296,
    "Function_name": "MAXA",
    "description_en": "Returns the maximum value in a list of arguments, including numbers, text, and logical values",
    "Category": "Statistical",
    "syntax_en": "MAXA(value1,[value2],...)",
    "example_en": "=MAXA(A1:A3)",
    "Tutorial_1": "Maximum value including logical/text as numbers.",
    "Tutorial_2": "Mixed data analysis.",
    "Tutorial_3": "Survey data evaluations.",
    "Tutorial_4": "Conditional data comparisons."
  },
  {
    "id": 297,
    "Function_name": "MAXIFS",
    "description_en": "Returns the maximum value among cells specified by a given set of conditions or criteria",
    "Category": "Statistical",
    "syntax_en": "MAXIFS(max_range, criteria_range1, criteria1, [criteria_range2, criteria2],...)",
    "example_en": "=MAXIFS(A1:A8,B1:B8,\"East\")",
    "Tutorial_1": "Maximum sales per region.",
    "Tutorial_2": "Highest score meeting conditions.",
    "Tutorial_3": "Employee performance analytics.",
    "Tutorial_4": "Inventory management thresholds."
  },
  {
    "id": 298,
    "Function_name": "MDETERM",
    "description_en": "Returns the matrix determinant of an array",
    "Category": "Math and trigonometry",
    "syntax_en": "MDETERM(array)",
    "example_en": "=MDETERM(A1:B2)",
    "Tutorial_1": "Matrix determinant calculation.",
    "Tutorial_2": "Engineering analysis.",
    "Tutorial_3": "Mathematical modeling.",
    "Tutorial_4": "System stability computations."
  },
  {
    "id": 299,
    "Function_name": "MDURATION",
    "description_en": "Returns the Macauley modified duration for a security with an assumed par value of $100",
    "Category": "Financial",
    "syntax_en": "MDURATION(settlement,maturity,coupon,yld,frequency,[basis])",
    "example_en": "=MDURATION(\"2025-01-01\",\"2030-01-01\",0.05,0.04,2)",
    "Tutorial_1": "Calculate modified bond duration.",
    "Tutorial_2": "Risk management in bond portfolios.",
    "Tutorial_3": "Investment sensitivity analysis.",
    "Tutorial_4": "Financial planning scenarios."
  },
  {
    "id": 300,
    "Function_name": "MEDIAN",
    "description_en": "Returns the median of the given numbers",
    "Category": "Statistical",
    "syntax_en": "MEDIAN(number1,[number2],...)",
    "example_en": "=MEDIAN(A1:A8)",
    "Tutorial_1": "Find median in data sets.",
    "Tutorial_2": "Salary benchmarking analyses.",
    "Tutorial_3": "Statistical data evaluations.",
    "Tutorial_4": "Middle value in performance metrics."
  },
  {
    "id": 301,
    "Function_name": "MID",
    "description_en": "Returns a specific number of characters from a text string starting at the position you specify",
    "Category": "Text",
    "syntax_en": "MID(text,start_num,num_chars)",
    "example_en": "=MID(\"Excel\",2,3)",
    "Tutorial_1": "Extract mid-string characters.",
    "Tutorial_2": "Parsing product codes.",
    "Tutorial_3": "Data extraction tasks.",
    "Tutorial_4": "Text analysis processes."
  },
  {
    "id": 302,
    "Function_name": "MIDB",
    "description_en": "Returns a specific number of characters from a text string starting at the position you specify",
    "Category": "Text",
    "syntax_en": "MIDB(text,start_num,num_bytes)",
    "example_en": "=MIDB(\"??Excel\",3,4)",
    "Tutorial_1": "Extract bytes from mid-string (DBCS).",
    "Tutorial_2": "Asian language parsing.",
    "Tutorial_3": "Multilingual data extraction.",
    "Tutorial_4": "Text data analysis tasks."
  },
  {
    "id": 303,
    "Function_name": "MIN",
    "description_en": "Returns the minimum value in a list of arguments",
    "Category": "Statistical",
    "syntax_en": "MIN(number1,[number2],...)",
    "example_en": "=MIN(A1:A8)",
    "Tutorial_1": "Find minimum value.",
    "Tutorial_2": "Evaluate lowest sales data.",
    "Tutorial_3": "Cost minimization analysis.",
    "Tutorial_4": "Identify record lows."
  },
  {
    "id": 304,
    "Function_name": "MINA",
    "description_en": "Returns the smallest value in a list of arguments, including numbers, text, and logical values",
    "Category": "Statistical",
    "syntax_en": "MINIFS(min_range, criteria_range1, criteria1, [criteria_range2, criteria2],...)",
    "example_en": "=MINIFS(B1:B7,C1:C7,\"North\")",
    "Tutorial_1": "Lowest price per region.",
    "Tutorial_2": "Minimum inventory thresholds.",
    "Tutorial_3": "Cost reduction analyses.",
    "Tutorial_4": "Performance benchmark studies."
  },
  {
    "id": 305,
    "Function_name": "MINIFS",
    "description_en": "Returns the minimum value among cells specified by a given set of conditions or criteria.",
    "Category": "Statistical",
    "syntax_en": "MINA(value1,[value2],...)",
    "example_en": "=MINA(A1:A4)",
    "Tutorial_1": "Minimum value including text/logical as numbers.",
    "Tutorial_2": "Mixed-type data analysis.",
    "Tutorial_3": "Survey data evaluations.",
    "Tutorial_4": "Conditional data filtering."
  },
  {
    "id": 306,
    "Function_name": "MINUTE",
    "description_en": "Converts a serial number to a minute",
    "Category": "Date and time",
    "syntax_en": "MINUTE(serial_number)",
    "example_en": "=MINUTE(\"12:45\")",
    "Tutorial_1": "Extract minute from time data.",
    "Tutorial_2": "Time-based event tracking.",
    "Tutorial_3": "Shift planning analysis.",
    "Tutorial_4": "Log analysis of activities."
  },
  {
    "id": 307,
    "Function_name": "MINVERSE",
    "description_en": "Returns the matrix inverse of an array",
    "Category": "Math and trigonometry",
    "syntax_en": "MINVERSE(array)",
    "example_en": "=MINVERSE(A1:B2)",
    "Tutorial_1": "Calculate matrix inverse.",
    "Tutorial_2": "Mathematical simulations.",
    "Tutorial_3": "Engineering calculations.",
    "Tutorial_4": "System solutions in linear algebra."
  },
  {
    "id": 308,
    "Function_name": "MIRR",
    "description_en": "Returns the internal rate of return where positive and negative cash flows are financed at different rates",
    "Category": "Financial",
    "syntax_en": "MIRR(values,finance_rate,reinvest_rate)",
    "example_en": "=MIRR(A1:A4,0.05,0.06)",
    "Tutorial_1": "Modified internal rate of return.",
    "Tutorial_2": "Project evaluation metrics.",
    "Tutorial_3": "Investment scenario comparisons.",
    "Tutorial_4": "Financial modeling decisions."
  },
  {
    "id": 309,
    "Function_name": "MMULT",
    "description_en": "Returns the matrix product of two arrays",
    "Category": "Math and trigonometry",
    "syntax_en": "MMULT(array1,array2)",
    "example_en": "=MMULT(A1:B2,C1:D2)",
    "Tutorial_1": "Multiply matrices together.",
    "Tutorial_2": "Engineering structural analysis.",
    "Tutorial_3": "Mathematical modeling tasks.",
    "Tutorial_4": "Multivariate data calculations."
  },
  {
    "id": 310,
    "Function_name": "MOD",
    "description_en": "Returns the remainder from division",
    "Category": "Math and trigonometry",
    "syntax_en": "MOD(number,divisor)",
    "example_en": "=MOD(10,3)",
    "Tutorial_1": "Calculate remainder after division.",
    "Tutorial_2": "Batch processing tasks.",
    "Tutorial_3": "Scheduling periodic events.",
    "Tutorial_4": "Numeric cycle calculations."
  },
  {
    "id": 311,
    "Function_name": "MODE",
    "description_en": "Returns the most common value in a data set",
    "Category": "Compatibility",
    "syntax_en": "MODE(number1,[number2],...)",
    "example_en": "=MODE(A1:A8)",
    "Tutorial_1": "Find most frequent numeric value (legacy).",
    "Tutorial_2": "Customer behavior analysis.",
    "Tutorial_3": "Statistical reporting.",
    "Tutorial_4": "Inventory item frequency analysis."
  },
  {
    "id": 312,
    "Function_name": "MODE.MULT",
    "description_en": "Returns a vertical array of the most frequently occurring, or repetitive values in an array or range of data",
    "Category": "Statistical",
    "syntax_en": "MODE.MULT(number1,[number2],...)",
    "example_en": "=MODE.MULT(A1:A8)",
    "Tutorial_1": "Return multiple modes.",
    "Tutorial_2": "Multimodal data analysis.",
    "Tutorial_3": "Identify frequent occurrences.",
    "Tutorial_4": "Survey data interpretations."
  },
  {
    "id": 313,
    "Function_name": "MODE.SNGL",
    "description_en": "Returns the most common value in a data set",
    "Category": "Statistical",
    "syntax_en": "MODE.SNGL(number1,[number2],...)",
    "example_en": "=MODE.SNGL(A1:A8)",
    "Tutorial_1": "Find single mode value.",
    "Tutorial_2": "Most common product sold.",
    "Tutorial_3": "Common score analysis.",
    "Tutorial_4": "Frequency analysis reports."
  },
  {
    "id": 314,
    "Function_name": "MONTH",
    "description_en": "Converts a serial number to a month",
    "Category": "Date and time",
    "syntax_en": "MONTH(serial_number)",
    "example_en": "=MONTH(\"2025-02-15\")",
    "Tutorial_1": "Extract month number from dates.",
    "Tutorial_2": "Sales monthly reporting.",
    "Tutorial_3": "Budget timeline analysis.",
    "Tutorial_4": "Seasonal trend evaluations."
  },
  {
    "id": 315,
    "Function_name": "MROUND",
    "description_en": "Returns a number rounded to the desired multiple",
    "Category": "Math and trigonometry",
    "syntax_en": "MROUND(number,multiple)",
    "example_en": "=MROUND(16,5)",
    "Tutorial_1": "Round numbers to nearest multiple.",
    "Tutorial_2": "Pricing standardization.",
    "Tutorial_3": "Inventory ordering calculations.",
    "Tutorial_4": "Financial report rounding."
  },
  {
    "id": 316,
    "Function_name": "MULTINOMIAL",
    "description_en": "Returns the multinomial of a set of numbers",
    "Category": "Math and trigonometry",
    "syntax_en": "MULTINOMIAL(number1,[number2],...)",
    "example_en": "=MULTINOMIAL(2,3,4)",
    "Tutorial_1": "Calculate multinomial coefficients.",
    "Tutorial_2": "Probability computations.",
    "Tutorial_3": "Statistical experiment planning.",
    "Tutorial_4": "Combinatorial analysis."
  },
  {
    "id": 317,
    "Function_name": "MUNIT",
    "description_en": "Returns the unit matrix or the specified dimension",
    "Category": "Math and trigonometry",
    "syntax_en": "MUNIT(dimension)",
    "example_en": "=MUNIT(3)",
    "Tutorial_1": "Create identity matrices.",
    "Tutorial_2": "Mathematical simulations.",
    "Tutorial_3": "Linear algebra education.",
    "Tutorial_4": "Engineering calculations."
  },
  {
    "id": 318,
    "Function_name": "N",
    "description_en": "Returns a value converted to a number",
    "Category": "Information",
    "syntax_en": "N(value)",
    "example_en": "=N(TRUE)",
    "Tutorial_1": "Convert values to numeric.",
    "Tutorial_2": "Data cleansing routines.",
    "Tutorial_3": "Logical to numeric conversions.",
    "Tutorial_4": "Data type normalization."
  },
  {
    "id": 319,
    "Function_name": NaN,
    "description_en": "Returns the error value #N/A",
    "Category": "Information",
    "syntax_en": "NA()",
    "example_en": "=NA()",
    "Tutorial_1": "Return the #N/A error explicitly.",
    "Tutorial_2": "Data validation tasks.",
    "Tutorial_3": "Placeholder for missing data.",
    "Tutorial_4": "Error testing in formulas."
  },
  {
    "id": 320,
    "Function_name": "NEGBINOM.DIST",
    "description_en": "Returns the negative binomial distribution",
    "Category": "Statistical",
    "syntax_en": "NEGBINOM.DIST(number_f,number_s,probability_s,cumulative)",
    "example_en": "=NEGBINOM.DIST(3,5,0.4,FALSE)",
    "Tutorial_1": "Negative binomial probability calculations.",
    "Tutorial_2": "Quality control defect analysis.",
    "Tutorial_3": "Statistical risk modeling.",
    "Tutorial_4": "Probability scenario analysis."
  },
  {
    "id": 321,
    "Function_name": "NEGBINOMDIST",
    "description_en": "Returns the negative binomial distribution",
    "Category": "Compatibility",
    "syntax_en": "NEGBINOMDIST(number_f,number_s,probability_s)",
    "example_en": "=NEGBINOMDIST(2,4,0.5)",
    "Tutorial_1": "Legacy negative binomial distribution.",
    "Tutorial_2": "Historical statistical analyses.",
    "Tutorial_3": "Probability calculations.",
    "Tutorial_4": "Defect prediction modeling."
  },
  {
    "id": 322,
    "Function_name": "NETWORKDAYS",
    "description_en": "Returns the number of whole workdays between two dates",
    "Category": "Date and time",
    "syntax_en": "NETWORKDAYS(start_date,end_date,[holidays])",
    "example_en": "=NETWORKDAYS(\"2025-01-01\",\"2025-01-31\")",
    "Tutorial_1": "Count workdays between two dates.",
    "Tutorial_2": "Project scheduling analysis.",
    "Tutorial_3": "Employee payroll calculations.",
    "Tutorial_4": "Timeline management."
  },
  {
    "id": 323,
    "Function_name": "NETWORKDAYS.INTL",
    "description_en": "Returns the number of whole workdays between two dates using parameters to indicate which and how many days are weekend days",
    "Category": "Date and time",
    "syntax_en": "NETWORKDAYS.INTL(start_date,end_date,[weekend],[holidays])",
    "example_en": "=NETWORKDAYS.INTL(\"2025-01-01\",\"2025-01-31\",11)",
    "Tutorial_1": "Count international workdays with custom weekends.",
    "Tutorial_2": "Global project planning.",
    "Tutorial_3": "International payroll calculations.",
    "Tutorial_4": "Customized work schedule analysis."
  },
  {
    "id": 324,
    "Function_name": "NOMINAL",
    "description_en": "Returns the annual nominal interest rate",
    "Category": "Financial",
    "syntax_en": "NOMINAL(effect_rate,npery)",
    "example_en": "=NOMINAL(0.053,4)",
    "Tutorial_1": "Nominal interest rate calculation.",
    "Tutorial_2": "Loan comparisons.",
    "Tutorial_3": "Investment yield evaluations.",
    "Tutorial_4": "Financial scenario modeling."
  },
  {
    "id": 325,
    "Function_name": "NORM.DIST",
    "description_en": "Returns the normal cumulative distribution",
    "Category": "Statistical",
    "syntax_en": "NORM.DIST(x,mean,standard_dev,cumulative)",
    "example_en": "=NORM.DIST(42,40,1.5,TRUE)",
    "Tutorial_1": "Normal distribution probabilities.",
    "Tutorial_2": "Statistical performance analysis.",
    "Tutorial_3": "Quality control evaluation.",
    "Tutorial_4": "Standardized test scoring."
  },
  {
    "id": 326,
    "Function_name": "NORM.INV",
    "description_en": "Returns the inverse of the normal cumulative distribution",
    "Category": "Compatibility",
    "syntax_en": "NORM.INV(probability,mean,standard_dev)",
    "example_en": "=NORM.INV(0.75,100,15)",
    "Tutorial_1": "Inverse normal distribution (modern).",
    "Tutorial_2": "Risk analysis scenarios.",
    "Tutorial_3": "Statistical decision-making.",
    "Tutorial_4": "Performance benchmarking."
  },
  {
    "id": 327,
    "Function_name": "NORM.S.DIST",
    "description_en": "Returns the standard normal cumulative distribution",
    "Category": "Statistical",
    "syntax_en": "NORM.S.DIST(z,cumulative)",
    "example_en": "=NORM.S.DIST(1.96,TRUE)",
    "Tutorial_1": "Standard normal distribution probabilities.",
    "Tutorial_2": "Hypothesis testing.",
    "Tutorial_3": "Statistical analysis scenarios.",
    "Tutorial_4": "Research data evaluations."
  },
  {
    "id": 328,
    "Function_name": "NORM.S.INV",
    "description_en": "Returns the inverse of the standard normal cumulative distribution",
    "Category": "Statistical",
    "syntax_en": "NORM.S.INV(probability)",
    "example_en": "=NORM.S.INV(0.975)",
    "Tutorial_1": "Inverse standard normal distribution.",
    "Tutorial_2": "Statistical significance cutoffs.",
    "Tutorial_3": "Research data thresholding.",
    "Tutorial_4": "Risk management scenarios."
  },
  {
    "id": 329,
    "Function_name": "NORMDIST",
    "description_en": "Returns the normal cumulative distribution",
    "Category": "Compatibility",
    "syntax_en": "NORMDIST(x,mean,standard_dev,cumulative)",
    "example_en": "=NORMDIST(75,70,3,FALSE)",
    "Tutorial_1": "Legacy normal distribution calculation.",
    "Tutorial_2": "Historical data analyses.",
    "Tutorial_3": "Statistical probability modeling.",
    "Tutorial_4": "Quality control checks."
  },
  {
    "id": 330,
    "Function_name": "NORMINV",
    "description_en": "Returns the inverse of the normal cumulative distribution",
    "Category": "Statistical",
    "syntax_en": "NORMINV(probability,mean,standard_dev)",
    "example_en": "=NORMINV(0.9,50,5)",
    "Tutorial_1": "Inverse normal distribution calculations.",
    "Tutorial_2": "Threshold determinations.",
    "Tutorial_3": "Risk assessments in finance.",
    "Tutorial_4": "Quality assurance limits."
  },
  {
    "id": 331,
    "Function_name": "NORMSDIST",
    "description_en": "Returns the standard normal cumulative distribution",
    "Category": "Compatibility",
    "syntax_en": "NORMSDIST(z)",
    "example_en": "=NORMSDIST(0)",
    "Tutorial_1": "Legacy standard normal cumulative distribution.",
    "Tutorial_2": "Historical statistical calculations.",
    "Tutorial_3": "Z-score evaluations.",
    "Tutorial_4": "Statistical testing."
  },
  {
    "id": 332,
    "Function_name": "NORMSINV",
    "description_en": "Returns the inverse of the standard normal cumulative distribution",
    "Category": "Compatibility",
    "syntax_en": "NORMSINV(probability)",
    "example_en": "=NORMSINV(0.95)",
    "Tutorial_1": "Legacy inverse standard normal distribution.",
    "Tutorial_2": "Traditional statistical analyses.",
    "Tutorial_3": "Historical data validations.",
    "Tutorial_4": "Probability modeling tasks."
  },
  {
    "id": 333,
    "Function_name": "NOT",
    "description_en": "Reverses the logic of its argument",
    "Category": "Logical",
    "syntax_en": "NOT(logical)",
    "example_en": "=NOT(A1>10)",
    "Tutorial_1": "Logical negation.",
    "Tutorial_2": "Condition inversion in formulas.",
    "Tutorial_3": "Data validation logic.",
    "Tutorial_4": "Logical rule setups."
  },
  {
    "id": 334,
    "Function_name": "NOW",
    "description_en": "Returns the serial number of the current date and time",
    "Category": "Date and time",
    "syntax_en": "NOW()",
    "example_en": "=NOW()",
    "Tutorial_1": "Current date and time.",
    "Tutorial_2": "Timestamp entries.",
    "Tutorial_3": "Report generation tracking.",
    "Tutorial_4": "Data logging."
  },
  {
    "id": 335,
    "Function_name": "NPER",
    "description_en": "Returns the number of periods for an investment",
    "Category": "Financial",
    "syntax_en": "NPER(rate,pmt,pv,[fv],[type])",
    "example_en": "=NPER(0.05,-100,5000)",
    "Tutorial_1": "Calculate periods for investment/loan.",
    "Tutorial_2": "Debt repayment planning.",
    "Tutorial_3": "Investment term analysis.",
    "Tutorial_4": "Financial timeline modeling."
  },
  {
    "id": 336,
    "Function_name": "NPV",
    "description_en": "Returns the net present value of an investment based on a series of periodic cash flows and a discount rate",
    "Category": "Financial",
    "syntax_en": "NPV(rate,value1,[value2],...)",
    "example_en": "=NPV(0.1,A1:A3)",
    "Tutorial_1": "Calculate net present value.",
    "Tutorial_2": "Investment evaluation.",
    "Tutorial_3": "Project feasibility analyses.",
    "Tutorial_4": "Financial decision-making."
  },
  {
    "id": 337,
    "Function_name": "NUMBERVALUE",
    "description_en": "Converts text to number in a locale-independent manner",
    "Category": "Text",
    "syntax_en": "NUMBERVALUE(text,[decimal_separator],[group_separator])",
    "example_en": "=NUMBERVALUE(\"1.234,56\",\",\",\".\")",
    "Tutorial_1": "Convert text to numbers with custom separators.",
    "Tutorial_2": "International number conversions.",
    "Tutorial_3": "Data import preparations.",
    "Tutorial_4": "Multiregional financial reporting."
  },
  {
    "id": 338,
    "Function_name": "OCT2BIN",
    "description_en": "Converts an octal number to binary",
    "Category": "Engineering",
    "syntax_en": "OCT2BIN(number,[places])",
    "example_en": "=OCT2BIN(\"12\")",
    "Tutorial_1": "Convert octal numbers to binary.",
    "Tutorial_2": "Numeric conversions for software.",
    "Tutorial_3": "Educational numeric demonstrations.",
    "Tutorial_4": "Data processing in computing."
  },
  {
    "id": 339,
    "Function_name": "OCT2DEC",
    "description_en": "Converts an octal number to decimal",
    "Category": "Engineering",
    "syntax_en": "OCT2DEC(number)",
    "example_en": "=OCT2DEC(\"17\")",
    "Tutorial_1": "Convert octal to decimal.",
    "Tutorial_2": "Legacy system data integration.",
    "Tutorial_3": "Numeric system education.",
    "Tutorial_4": "Data transformation tasks."
  },
  {
    "id": 340,
    "Function_name": "OCT2HEX",
    "description_en": "Converts an octal number to hexadecimal",
    "Category": "Engineering",
    "syntax_en": "OCT2HEX(number,[places])",
    "example_en": "=OCT2HEX(\"10\")",
    "Tutorial_1": "Convert octal numbers to hexadecimal.",
    "Tutorial_2": "Programming numeric conversions.",
    "Tutorial_3": "Data preparation tasks.",
    "Tutorial_4": "Numeric system analyses."
  },
  {
    "id": 341,
    "Function_name": "ODD",
    "description_en": "Rounds a number up to the nearest odd integer",
    "Category": "Math and trigonometry",
    "syntax_en": "ODD(number)",
    "example_en": "=ODD(4.5)",
    "Tutorial_1": "Round numbers up to nearest odd integer.",
    "Tutorial_2": "Batch processing calculations.",
    "Tutorial_3": "Data standardization.",
    "Tutorial_4": "Inventory packaging units."
  },
  {
    "id": 342,
    "Function_name": "ODDFPRICE",
    "description_en": "Returns the price per $100 face value of a security with an odd first period",
    "Category": "Financial",
    "syntax_en": "ODDFPRICE(settlement,maturity,issue,first_coupon,rate,yld,redemption,frequency,[basis])",
    "example_en": "=ODDFPRICE(\"2025-01-15\",\"2028-03-01\",\"2025-01-01\",\"2025-06-01\",0.05,0.06,100,2)",
    "Tutorial_1": "Calculate price of bonds with odd first period.",
    "Tutorial_2": "Financial investment evaluations.",
    "Tutorial_3": "Bond portfolio pricing.",
    "Tutorial_4": "Investment risk analysis."
  },
  {
    "id": 343,
    "Function_name": "ODDFYIELD",
    "description_en": "Returns the yield of a security with an odd first period",
    "Category": "Financial",
    "syntax_en": "ODDFYIELD(settlement,maturity,issue,first_coupon,rate,pr,redemption,frequency,[basis])",
    "example_en": "=ODDFYIELD(\"2025-01-15\",\"2028-03-01\",\"2025-01-01\",\"2025-06-01\",0.05,98,100,2)",
    "Tutorial_1": "Calculate yield of bonds with odd first period.",
    "Tutorial_2": "Bond investment assessments.",
    "Tutorial_3": "Financial yield analyses.",
    "Tutorial_4": "Portfolio yield evaluations."
  },
  {
    "id": 344,
    "Function_name": "ODDLPRICE",
    "description_en": "Returns the price per $100 face value of a security with an odd last period",
    "Category": "Financial",
    "syntax_en": "ODDLPRICE(settlement,maturity,last_interest,rate,yld,redemption,frequency,[basis])",
    "example_en": "=ODDLPRICE(\"2025-02-01\",\"2028-12-31\",\"2025-01-01\",0.04,0.05,100,2)",
    "Tutorial_1": "Price bonds with odd last period.",
    "Tutorial_2": "Investment analyses.",
    "Tutorial_3": "Financial planning.",
    "Tutorial_4": "Bond valuation scenarios."
  },
  {
    "id": 345,
    "Function_name": "ODDLYIELD",
    "description_en": "Returns the yield of a security with an odd last period",
    "Category": "Financial",
    "syntax_en": "ODDLYIELD(settlement,maturity,last_interest,rate,pr,redemption,frequency,[basis])",
    "example_en": "=ODDLYIELD(\"2025-02-01\",\"2028-12-31\",\"2025-01-01\",0.04,99,100,2)",
    "Tutorial_1": "Yield calculation of bonds with odd last period.",
    "Tutorial_2": "Bond yield evaluations.",
    "Tutorial_3": "Financial scenario analyses.",
    "Tutorial_4": "Investment return assessments."
  },
  {
    "id": 346,
    "Function_name": "OFFSET",
    "description_en": "Returns a reference offset from a given reference",
    "Category": "Lookup and reference",
    "syntax_en": "OFFSET(reference,rows,cols,[height],[width])",
    "example_en": "=OR(A1>50,B1<30)",
    "Tutorial_1": "Dynamic cell reference adjustments.",
    "Tutorial_2": "Dashboard data handling.",
    "Tutorial_3": "Dynamic range calculations.",
    "Tutorial_4": "Data-driven reports."
  },
  {
    "id": 347,
    "Function_name": "OR",
    "description_en": "Returns TRUE if any argument is TRUE",
    "Category": "Logical",
    "syntax_en": "OR(logical1,[logical2],...)",
    "example_en": "=OR(A1>50,B1<30)",
    "Tutorial_1": "Logical OR condition checks.",
    "Tutorial_2": "Conditional formatting.",
    "Tutorial_3": "Formula condition management.",
    "Tutorial_4": "Data validation processes."
  },
  {
    "id": 348,
    "Function_name": "PDURATION",
    "description_en": "Returns the number of periods required by an investment to reach a specified value",
    "Category": "Financial",
    "syntax_en": "PDURATION(rate,pv,fv)",
    "example_en": "=PDURATION(0.06,1000,2000)",
    "Tutorial_1": "Calculate periods for investments to reach a value.",
    "Tutorial_2": "Savings goal analysis.",
    "Tutorial_3": "Financial planning tasks.",
    "Tutorial_4": "Investment timeline evaluation."
  },
  {
    "id": 349,
    "Function_name": "PEARSON",
    "description_en": "Returns the Pearson product moment correlation coefficient",
    "Category": "Statistical",
    "syntax_en": "PEARSON(array1,array2)",
    "example_en": "=PEARSON(A1:A3,B1:B3)",
    "Tutorial_1": "Correlation coefficient calculations.",
    "Tutorial_2": "Data relationship analysis.",
    "Tutorial_3": "Market research evaluations.",
    "Tutorial_4": "Statistical correlation studies."
  },
  {
    "id": 350,
    "Function_name": "PERCENTILE",
    "description_en": "Returns the k-th percentile of values in a range",
    "Category": "Compatibility",
    "syntax_en": "PERCENTILE(array,k)",
    "example_en": "=PERCENTILE(A1:A6,0.5)",
    "Tutorial_1": "Legacy percentile function.",
    "Tutorial_2": "Historical data evaluations.",
    "Tutorial_3": "Statistical studies.",
    "Tutorial_4": "Performance ranking tasks."
  },
  {
    "id": 351,
    "Function_name": "PERCENTILE.EXC",
    "description_en": "Returns the k-th percentile of values in a range, where k is in the range 0..1, exclusive",
    "Category": "Statistical",
    "syntax_en": "PERCENTILE.EXC(array,k)",
    "example_en": "=PERCENTILE.EXC(A1:A9,0.3)",
    "Tutorial_1": "Exclusive percentile calculations.",
    "Tutorial_2": "Statistical data analyses.",
    "Tutorial_3": "Performance ranking.",
    "Tutorial_4": "Distribution assessments."
  },
  {
    "id": 352,
    "Function_name": "PERCENTILE.INC",
    "description_en": "Returns the k-th percentile of values in a range",
    "Category": "Statistical",
    "syntax_en": "PERCENTILE.INC(array,k)",
    "example_en": "=PERCENTILE.INC(A1:A9,0.75)",
    "Tutorial_1": "Inclusive percentile calculations.",
    "Tutorial_2": "Benchmarking analyses.",
    "Tutorial_3": "Statistical distribution evaluations.",
    "Tutorial_4": "Data-driven decisions."
  },
  {
    "id": 353,
    "Function_name": "PERCENTOF",
    "description_en": "Sums the values in the subset and divides it by all the values",
    "Category": "Math and trigonometry",
    "syntax_en": "PERCENTOF(total,value)",
    "example_en": "=PERCENTOF(200,50)",
    "Tutorial_1": "Calculate percentage of total dynamically.",
    "Tutorial_2": "Sales proportion analyses.",
    "Tutorial_3": "Expense tracking reports.",
    "Tutorial_4": "Data visualization preparations."
  },
  {
    "id": 354,
    "Function_name": "PERCENTRANK",
    "description_en": "Returns the percentage rank of a value in a data set",
    "Category": "Compatibility",
    "syntax_en": "PERCENTRANK(array,x,[significance])",
    "example_en": "=PERCENTRANK(A1:A6,6)",
    "Tutorial_1": "Legacy percent rank function.",
    "Tutorial_2": "Historical performance analyses.",
    "Tutorial_3": "Data ranking.",
    "Tutorial_4": "Benchmarking historical datasets."
  },
  {
    "id": 355,
    "Function_name": "PERCENTRANK.EXC",
    "description_en": "Returns the rank of a value in a data set as a percentage (0..1, exclusive) of the data set",
    "Category": "Statistical",
    "syntax_en": "PERCENTRANK.EXC(array,x,[significance])",
    "example_en": "=PERCENTRANK.EXC(A1:A9,5)",
    "Tutorial_1": "Exclusive percent rank calculation.",
    "Tutorial_2": "Ranking performance metrics.",
    "Tutorial_3": "Statistical evaluations.",
    "Tutorial_4": "Benchmarking analyses."
  },
  {
    "id": 356,
    "Function_name": "PERCENTRANK.INC",
    "description_en": "Returns the percentage rank of a value in a data set",
    "Category": "Statistical",
    "syntax_en": "PERCENTRANK.INC(array,x,[significance])",
    "example_en": "=PERCENTRANK.INC(A1:A9,8)",
    "Tutorial_1": "Inclusive percent rank calculation.",
    "Tutorial_2": "Performance percentile rankings.",
    "Tutorial_3": "Data analysis tasks.",
    "Tutorial_4": "Employee evaluations."
  },
  {
    "id": 357,
    "Function_name": "PERMUT",
    "description_en": "Returns the number of permutations for a given number of objects",
    "Category": "Statistical",
    "syntax_en": "PERMUT(number, number_chosen)",
    "example_en": "=PERMUT(5,3)",
    "Tutorial_1": "Permutations calculation.",
    "Tutorial_2": "Probability modeling.",
    "Tutorial_3": "Statistical event planning.",
    "Tutorial_4": "Resource allocation studies."
  },
  {
    "id": 358,
    "Function_name": "PERMUTATIONA",
    "description_en": "Returns the number of permutations for a given number of objects (with repetitions) that can be selected from the total objects",
    "Category": "Statistical",
    "syntax_en": "PERMUTATIONA(number, number_chosen)",
    "example_en": "=PERMUTATIONA(3,2)",
    "Tutorial_1": "Permutations with repetitions.",
    "Tutorial_2": "Menu combinations.",
    "Tutorial_3": "Product bundling scenarios.",
    "Tutorial_4": "Marketing strategy analyses."
  },
  {
    "id": 359,
    "Function_name": "PHI",
    "description_en": "Returns the value of the density function for a standard normal distribution",
    "Category": "Statistical",
    "syntax_en": "PHI(x)",
    "example_en": "=PHI(0.75)",
    "Tutorial_1": "Density of standard normal distribution.",
    "Tutorial_2": "Statistical analyses.",
    "Tutorial_3": "Probability density evaluations.",
    "Tutorial_4": "Research modeling tasks."
  },
  {
    "id": 360,
    "Function_name": "PHONETIC",
    "description_en": "Extracts the phonetic (furigana) characters from a text string",
    "Category": "Text",
    "syntax_en": "PHONETIC(reference)",
    "example_en": "=PHONETIC(A1)",
    "Tutorial_1": "Extract phonetic guides (Japanese).",
    "Tutorial_2": "Japanese text processing.",
    "Tutorial_3": "Multilingual data management.",
    "Tutorial_4": "Report preparation in Japanese."
  },
  {
    "id": 361,
    "Function_name": "PI",
    "description_en": "Returns the value of pi",
    "Category": "Math and trigonometry",
    "syntax_en": "PI()",
    "example_en": "=PI()",
    "Tutorial_1": "Return value of ? (pi).",
    "Tutorial_2": "Geometry calculations.",
    "Tutorial_3": "Mathematical modeling.",
    "Tutorial_4": "Engineering computations."
  },
  {
    "id": 362,
    "Function_name": "PIVOTBY",
    "description_en": "Helps a user group, aggregate, sort, and filter data based on the row and column fields that you specify",
    "Category": "Lookup and reference",
    "syntax_en": "PMT(rate,nper,pv,[fv],[type])",
    "example_en": "=PMT(0.06/12,60,10000)",
    "Tutorial_1": "Calculate payment for loan/investment.",
    "Tutorial_2": "Mortgage payment schedules.",
    "Tutorial_3": "Financial planning.",
    "Tutorial_4": "Loan amortization analysis."
  },
  {
    "id": 363,
    "Function_name": "PMT",
    "description_en": "Returns the periodic payment for an annuity",
    "Category": "Financial",
    "syntax_en": "POISSON.DIST(x,mean,cumulative)",
    "example_en": "=POISSON.DIST(3,5,TRUE)",
    "Tutorial_1": "Poisson distribution probabilities.",
    "Tutorial_2": "Event prediction modeling.",
    "Tutorial_3": "Quality control analyses.",
    "Tutorial_4": "Statistical assessments."
  },
  {
    "id": 364,
    "Function_name": "POISSON",
    "description_en": "Returns the Poisson distribution",
    "Category": "Compatibility",
    "syntax_en": "POWER(number,power)",
    "example_en": "=POWER(3,4)",
    "Tutorial_1": "Calculate number raised to power.",
    "Tutorial_2": "Exponential growth analyses.",
    "Tutorial_3": "Financial modeling.",
    "Tutorial_4": "Mathematical computations."
  },
  {
    "id": 365,
    "Function_name": "POISSON.DIST",
    "description_en": "Returns the Poisson distribution",
    "Category": "Statistical",
    "syntax_en": "POISSON(x,mean,cumulative)",
    "example_en": "=POISSON(2,4,FALSE)",
    "Tutorial_1": "Legacy Poisson function.",
    "Tutorial_2": "Historical statistical evaluations.",
    "Tutorial_3": "Probability event calculations.",
    "Tutorial_4": "Defect analysis scenarios."
  },
  {
    "id": 366,
    "Function_name": "POWER",
    "description_en": "Returns the result of a number raised to a power",
    "Category": "Math and trigonometry",
    "syntax_en": "PPMT(rate,per,nper,pv,[fv],[type])",
    "example_en": "=PPMT(0.05/12,1,60,10000)",
    "Tutorial_1": "Principal payment calculation.",
    "Tutorial_2": "Loan amortization tables.",
    "Tutorial_3": "Financial budgeting tasks.",
    "Tutorial_4": "Debt reduction planning."
  },
  {
    "id": 367,
    "Function_name": "PPMT",
    "description_en": "Returns the payment on the principal for an investment for a given period",
    "Category": "Financial",
    "syntax_en": "PRICE(settlement,maturity,rate,yld,redemption,frequency,[basis])",
    "example_en": "=PRICE(\"2025-01-01\",\"2030-01-01\",0.05,0.06,100,2)",
    "Tutorial_1": "Bond pricing calculation.",
    "Tutorial_2": "Investment portfolio analyses.",
    "Tutorial_3": "Risk assessment scenarios.",
    "Tutorial_4": "Financial forecasting."
  },
  {
    "id": 368,
    "Function_name": "PRICE",
    "description_en": "Returns the price per $100 face value of a security that pays periodic interest",
    "Category": "Financial",
    "syntax_en": "PRICEDISC(settlement,maturity,discount,redemption,[basis])",
    "example_en": "=PRICEDISC(\"2025-01-01\",\"2026-01-01\",0.05,100)",
    "Tutorial_1": "Price discounted securities.",
    "Tutorial_2": "Financial market evaluations.",
    "Tutorial_3": "Discount instrument analyses.",
    "Tutorial_4": "Investment scenario planning."
  },
  {
    "id": 369,
    "Function_name": "PRICEDISC",
    "description_en": "Returns the price per $100 face value of a discounted security",
    "Category": "Financial",
    "syntax_en": "PRICEMAT(settlement,maturity,issue,rate,yld,[basis])",
    "example_en": "=PRICEMAT(\"2025-01-01\",\"2030-01-01\",\"2025-01-01\",0.05,0.06)",
    "Tutorial_1": "Pricing at maturity of securities.",
    "Tutorial_2": "Investment analysis.",
    "Tutorial_3": "Financial reporting scenarios.",
    "Tutorial_4": "Bond evaluation tasks."
  },
  {
    "id": 370,
    "Function_name": "PRICEMAT",
    "description_en": "Returns the price per $100 face value of a security that pays interest at maturity",
    "Category": "Financial",
    "syntax_en": "PROB(x_range,prob_range,[lower_limit],[upper_limit])",
    "example_en": "=PROB(A1:A3,B1:B3,2,4)",
    "Tutorial_1": "Probability calculation with ranges.",
    "Tutorial_2": "Statistical probability assessments.",
    "Tutorial_3": "Risk modeling tasks.",
    "Tutorial_4": "Event likelihood analyses."
  },
  {
    "id": 371,
    "Function_name": "PROB",
    "description_en": "Returns the probability that values in a range are between two limits",
    "Category": "Statistical",
    "syntax_en": "PRODUCT(number1,[number2],...)",
    "example_en": "=PRODUCT(A1:A3)",
    "Tutorial_1": "Multiply numeric values together.",
    "Tutorial_2": "Revenue calculations.",
    "Tutorial_3": "Compound growth analysis.",
    "Tutorial_4": "Product bundling valuations."
  },
  {
    "id": 372,
    "Function_name": "PRODUCT",
    "description_en": "Multiplies its arguments",
    "Category": "Math and trigonometry",
    "syntax_en": "PROPER(text)",
    "example_en": "=PROPER(\"excel sheet\")",
    "Tutorial_1": "Capitalize words properly.",
    "Tutorial_2": "Data formatting tasks.",
    "Tutorial_3": "Text standardization.",
    "Tutorial_4": "Report preparations."
  },
  {
    "id": 373,
    "Function_name": "PROPER",
    "description_en": "Capitalizes the first letter in each word of a text value",
    "Category": "Text",
    "syntax_en": "PV(rate,nper,pmt,[fv],[type])",
    "example_en": "=PV(0.05,5,-200)",
    "Tutorial_1": "Present value calculation.",
    "Tutorial_2": "Investment valuation.",
    "Tutorial_3": "Financial scenario planning.",
    "Tutorial_4": "Project funding assessments."
  },
  {
    "id": 374,
    "Function_name": "PV",
    "description_en": "Returns the present value of an investment",
    "Category": "Financial",
    "syntax_en": "QUARTILE(array,quart)",
    "example_en": "=QUARTILE(A1:A8,2)",
    "Tutorial_1": "Legacy quartile calculations.",
    "Tutorial_2": "Statistical data evaluations.",
    "Tutorial_3": "Benchmarking scenarios.",
    "Tutorial_4": "Performance analyses."
  },
  {
    "id": 375,
    "Function_name": "QUARTILE",
    "description_en": "Returns the quartile of a data set",
    "Category": "Compatibility",
    "syntax_en": "QUARTILE.EXC(array,quart)",
    "example_en": "=QUARTILE.EXC(A1:A8,3)",
    "Tutorial_1": "Quartile exclusive calculation.",
    "Tutorial_2": "Statistical distributions.",
    "Tutorial_3": "Data benchmarking.",
    "Tutorial_4": "Performance percentile studies."
  },
  {
    "id": 376,
    "Function_name": "QUARTILE.EXC",
    "description_en": "Returns the quartile of the data set, based on percentile values from 0..1, exclusive",
    "Category": "Statistical",
    "syntax_en": "QUARTILE.INC(array,quart)",
    "example_en": "=QUARTILE.INC(A1:A8,1)",
    "Tutorial_1": "Quartile inclusive calculation.",
    "Tutorial_2": "Performance ranking.",
    "Tutorial_3": "Statistical evaluations.",
    "Tutorial_4": "Benchmark analyses."
  },
  {
    "id": 377,
    "Function_name": "QUARTILE.INC",
    "description_en": "Returns the quartile of a data set",
    "Category": "Statistical",
    "syntax_en": "QUOTIENT(numerator, denominator)",
    "example_en": "=QUOTIENT(7,3)",
    "Tutorial_1": "Integer division without remainder.",
    "Tutorial_2": "Batch quantity calculations.",
    "Tutorial_3": "Inventory packaging tasks.",
    "Tutorial_4": "Data normalization processes."
  },
  {
    "id": 378,
    "Function_name": "QUOTIENT",
    "description_en": "Returns the integer portion of a division",
    "Category": "Math and trigonometry",
    "syntax_en": "RADIANS(angle)",
    "example_en": "=RADIANS(180)",
    "Tutorial_1": "Convert degrees to radians.",
    "Tutorial_2": "Geometry problem-solving.",
    "Tutorial_3": "Engineering angle calculations.",
    "Tutorial_4": "Physics computations."
  },
  {
    "id": 379,
    "Function_name": "RADIANS",
    "description_en": "Converts degrees to radians",
    "Category": "Math and trigonometry",
    "syntax_en": "RAND()",
    "example_en": "=RAND()",
    "Tutorial_1": "Generate random number between 0-1.",
    "Tutorial_2": "Simulation scenarios.",
    "Tutorial_3": "Random sampling.",
    "Tutorial_4": "Statistical analyses."
  },
  {
    "id": 380,
    "Function_name": "RAND",
    "description_en": "Returns a random number between 0 and 1",
    "Category": "Math and trigonometry",
    "syntax_en": "RANDARRAY([rows],[columns],[min],[max],[integer])",
    "example_en": "=RANDARRAY(3,3,1,10,TRUE)",
    "Tutorial_1": "Generate array of random numbers.",
    "Tutorial_2": "Simulation modeling.",
    "Tutorial_3": "Statistical sampling.",
    "Tutorial_4": "Random data generation."
  },
  {
    "id": 381,
    "Function_name": "RANDARRAY",
    "description_en": "Returns an array of random numbers between 0 and 1. However, you can specify the number of rows and columns to fill, minimum and maximum values, and whether to return whole numbers or decimal values.",
    "Category": "Math and trigonometry",
    "syntax_en": "RANDBETWEEN(bottom,top)",
    "example_en": "=RANDBETWEEN(1,100)",
    "Tutorial_1": "Random integer within range.",
    "Tutorial_2": "Lottery number selections.",
    "Tutorial_3": "Random sampling tasks.",
    "Tutorial_4": "Test data generation."
  },
  {
    "id": 382,
    "Function_name": "RANDBETWEEN",
    "description_en": "Returns a random number between the numbers you specify",
    "Category": "Math and trigonometry",
    "syntax_en": "RANK.AVG(number,ref,[order])",
    "example_en": "=RANK.AVG(3,A1:A8,0)",
    "Tutorial_1": "Average rank calculation.",
    "Tutorial_2": "Employee performance evaluation.",
    "Tutorial_3": "Statistical rankings.",
    "Tutorial_4": "Sales performance analysis."
  },
  {
    "id": 383,
    "Function_name": "RANK",
    "description_en": "Returns the rank of a number in a list of numbers",
    "Category": "Compatibility",
    "syntax_en": "RATE(nper,pmt,pv,[fv],[type],[guess])",
    "example_en": "=RATE(60,-100,5000)",
    "Tutorial_1": "Interest rate per period calculation.",
    "Tutorial_2": "Loan evaluation.",
    "Tutorial_3": "Investment planning.",
    "Tutorial_4": "Financial scenario analysis."
  },
  {
    "id": 384,
    "Function_name": "RANK.AVG",
    "description_en": "Returns the rank of a number in a list of numbers",
    "Category": "Statistical",
    "syntax_en": "RANK.EQ(number,ref,[order])",
    "example_en": "=RANK.EQ(4,A1:A9,1)",
    "Tutorial_1": "Equal rank calculation.",
    "Tutorial_2": "Competitive ranking tasks.",
    "Tutorial_3": "Student performance assessment.",
    "Tutorial_4": "Data evaluation reports."
  },
  {
    "id": 385,
    "Function_name": "RANK.EQ",
    "description_en": "Returns the rank of a number in a list of numbers",
    "Category": "Statistical",
    "syntax_en": "RANK(number,ref,[order])",
    "example_en": "=RANK(5,A1:A9)",
    "Tutorial_1": "Legacy rank calculation.",
    "Tutorial_2": "Historical data ranking.",
    "Tutorial_3": "Statistical evaluations.",
    "Tutorial_4": "Benchmarking studies."
  },
  {
    "id": 386,
    "Function_name": "RATE",
    "description_en": "Returns the interest rate per period of an annuity",
    "Category": "Financial",
    "syntax_en": "RECEIVED(settlement,maturity,investment,discount,[basis])",
    "example_en": "=RECEIVED(\"2025-01-01\",\"2026-01-01\",1000,0.05)",
    "Tutorial_1": "Amount received at maturity for discounted security.",
    "Tutorial_2": "Investment return analysis.",
    "Tutorial_3": "Financial scenario planning.",
    "Tutorial_4": "Yield assessments."
  },
  {
    "id": 387,
    "Function_name": "RECEIVED",
    "description_en": "Returns the amount received at maturity for a fully invested security",
    "Category": "Financial",
    "syntax_en": "REDUCE(initial_value,array,lambda)",
    "example_en": "=REDUCE(0,A1:A5,LAMBDA(acc,val,acc+val))",
    "Tutorial_1": "Aggregate array values.",
    "Tutorial_2": "Sum product calculations.",
    "Tutorial_3": "Data summarization tasks.",
    "Tutorial_4": "Custom financial modeling."
  },
  {
    "id": 388,
    "Function_name": "REDUCE",
    "description_en": "Reduces an array to an accumulated value by applying aÂ LAMBDAÂ to each value and returning the total value in the accumulator",
    "Category": "Logical",
    "syntax_en": "REGEXEXTRACT(text,regular_expression)",
    "example_en": "=REGEXEXTRACT(A1,\"[0-9]+\")",
    "Tutorial_1": "Extract text using regular expressions.",
    "Tutorial_2": "Data parsing tasks.",
    "Tutorial_3": "Text data analysis.",
    "Tutorial_4": "Custom extraction routines."
  },
  {
    "id": 389,
    "Function_name": "REGEXEXTRACT",
    "description_en": "Extracts strings within the provided text that matches the pattern",
    "Category": "Text",
    "syntax_en": "REGEXREPLACE(text,regular_expression,replace_text)",
    "example_en": "=REGEXREPLACE(A1,\"[A-Z]\",\"\")",
    "Tutorial_1": "Replace text using regular expressions.",
    "Tutorial_2": "Data cleansing tasks.",
    "Tutorial_3": "Text formatting.",
    "Tutorial_4": "Report preparation."
  },
  {
    "id": 390,
    "Function_name": "REGEXREPLACE",
    "description_en": "Replaces strings within the provided text that matches the pattern with replacement",
    "Category": "Text",
    "syntax_en": "REGEXTEST(text,regular_expression)",
    "example_en": "=REGEXTEST(A1,\"^\\d{3}-\\d{2}-\\d{4}$\")",
    "Tutorial_1": "Test text against regular expressions.",
    "Tutorial_2": "Data validation.",
    "Tutorial_3": "Input verification tasks.",
    "Tutorial_4": "Data quality control."
  },
  {
    "id": 391,
    "Function_name": "REGEXTEST",
    "description_en": "Determines whether any part of text matches the pattern",
    "Category": "Text",
    "syntax_en": "REGISTER.ID(module_text,procedure,type_text)",
    "example_en": "=REGISTER.ID(\"MyAddin.dll\",\"MyFunction\",\"JJ\")",
    "Tutorial_1": "Call registered external DLL functions.",
    "Tutorial_2": "Advanced automation.",
    "Tutorial_3": "Integration tasks.",
    "Tutorial_4": "Custom calculations."
  },
  {
    "id": 392,
    "Function_name": "REGISTER.ID",
    "description_en": "Returns the register ID of the specified dynamic link library (DLL) or code resource that has been previously registered",
    "Category": "Add-in and Automation",
    "syntax_en": "REPLACE(old_text,start_num,num_chars,new_text)",
    "example_en": "=REPLACE(\"12345\",2,3,\"abc\")",
    "Tutorial_1": "Replace characters in text strings.",
    "Tutorial_2": "Text data cleansing.",
    "Tutorial_3": "Data formatting.",
    "Tutorial_4": "String manipulation tasks."
  },
  {
    "id": 393,
    "Function_name": "REPLACE, REPLACEB",
    "description_en": "Replaces characters within text",
    "Category": "Text",
    "syntax_en": "REPLACEB(old_text,start_num,num_bytes,new_text)",
    "example_en": "=REPLACEB(\"??Excel\",3,4,\"??\")",
    "Tutorial_1": "Replace bytes in DBCS text.",
    "Tutorial_2": "Asian language data management.",
    "Tutorial_3": "Multilingual data processing.",
    "Tutorial_4": "Data transformation tasks."
  },
  {
    "id": 394,
    "Function_name": "REPT",
    "description_en": "Repeats text a given number of times",
    "Category": "Text",
    "syntax_en": "REPT(text,number_times)",
    "example_en": "=REPT(\"A\",3)",
    "Tutorial_1": "Repeat text strings multiple times.",
    "Tutorial_2": "Visual formatting tasks.",
    "Tutorial_3": "Report header creations.",
    "Tutorial_4": "Data presentation tasks."
  },
  {
    "id": 395,
    "Function_name": "RIGHT",
    "description_en": "Returns the rightmost characters from a text value",
    "Category": "Text",
    "syntax_en": "RIGHT(text,[num_chars])",
    "example_en": "=RIGHT(\"Excel\",2)",
    "Tutorial_1": "Extract text from right side.",
    "Tutorial_2": "Data parsing.",
    "Tutorial_3": "String manipulation tasks.",
    "Tutorial_4": "Data formatting."
  },
  {
    "id": 396,
    "Function_name": "RIGHTB",
    "description_en": "Returns the rightmost characters from a text value",
    "Category": "Text",
    "syntax_en": "RIGHTB(text,[num_bytes])",
    "example_en": "=RIGHTB(\"??Excel\",4)",
    "Tutorial_1": "Extract bytes from right (DBCS).",
    "Tutorial_2": "Multilingual data parsing.",
    "Tutorial_3": "Asian text management.",
    "Tutorial_4": "Data transformation tasks."
  },
  {
    "id": 397,
    "Function_name": "ROMAN",
    "description_en": "Converts an arabic numeral to roman, as text",
    "Category": "Math and trigonometry",
    "syntax_en": "ROMAN(number,[form])",
    "example_en": "=ROMAN(2025)",
    "Tutorial_1": "Convert numbers to Roman numerals.",
    "Tutorial_2": "Historical data presentations.",
    "Tutorial_3": "Educational content creation.",
    "Tutorial_4": "Report formatting."
  },
  {
    "id": 398,
    "Function_name": "ROUND",
    "description_en": "Rounds a number to a specified number of digits",
    "Category": "Math and trigonometry",
    "syntax_en": "ROUND(number,num_digits)",
    "example_en": "=ROUND(3.14159,2)",
    "Tutorial_1": "Round numbers to specific digits.",
    "Tutorial_2": "Financial report formatting.",
    "Tutorial_3": "Data presentation tasks.",
    "Tutorial_4": "Calculation standardization."
  },
  {
    "id": 399,
    "Function_name": "ROUNDDOWN",
    "description_en": "Rounds a number down, toward zero",
    "Category": "Math and trigonometry",
    "syntax_en": "ROUNDDOWN(number,num_digits)",
    "example_en": "=ROUNDDOWN(7.89,1)",
    "Tutorial_1": "Round numbers downward.",
    "Tutorial_2": "Pricing scenarios.",
    "Tutorial_3": "Inventory management.",
    "Tutorial_4": "Data rounding tasks."
  },
  {
    "id": 400,
    "Function_name": "ROUNDUP",
    "description_en": "Rounds a number up, away from zero",
    "Category": "Math and trigonometry",
    "syntax_en": "ROUNDUP(number,num_digits)",
    "example_en": "=ROUNDUP(5.32,1)",
    "Tutorial_1": "Round numbers upward.",
    "Tutorial_2": "Financial budgeting tasks.",
    "Tutorial_3": "Pricing models.",
    "Tutorial_4": "Data summarization."
  },
  {
    "id": 401,
    "Function_name": "ROW",
    "description_en": "Returns the row number of a reference",
    "Category": "Lookup and reference",
    "syntax_en": "ROW([reference])",
    "example_en": "=ROW(B3)",
    "Tutorial_1": "Get row number of a cell.",
    "Tutorial_2": "Data indexing tasks.",
    "Tutorial_3": "Spreadsheet automation.",
    "Tutorial_4": "Dynamic referencing."
  },
  {
    "id": 402,
    "Function_name": "ROWS",
    "description_en": "Returns the number of rows in a reference",
    "Category": "Lookup and reference",
    "syntax_en": "ROWS(array)",
    "example_en": "=ROWS(A1:A8)",
    "Tutorial_1": "Count rows within a range.",
    "Tutorial_2": "Data validation tasks.",
    "Tutorial_3": "Table size calculation.",
    "Tutorial_4": "Dynamic range referencing."
  },
  {
    "id": 403,
    "Function_name": "RRI",
    "description_en": "Returns an equivalent interest rate for the growth of an investment",
    "Category": "Financial",
    "syntax_en": "RRI(nper,pv,fv)",
    "example_en": "=RRI(10,1000,2000)",
    "Tutorial_1": "Calculate equivalent interest rate for investment growth.",
    "Tutorial_2": "Investment return analysis.",
    "Tutorial_3": "Financial projections.",
    "Tutorial_4": "Growth scenario planning."
  },
  {
    "id": 404,
    "Function_name": "RSQ",
    "description_en": "Returns the square of the Pearson product moment correlation coefficient",
    "Category": "Statistical",
    "syntax_en": "RSQ(known_y's,known_x's)",
    "example_en": "=RSQ(A1:A3,B1:B3)",
    "Tutorial_1": "Calculate squared correlation coefficient.",
    "Tutorial_2": "Regression analysis.",
    "Tutorial_3": "Statistical modeling.",
    "Tutorial_4": "Predictive analytics."
  },
  {
    "id": 405,
    "Function_name": "RTD",
    "description_en": "Retrieves real-time data from a program that supports COM automation",
    "Category": "Lookup and reference",
    "syntax_en": "RTD(progID,server,topic1,[topic2],...)",
    "example_en": "=RTD(\"stock.quote\",\"\",\"MSFT\")",
    "Tutorial_1": "Real-time data retrieval.",
    "Tutorial_2": "Live financial data analysis.",
    "Tutorial_3": "Dynamic dashboard updates.",
    "Tutorial_4": "Stock market tracking."
  },
  {
    "id": 406,
    "Function_name": "SCAN",
    "description_en": "ScansÂ an array by applying aÂ LAMBDAÂ to each value and returns an array that has each intermediate value",
    "Category": "Logical",
    "syntax_en": "SCAN(initial_value,array,lambda)",
    "example_en": "=SCAN(0,A1:A5,LAMBDA(acc,val,acc+val))",
    "Tutorial_1": "Cumulative array calculation.",
    "Tutorial_2": "Running totals in reports.",
    "Tutorial_3": "Progressive financial modeling.",
    "Tutorial_4": "Data analysis tasks."
  },
  {
    "id": 407,
    "Function_name": "SEARCH",
    "description_en": "Finds one text value within another (not case-sensitive)",
    "Category": "Text",
    "syntax_en": "SEARCH(find_text,within_text,[start_num])",
    "example_en": "=SEARCH(\"cel\",\"Excel\")",
    "Tutorial_1": "Find position of text within another text (case-insensitive).",
    "Tutorial_2": "Text parsing tasks.",
    "Tutorial_3": "Data extraction processes.",
    "Tutorial_4": "Report generation."
  },
  {
    "id": 408,
    "Function_name": "SEARCHB",
    "description_en": "Finds one text value within another (not case-sensitive)",
    "Category": "Text",
    "syntax_en": "SEARCHB(find_text,within_text,[start_num])",
    "example_en": "=SEARCHB(\"?\",\"??Excel\")",
    "Tutorial_1": "Search text within DBCS text.",
    "Tutorial_2": "Asian language parsing.",
    "Tutorial_3": "Data extraction tasks.",
    "Tutorial_4": "Multilingual data handling."
  },
  {
    "id": 409,
    "Function_name": "SEC",
    "description_en": "Returns the secant of an angle",
    "Category": "Math and trigonometry",
    "syntax_en": "SEC(number)",
    "example_en": "=SEC(0.5)",
    "Tutorial_1": "Calculate secant of angles.",
    "Tutorial_2": "Engineering computations.",
    "Tutorial_3": "Geometry problem-solving.",
    "Tutorial_4": "Physics simulations."
  },
  {
    "id": 410,
    "Function_name": "SECH",
    "description_en": "Returns the hyperbolic secant of an angle",
    "Category": "Math and trigonometry",
    "syntax_en": "SECH(number)",
    "example_en": "=SECH(1)",
    "Tutorial_1": "Hyperbolic secant calculation.",
    "Tutorial_2": "Advanced mathematics.",
    "Tutorial_3": "Engineering scenarios.",
    "Tutorial_4": "Physics computations."
  },
  {
    "id": 411,
    "Function_name": "SECOND",
    "description_en": "Converts a serial number to a second",
    "Category": "Date and time",
    "syntax_en": "SECOND(serial_number)",
    "example_en": "=SECOND(\"12:30:15\")",
    "Tutorial_1": "Extract second component from time.",
    "Tutorial_2": "Event timestamp analysis.",
    "Tutorial_3": "Data logging tasks.",
    "Tutorial_4": "Time-based evaluations."
  },
  {
    "id": 412,
    "Function_name": "SEQUENCE",
    "description_en": "Generates a list of sequential numbers in an array, such as 1, 2, 3, 4",
    "Category": "Math and trigonometry",
    "syntax_en": "SEQUENCE(rows,[columns],[start],[step])",
    "example_en": "=SEQUENCE(5,1,10,2)",
    "Tutorial_1": "Generate numeric sequences.",
    "Tutorial_2": "Automated list creation.",
    "Tutorial_3": "Data series for graphs.",
    "Tutorial_4": "Scenario modeling tasks."
  },
  {
    "id": 413,
    "Function_name": "SERIESSUM",
    "description_en": "Returns the sum of a power series based on the formula",
    "Category": "Math and trigonometry",
    "syntax_en": "SERIESSUM(x,n,m,coefficients)",
    "example_en": "=SERIESSUM(2,0,1,A1:A3)",
    "Tutorial_1": "Calculate series sum.",
    "Tutorial_2": "Mathematical computations.",
    "Tutorial_3": "Financial modeling.",
    "Tutorial_4": "Statistical analyses."
  },
  {
    "id": 414,
    "Function_name": "SHEET",
    "description_en": "Returns the sheet number of the referenced sheet",
    "Category": "Information",
    "syntax_en": "SHEET([value])",
    "example_en": "=SHEET(A1)",
    "Tutorial_1": "Identify worksheet index number.",
    "Tutorial_2": "Workbook navigation.",
    "Tutorial_3": "Data referencing tasks.",
    "Tutorial_4": "Spreadsheet automation."
  },
  {
    "id": 415,
    "Function_name": "SHEETS",
    "description_en": "Returns the number of sheets in a reference",
    "Category": "Information",
    "syntax_en": "SHEETS([reference])",
    "example_en": "=SHEETS()",
    "Tutorial_1": "Count sheets in workbook.",
    "Tutorial_2": "Workbook audits.",
    "Tutorial_3": "Spreadsheet management.",
    "Tutorial_4": "Reporting automation."
  },
  {
    "id": 416,
    "Function_name": "SIGN",
    "description_en": "Returns the sign of a number",
    "Category": "Math and trigonometry",
    "syntax_en": "SIGN(number)",
    "example_en": "=SIGN(-5)",
    "Tutorial_1": "Return numeric sign indicator.",
    "Tutorial_2": "Numeric data analysis.",
    "Tutorial_3": "Conditional logic.",
    "Tutorial_4": "Financial report evaluations."
  },
  {
    "id": 417,
    "Function_name": "SIN",
    "description_en": "Returns the sine of the given angle",
    "Category": "Math and trigonometry",
    "syntax_en": "SIN(number)",
    "example_en": "=SIN(PI()/2)",
    "Tutorial_1": "Calculate sine of an angle.",
    "Tutorial_2": "Trigonometric calculations.",
    "Tutorial_3": "Engineering wave analysis.",
    "Tutorial_4": "Physics simulations."
  },
  {
    "id": 418,
    "Function_name": "SINH",
    "description_en": "Returns the hyperbolic sine of a number",
    "Category": "Math and trigonometry",
    "syntax_en": "SINH(number)",
    "example_en": "=SINH(2)",
    "Tutorial_1": "Calculate hyperbolic sine.",
    "Tutorial_2": "Advanced mathematics.",
    "Tutorial_3": "Engineering problems.",
    "Tutorial_4": "Physics modeling tasks."
  },
  {
    "id": 419,
    "Function_name": "SKEW",
    "description_en": "Returns the skewness of a distribution",
    "Category": "Statistical",
    "syntax_en": "SKEW(number1,[number2],...)",
    "example_en": "=SKEW(A1:A8)",
    "Tutorial_1": "Measure skewness of a dataset.",
    "Tutorial_2": "Statistical distribution analysis.",
    "Tutorial_3": "Financial data assessments.",
    "Tutorial_4": "Data symmetry evaluations."
  },
  {
    "id": 420,
    "Function_name": "SKEW.P",
    "description_en": "Returns the skewness of a distribution based on a population",
    "Category": "Statistical",
    "syntax_en": "SKEW.P(number1,[number2],...)",
    "example_en": "=SKEW.P(B1:B18)",
    "Tutorial_1": "Population skewness measure.",
    "Tutorial_2": "Complete dataset analysis.",
    "Tutorial_3": "Financial modeling.",
    "Tutorial_4": "Statistical research."
  },
  {
    "id": 421,
    "Function_name": "SLN",
    "description_en": "Returns the straight-line depreciation of an asset for one period",
    "Category": "Financial",
    "syntax_en": "SLN(cost,salvage,life)",
    "example_en": "=SLN(10000,1000,5)",
    "Tutorial_1": "Straight-line depreciation calculation.",
    "Tutorial_2": "Asset management tasks.",
    "Tutorial_3": "Financial reporting.",
    "Tutorial_4": "Budgeting scenarios."
  },
  {
    "id": 422,
    "Function_name": "SLOPE",
    "description_en": "Returns the slope of the linear regression line",
    "Category": "Statistical",
    "syntax_en": "SLOPE(known_y's,known_x's)",
    "example_en": "=SLOPE(A1:A8,B1:B8)",
    "Tutorial_1": "Calculate slope of regression line.",
    "Tutorial_2": "Trend analysis.",
    "Tutorial_3": "Sales forecasting.",
    "Tutorial_4": "Statistical modeling."
  },
  {
    "id": 423,
    "Function_name": "SMALL",
    "description_en": "Returns the k-th smallest value in a data set",
    "Category": "Statistical",
    "syntax_en": "SMALL(array,k)",
    "example_en": "=SMALL(A1:A8,2)",
    "Tutorial_1": "Find the k-th smallest value.",
    "Tutorial_2": "Performance ranking tasks.",
    "Tutorial_3": "Cost evaluation.",
    "Tutorial_4": "Inventory management analyses."
  },
  {
    "id": 424,
    "Function_name": "SORT",
    "description_en": "Sorts the contents of a range or array",
    "Category": "Lookup and reference",
    "syntax_en": "SORT(array,[sort_index],[sort_order],[by_col])",
    "example_en": "=SORT(A1:C8,2,-1,FALSE)",
    "Tutorial_1": "Sort arrays dynamically.",
    "Tutorial_2": "Data presentation tasks.",
    "Tutorial_3": "Report generation.",
    "Tutorial_4": "Database queries."
  },
  {
    "id": 425,
    "Function_name": "SORTBY",
    "description_en": "Sorts the contents of a range or array based on the values in a corresponding range or array",
    "Category": "Lookup and reference",
    "syntax_en": "SORTBY(array,by_array1,[sort_order1],[by_array2],[sort_order2],...)",
    "example_en": "=SORTBY(A1:A3,B1:B3,1)",
    "Tutorial_1": "Sort data by multiple criteria.",
    "Tutorial_2": "Data management tasks.",
    "Tutorial_3": "Report preparations.",
    "Tutorial_4": "Complex sorting needs."
  },
  {
    "id": 426,
    "Function_name": "SQRT",
    "description_en": "Returns a positive square root",
    "Category": "Math and trigonometry",
    "syntax_en": "SQRT(number)",
    "example_en": "=SQRT(16)",
    "Tutorial_1": "Calculate square root.",
    "Tutorial_2": "Mathematical computations.",
    "Tutorial_3": "Engineering calculations.",
    "Tutorial_4": "Statistical analyses."
  },
  {
    "id": 427,
    "Function_name": "SQRTPI",
    "description_en": "Returns the square root of (number * pi)",
    "Category": "Math and trigonometry",
    "syntax_en": "SQRTPI(number)",
    "example_en": "=SQRTPI(2)",
    "Tutorial_1": "Calculate square root of (number × ?).",
    "Tutorial_2": "Mathematical modeling tasks.",
    "Tutorial_3": "Engineering problems.",
    "Tutorial_4": "Statistical evaluations."
  },
  {
    "id": 428,
    "Function_name": "STANDARDIZE",
    "description_en": "Returns a normalized value",
    "Category": "Statistical",
    "syntax_en": "STANDARDIZE(x,mean,standard_dev)",
    "example_en": "=STANDARDIZE(75,50,10)",
    "Tutorial_1": "Standardize data points (z-score).",
    "Tutorial_2": "Statistical analysis.",
    "Tutorial_3": "Benchmark comparisons.",
    "Tutorial_4": "Data normalization tasks."
  },
  {
    "id": 429,
    "Function_name": "STDEV",
    "description_en": "Estimates standard deviation based on a sample",
    "Category": "Compatibility",
    "syntax_en": "STDEV(number1,[number2],...)",
    "example_en": "=STDEV(A1:A7)",
    "Tutorial_1": "Calculate sample standard deviation.",
    "Tutorial_2": "Statistical analysis.",
    "Tutorial_3": "Quality control tasks.",
    "Tutorial_4": "Risk assessment."
  },
  {
    "id": 430,
    "Function_name": "STDEV.P",
    "description_en": "Calculates standard deviation based on the entire population",
    "Category": "Statistical",
    "syntax_en": "STDEV.P(number1,[number2],...)",
    "example_en": "=STDEV.P(B1:B17)",
    "Tutorial_1": "Population standard deviation calculation.",
    "Tutorial_2": "Complete dataset analysis.",
    "Tutorial_3": "Financial modeling tasks.",
    "Tutorial_4": "Risk management evaluations."
  },
  {
    "id": 431,
    "Function_name": "STDEV.S",
    "description_en": "Estimates standard deviation based on a sample",
    "Category": "Statistical",
    "syntax_en": "STDEV.S(number1,[number2],...)",
    "example_en": "=STDEV.S(C1:C12)",
    "Tutorial_1": "Sample standard deviation calculation.",
    "Tutorial_2": "Research data evaluations.",
    "Tutorial_3": "Performance analysis.",
    "Tutorial_4": "Statistical quality control."
  },
  {
    "id": 432,
    "Function_name": "STDEVA",
    "description_en": "Estimates standard deviation based on a sample, including numbers, text, and logical values",
    "Category": "Statistical",
    "syntax_en": "STDEVA(value1,[value2],...)",
    "example_en": "=STDEVA(A1:A2)",
    "Tutorial_1": "Standard deviation including logical/text as numbers.",
    "Tutorial_2": "Mixed-data analysis.",
    "Tutorial_3": "Survey data assessments.",
    "Tutorial_4": "Statistical reporting."
  },
  {
    "id": 433,
    "Function_name": "STDEVP",
    "description_en": "Calculates standard deviation based on the entire population",
    "Category": "Compatibility",
    "syntax_en": "STDEVP(number1,[number2],...)",
    "example_en": "=STDEVP(B1:B7)",
    "Tutorial_1": "Legacy population standard deviation.",
    "Tutorial_2": "Historical statistical evaluations.",
    "Tutorial_3": "Financial data analyses.",
    "Tutorial_4": "Risk modeling tasks."
  },
  {
    "id": 434,
    "Function_name": "STDEVPA",
    "description_en": "Calculates standard deviation based on the entire population, including numbers, text, and logical values",
    "Category": "Statistical",
    "syntax_en": "STDEVPA(value1,[value2],...)",
    "example_en": "=STDEVPA(A1:A2)",
    "Tutorial_1": "Population standard deviation with logical/text as numbers.",
    "Tutorial_2": "Mixed data analyses.",
    "Tutorial_3": "Statistical evaluations.",
    "Tutorial_4": "Survey data modeling."
  },
  {
    "id": 435,
    "Function_name": "STEYX",
    "description_en": "Returns the standard error of the predicted y-value for each x in the regression",
    "Category": "Statistical",
    "syntax_en": "STEYX(known_y's,known_x's)",
    "example_en": "=STEYX(A1:A3,B1:B3)",
    "Tutorial_1": "Standard error of regression estimate.",
    "Tutorial_2": "Regression analysis.",
    "Tutorial_3": "Statistical modeling tasks.",
    "Tutorial_4": "Predictive analysis."
  },
  {
    "id": 436,
    "Function_name": "STOCKHISTORY",
    "description_en": "Retrieves historical data about a financial instrument",
    "Category": "Information",
    "syntax_en": "STOCKHISTORY(stock,start_date,[end_date],[interval],[headers],[properties])",
    "example_en": "=STOCKHISTORY(\"MSFT\",\"2025-01-01\",\"2025-01-10\")",
    "Tutorial_1": "Retrieve historical stock data.",
    "Tutorial_2": "Financial market analysis.",
    "Tutorial_3": "Investment research.",
    "Tutorial_4": "Stock trend evaluations."
  },
  {
    "id": 437,
    "Function_name": "STOCKHISTORY",
    "description_en": "Retrieves historical data about a financial instrument and loads it as an array",
    "Category": "Information",
    "syntax_en": "STOCKHISTORY(stock,start_date,[end_date],[interval],[headers],[property0],[property1],...)",
    "example_en": "=STOCKHISTORY(\"AAPL\",\"2025-01-01\",\"2025-01-15\")",
    "Tutorial_1": "Historical stock data retrieval.",
    "Tutorial_2": "Investment research.",
    "Tutorial_3": "Financial reporting.",
    "Tutorial_4": "Market trend analyses."
  },
  {
    "id": 438,
    "Function_name": "SUBSTITUTE",
    "description_en": "Substitutes new text for old text in a text string",
    "Category": "Text",
    "syntax_en": "SUBSTITUTE(text, old_text, new_text, [instance_num])",
    "example_en": "=SUBSTITUTE(\"Excel 2025\",\"2025\",\"2026\")",
    "Tutorial_1": "Text replacement tasks.",
    "Tutorial_2": "Data cleansing.",
    "Tutorial_3": "Standardize naming conventions.",
    "Tutorial_4": "Report formatting."
  },
  {
    "id": 439,
    "Function_name": "SUBTOTAL",
    "description_en": "Returns a subtotal in a list or database",
    "Category": "Math and trigonometry",
    "syntax_en": "SUBTOTAL(function_num,ref1,[ref2],...)",
    "example_en": "=SUBTOTAL(9,A1:A8)",
    "Tutorial_1": "Calculate subtotals dynamically.",
    "Tutorial_2": "Report generation tasks.",
    "Tutorial_3": "Data summarization.",
    "Tutorial_4": "Filtered data evaluations."
  },
  {
    "id": 440,
    "Function_name": "SUM",
    "description_en": "Adds its arguments",
    "Category": "Math and trigonometry",
    "syntax_en": "SUM(number1,[number2],...)",
    "example_en": "=SUM(A1:A9)",
    "Tutorial_1": "Calculate sum of values.",
    "Tutorial_2": "Sales reporting.",
    "Tutorial_3": "Expense tracking.",
    "Tutorial_4": "Financial modeling."
  },
  {
    "id": 441,
    "Function_name": "SUMIF",
    "description_en": "Adds the cells specified by a given criteria",
    "Category": "Math and trigonometry",
    "syntax_en": "SUMIF(range,criteria,[sum_range])",
    "example_en": "=SUMIF(A1:A9,\">50\")",
    "Tutorial_1": "Conditional summation.",
    "Tutorial_2": "Sales target analyses.",
    "Tutorial_3": "Inventory stock checks.",
    "Tutorial_4": "Budget evaluation tasks."
  },
  {
    "id": 442,
    "Function_name": "SUMIFS",
    "description_en": "Adds the cells in a range that meet multiple criteria",
    "Category": "Math and trigonometry",
    "syntax_en": "SUMIFS(sum_range,criteria_range1,criteria1,[criteria_range2,criteria2],...)",
    "example_en": "=SUMIFS(C1:C9,A1:A9,\"Apple\",B1:B9,\">50\")",
    "Tutorial_1": "Multiple condition summation.",
    "Tutorial_2": "Complex sales analyses.",
    "Tutorial_3": "Financial reports.",
    "Tutorial_4": "Product evaluation tasks."
  },
  {
    "id": 443,
    "Function_name": "SUMPRODUCT",
    "description_en": "Returns the sum of the products of corresponding array components",
    "Category": "Math and trigonometry",
    "syntax_en": "SUMPRODUCT(array1,[array2],[array3],...)",
    "example_en": "=SUMPRODUCT(A1:A4,B1:B4)",
    "Tutorial_1": "Sum product of arrays.",
    "Tutorial_2": "Weighted average calculations.",
    "Tutorial_3": "Inventory valuations.",
    "Tutorial_4": "Revenue forecasting."
  },
  {
    "id": 444,
    "Function_name": "SUMSQ",
    "description_en": "Returns the sum of the squares of the arguments",
    "Category": "Math and trigonometry",
    "syntax_en": "SUMSQ(number1,[number2],...)",
    "example_en": "=SUMSQ(A1:A4)",
    "Tutorial_1": "Sum of squares calculation.",
    "Tutorial_2": "Statistical analyses.",
    "Tutorial_3": "Error rate evaluations.",
    "Tutorial_4": "Data dispersion measures."
  },
  {
    "id": 445,
    "Function_name": "SUMX2MY2",
    "description_en": "Returns the sum of the difference of squares of corresponding values in two arrays",
    "Category": "Math and trigonometry",
    "syntax_en": "SUMX2MY2(array_x,array_y)",
    "example_en": "=SUMX2MY2(A1:A4,B1:B4)",
    "Tutorial_1": "Sum difference of squares.",
    "Tutorial_2": "Statistical data analysis.",
    "Tutorial_3": "Comparative evaluations.",
    "Tutorial_4": "Variance analyses."
  },
  {
    "id": 446,
    "Function_name": "SUMX2PY2",
    "description_en": "Returns the sum of the sum of squares of corresponding values in two arrays",
    "Category": "Math and trigonometry",
    "syntax_en": "SUMX2PY2(array_x,array_y)",
    "example_en": "=SUMX2PY2(A1:A4,B1:B4)",
    "Tutorial_1": "Sum total of squares.",
    "Tutorial_2": "Statistical modeling tasks.",
    "Tutorial_3": "Comparative assessments.",
    "Tutorial_4": "Data evaluation scenarios."
  },
  {
    "id": 447,
    "Function_name": "SUMXMY2",
    "description_en": "Returns the sum of squares of differences of corresponding values in two arrays",
    "Category": "Math and trigonometry",
    "syntax_en": "SUMXMY2(array_x,array_y)",
    "example_en": "=SUMXMY2(A1:A4,B1:B4)",
    "Tutorial_1": "Sum squared differences.",
    "Tutorial_2": "Statistical variance analysis.",
    "Tutorial_3": "Risk assessment.",
    "Tutorial_4": "Financial modeling tasks."
  },
  {
    "id": 448,
    "Function_name": "SWITCH",
    "description_en": "Evaluates an expression against a list of values and returns the result corresponding to the first matching value. If there is no match, an optional default value may be returned.",
    "Category": "Logical",
    "syntax_en": "SWITCH(expression,value1,result1,[default])",
    "example_en": "=SWITCH(A1,\"A\",100,\"B\",90,80)",
    "Tutorial_1": "Conditional value assignments.",
    "Tutorial_2": "Dynamic pricing.",
    "Tutorial_3": "Score grading.",
    "Tutorial_4": "Report customization."
  },
  {
    "id": 449,
    "Function_name": "SYD",
    "description_en": "Returns the sum-of-years' digits depreciation of an asset for a specified period",
    "Category": "Financial",
    "syntax_en": "SYD(cost,salvage,life,per)",
    "example_en": "=SYD(5000,1000,5,2)",
    "Tutorial_1": "Sum-of-years' digits depreciation.",
    "Tutorial_2": "Asset management scenarios.",
    "Tutorial_3": "Financial planning tasks.",
    "Tutorial_4": "Budget forecasting."
  },
  {
    "id": 450,
    "Function_name": "T",
    "description_en": "Converts its arguments to text",
    "Category": "Text",
    "syntax_en": "T(value)",
    "example_en": "=T(A1)",
    "Tutorial_1": "Return text from a value.",
    "Tutorial_2": "Data cleansing tasks.",
    "Tutorial_3": "Text data validation.",
    "Tutorial_4": "Database import preparations."
  },
  {
    "id": 451,
    "Function_name": "T.DIST",
    "description_en": "Returns the Percentage Points (probability) for the Student t-distribution",
    "Category": "Statistical",
    "syntax_en": "T.DIST(x,deg_freedom,cumulative)",
    "example_en": "=T.DIST(1.96,10,TRUE)",
    "Tutorial_1": "Student's t-distribution probabilities.",
    "Tutorial_2": "Statistical analysis.",
    "Tutorial_3": "Hypothesis testing.",
    "Tutorial_4": "Data interpretation tasks."
  },
  {
    "id": 452,
    "Function_name": "T.DIST.2T",
    "description_en": "Returns the Percentage Points (probability) for the Student t-distribution",
    "Category": "Statistical",
    "syntax_en": "T.DIST.2T(x, deg_freedom)",
    "example_en": "=T.DIST.2T(2.1, 15)",
    "Tutorial_1": "Two-tailed Student's t-distribution probability.",
    "Tutorial_2": "Hypothesis testing.",
    "Tutorial_3": "Statistical analysis scenarios.",
    "Tutorial_4": "Confidence interval calculation."
  },
  {
    "id": 453,
    "Function_name": "T.DIST.RT",
    "description_en": "Returns the Student's t-distribution",
    "Category": "Statistical",
    "syntax_en": "T.DIST.RT(x, deg_freedom)",
    "example_en": "=T.DIST.RT(1.5, 20)",
    "Tutorial_1": "Right-tailed t-distribution probability.",
    "Tutorial_2": "Statistical evaluations.",
    "Tutorial_3": "Risk analysis tasks.",
    "Tutorial_4": "Research data assessments."
  },
  {
    "id": 454,
    "Function_name": "T.INV",
    "description_en": "Returns the t-value of the Student's t-distribution as a function of the probability and the degrees of freedom",
    "Category": "Statistical",
    "syntax_en": "T.INV(probability, deg_freedom)",
    "example_en": "=T.INV(0.95, 20)",
    "Tutorial_1": "Inverse t-distribution (left-tailed).",
    "Tutorial_2": "Threshold calculations.",
    "Tutorial_3": "Statistical modeling.",
    "Tutorial_4": "Research analysis."
  },
  {
    "id": 455,
    "Function_name": "T.INV.2T",
    "description_en": "Returns the inverse of the Student's t-distribution",
    "Category": "Statistical",
    "syntax_en": "T.INV.2T(probability, deg_freedom)",
    "example_en": "=T.INV.2T(0.05, 15)",
    "Tutorial_1": "Two-tailed inverse t-distribution.",
    "Tutorial_2": "Confidence interval tasks.",
    "Tutorial_3": "Statistical evaluations.",
    "Tutorial_4": "Hypothesis testing scenarios."
  },
  {
    "id": 456,
    "Function_name": "T.TEST",
    "description_en": "Returns the probability associated with a Student's t-test",
    "Category": "Statistical",
    "syntax_en": "T.TEST(array1, array2, tails, type)",
    "example_en": "=T.TEST(A1:A5,B1:B5,2,1)",
    "Tutorial_1": "Conduct t-tests between datasets.",
    "Tutorial_2": "Statistical analysis.",
    "Tutorial_3": "Hypothesis testing.",
    "Tutorial_4": "Research evaluations."
  },
  {
    "id": 457,
    "Function_name": "TAKE",
    "description_en": "Returns a specified number of contiguous rows or columns from the start or end of an array",
    "Category": "Lookup and reference",
    "syntax_en": "TAKE(array, rows,[columns])",
    "example_en": "=TAKE(A4:C13,3)",
    "Tutorial_1": "Extract subset of data.",
    "Tutorial_2": "Data sampling tasks.",
    "Tutorial_3": "Report generation.",
    "Tutorial_4": "Data summarization."
  },
  {
    "id": 458,
    "Function_name": "TAN",
    "description_en": "Returns the tangent of a number",
    "Category": "Math and trigonometry",
    "syntax_en": "TAN(number)",
    "example_en": "=TAN(PI()/4)",
    "Tutorial_1": "Calculate tangent of angles.",
    "Tutorial_2": "Geometry problems.",
    "Tutorial_3": "Engineering analyses.",
    "Tutorial_4": "Physics simulations."
  },
  {
    "id": 459,
    "Function_name": "TANH",
    "description_en": "Returns the hyperbolic tangent of a number",
    "Category": "Math and trigonometry",
    "syntax_en": "TANH(number)",
    "example_en": "=TANH(1)",
    "Tutorial_1": "Hyperbolic tangent calculation.",
    "Tutorial_2": "Advanced mathematical modeling.",
    "Tutorial_3": "Engineering tasks.",
    "Tutorial_4": "Scientific analyses."
  },
  {
    "id": 460,
    "Function_name": "TBILLEQ",
    "description_en": "Returns the bond-equivalent yield for a Treasury bill",
    "Category": "Financial",
    "syntax_en": "TBILLEQ(settlement,maturity,discount)",
    "example_en": "=TBILLEQ(\"2025-01-01\",\"2025-07-01\",0.05)",
    "Tutorial_1": "Calculate Treasury bill equivalent yield.",
    "Tutorial_2": "Investment analysis.",
    "Tutorial_3": "Financial evaluations.",
    "Tutorial_4": "Yield scenario assessments."
  },
  {
    "id": 461,
    "Function_name": "TBILLPRICE",
    "description_en": "Returns the price per $100 face value for a Treasury bill",
    "Category": "Financial",
    "syntax_en": "TBILLPRICE(settlement,maturity,discount)",
    "example_en": "=TBILLPRICE(\"2025-01-01\",\"2025-07-01\",0.05)",
    "Tutorial_1": "Treasury bill pricing.",
    "Tutorial_2": "Financial modeling tasks.",
    "Tutorial_3": "Investment planning.",
    "Tutorial_4": "Market evaluation scenarios."
  },
  {
    "id": 462,
    "Function_name": "TBILLYIELD",
    "description_en": "Returns the yield for a Treasury bill",
    "Category": "Financial",
    "syntax_en": "TBILLYIELD(settlement,maturity,pr)",
    "example_en": "=TBILLYIELD(\"2025-01-01\",\"2025-07-01\",99)",
    "Tutorial_1": "Yield calculation for Treasury bills.",
    "Tutorial_2": "Financial market analysis.",
    "Tutorial_3": "Investment evaluations.",
    "Tutorial_4": "Yield management."
  },
  {
    "id": 463,
    "Function_name": "TDIST",
    "description_en": "Returns the Student's t-distribution",
    "Category": "Compatibility",
    "syntax_en": "TDIST(x, deg_freedom, tails)",
    "example_en": "=TDIST(2,10,2)",
    "Tutorial_1": "Legacy t-distribution calculation.",
    "Tutorial_2": "Historical data analyses.",
    "Tutorial_3": "Statistical modeling.",
    "Tutorial_4": "Research studies."
  },
  {
    "id": 464,
    "Function_name": "TEXT",
    "description_en": "Formats a number and converts it to text",
    "Category": "Text",
    "syntax_en": "TEXT(value, format_text)",
    "example_en": "=TEXT(A3,\"mm/dd/yyyy\")",
    "Tutorial_1": "Format numbers as text.",
    "Tutorial_2": "Date formatting tasks.",
    "Tutorial_3": "Report preparation.",
    "Tutorial_4": "Data presentation."
  },
  {
    "id": 465,
    "Function_name": "TEXTAFTER",
    "description_en": "Returns text that occurs after given character or string",
    "Category": "Text",
    "syntax_en": "TEXTAFTER(text, delimiter, [instance_num], [match_mode], [match_end], [if_not_found])",
    "example_en": "=TEXTAFTER(\"Excel-2025\",\"-\")",
    "Tutorial_1": "Extract text after delimiter.",
    "Tutorial_2": "Data parsing.",
    "Tutorial_3": "Text manipulation tasks.",
    "Tutorial_4": "Report generation."
  },
  {
    "id": 466,
    "Function_name": "TEXTBEFORE",
    "description_en": "Returns text that occurs before a given character or string",
    "Category": "Text",
    "syntax_en": "TEXTBEFORE(text, delimiter, [instance_num], [match_mode], [match_end], [if_not_found])",
    "example_en": "=TEXTBEFORE(\"2025-Excel\",\"-\")",
    "Tutorial_1": "Extract text before delimiter.",
    "Tutorial_2": "Data cleansing.",
    "Tutorial_3": "Text parsing tasks.",
    "Tutorial_4": "Data extraction."
  },
  {
    "id": 467,
    "Function_name": "TEXTJOIN",
    "description_en": "Combines the text from multiple ranges and/or strings",
    "Category": "Text",
    "syntax_en": "TEXTJOIN(delimiter, ignore_empty, text1, [text2],...)",
    "example_en": "=TEXTJOIN(\",\",TRUE,A3:A5)",
    "Tutorial_1": "Combine text strings dynamically.",
    "Tutorial_2": "Data merging tasks.",
    "Tutorial_3": "Report preparations.",
    "Tutorial_4": "Data summarization."
  },
  {
    "id": 468,
    "Function_name": "TEXTSPLIT",
    "description_en": "Splits text strings by using column and row delimiters",
    "Category": "Text",
    "syntax_en": "TEXTSPLIT(text, col_delimiter, [row_delimiter], [ignore_empty], [match_mode], [pad_with])",
    "example_en": "=TEXTSPLIT(\"A,B,C\",\",\")",
    "Tutorial_1": "Split text into array.",
    "Tutorial_2": "Data parsing tasks.",
    "Tutorial_3": "Text data extraction.",
    "Tutorial_4": "Report creation."
  },
  {
    "id": 469,
    "Function_name": "TIME",
    "description_en": "Returns the serial number of a particular time",
    "Category": "Date and time",
    "syntax_en": "TIME(hour, minute, second)",
    "example_en": "=TIME(12,30,15)",
    "Tutorial_1": "Create time values.",
    "Tutorial_2": "Scheduling tasks.",
    "Tutorial_3": "Time data entry.",
    "Tutorial_4": "Data logging."
  },
  {
    "id": 470,
    "Function_name": "TIMEVALUE",
    "description_en": "Converts a time in the form of text to a serial number",
    "Category": "Date and time",
    "syntax_en": "TIMEVALUE(time_text)",
    "example_en": "=TIMEVALUE(\"1:45 PM\")",
    "Tutorial_1": "Convert text to time.",
    "Tutorial_2": "Data formatting tasks.",
    "Tutorial_3": "Time analysis.",
    "Tutorial_4": "Spreadsheet automation."
  },
  {
    "id": 471,
    "Function_name": "TINV",
    "description_en": "Returns the inverse of the Student's t-distribution",
    "Category": "Compatibility",
    "syntax_en": "TINV(probability, deg_freedom)",
    "example_en": "=TINV(0.1, 12)",
    "Tutorial_1": "Legacy inverse t-distribution.",
    "Tutorial_2": "Historical statistical analyses.",
    "Tutorial_3": "Research modeling.",
    "Tutorial_4": "Confidence interval determination."
  },
  {
    "id": 472,
    "Function_name": "TOCOL",
    "description_en": "Returns the array in a single column",
    "Category": "Lookup and reference",
    "syntax_en": "TOCOL(array, [ignore], [scan_by_col])",
    "example_en": "=TOCOL(A1:C3)",
    "Tutorial_1": "Convert array into single column.",
    "Tutorial_2": "Data restructuring.",
    "Tutorial_3": "Data import tasks.",
    "Tutorial_4": "Array flattening."
  },
  {
    "id": 473,
    "Function_name": "TODAY",
    "description_en": "Returns the serial number of today's date",
    "Category": "Date and time",
    "syntax_en": "TODAY()",
    "example_en": "=TODAY()",
    "Tutorial_1": "Current date retrieval.",
    "Tutorial_2": "Date stamping.",
    "Tutorial_3": "Daily report generation.",
    "Tutorial_4": "Spreadsheet automation."
  },
  {
    "id": 474,
    "Function_name": "TOROW",
    "description_en": "Returns the array in a single row",
    "Category": "Lookup and reference",
    "syntax_en": "TOROW(array, [ignore], [scan_by_col])",
    "example_en": "=TOROW(A2:C4)",
    "Tutorial_1": "Convert array into single row.",
    "Tutorial_2": "Data transformation tasks.",
    "Tutorial_3": "Array flattening.",
    "Tutorial_4": "Data management scenarios."
  },
  {
    "id": 475,
    "Function_name": "TRANSLATE",
    "description_en": "Translates a text from one language to another",
    "Category": "Text",
    "syntax_en": "TRANSLATE(text, from_characters, to_characters)",
    "example_en": "=TRANSLATE(\"ABCD\",\"AB\",\"XY\")",
    "Tutorial_1": "Replace characters in text strings.",
    "Tutorial_2": "Data cleansing tasks.",
    "Tutorial_3": "Text standardization.",
    "Tutorial_4": "Report formatting."
  },
  {
    "id": 476,
    "Function_name": "TRANSPOSE",
    "description_en": "Returns the transpose of an array",
    "Category": "Lookup and reference",
    "syntax_en": "TRANSPOSE(array)",
    "example_en": "=TRANSPOSE(A1:C2)",
    "Tutorial_1": "Switch rows and columns.",
    "Tutorial_2": "Data manipulation tasks.",
    "Tutorial_3": "Report formatting.",
    "Tutorial_4": "Data restructuring."
  },
  {
    "id": 477,
    "Function_name": "TREND",
    "description_en": "Returns values along a linear trend",
    "Category": "Statistical",
    "syntax_en": "TREND(known_y's, [known_x's], [new_x's], [const])",
    "example_en": "=TREND(A1:A5,B1:B5,B6:B10)",
    "Tutorial_1": "Linear trend forecasting.",
    "Tutorial_2": "Sales forecasting.",
    "Tutorial_3": "Financial analyses.",
    "Tutorial_4": "Predictive modeling."
  },
  {
    "id": 478,
    "Function_name": "TRIM",
    "description_en": "Removes spaces from text",
    "Category": "Text",
    "syntax_en": "TRIM(text)",
    "example_en": "=TRIM(\" Excel \")",
    "Tutorial_1": "Remove extra spaces from text.",
    "Tutorial_2": "Data cleansing tasks.",
    "Tutorial_3": "Text standardization.",
    "Tutorial_4": "Data formatting."
  },
  {
    "id": 479,
    "Function_name": "TRIMMEAN",
    "description_en": "Returns the mean of the interior of a data set",
    "Category": "Statistical",
    "syntax_en": "TRIMMEAN(array, percent)",
    "example_en": "=TRIMMEAN(A1:A10, 0.2)",
    "Tutorial_1": "Calculate trimmed mean of dataset.",
    "Tutorial_2": "Statistical analysis.",
    "Tutorial_3": "Outlier management.",
    "Tutorial_4": "Data summarization."
  },
  {
    "id": 480,
    "Function_name": "TRIMRANGE",
    "description_en": "Scans in from the edges of a range or array until it finds a non-blank cell (or value), it then excludes those blank rows or columns",
    "Category": "Lookup and reference",
    "syntax_en": "TRIMRANGE(array, percent)",
    "example_en": "=TRIMRANGE(A1:A20, 0.1)",
    "Tutorial_1": "Trim dataset by removing extremes.",
    "Tutorial_2": "Outlier removal.",
    "Tutorial_3": "Statistical cleaning.",
    "Tutorial_4": "Dataset preparation."
  },
  {
    "id": 481,
    "Function_name": "TRUNC",
    "description_en": "Truncates a number to an integer",
    "Category": "Math and trigonometry",
    "syntax_en": "TRUNC(number, [num_digits])",
    "example_en": "=TRUNC(7.89)",
    "Tutorial_1": "Truncate decimals without rounding.",
    "Tutorial_2": "Financial reporting.",
    "Tutorial_3": "Inventory calculations.",
    "Tutorial_4": "Data normalization."
  },
  {
    "id": 482,
    "Function_name": "TTEST",
    "description_en": "Returns the probability associated with a Student's t-test",
    "Category": "Compatibility",
    "syntax_en": "TTEST(array1, array2, tails, type)",
    "example_en": "=TTEST(A1:A3,B1:B3,2,2)",
    "Tutorial_1": "Legacy t-test calculation.",
    "Tutorial_2": "Historical data analyses.",
    "Tutorial_3": "Statistical comparison.",
    "Tutorial_4": "Experimental assessments."
  },
  {
    "id": 483,
    "Function_name": "TYPE",
    "description_en": "Returns a number indicating the data type of a value",
    "Category": "Information",
    "syntax_en": "TYPE(value)",
    "example_en": "=TYPE(A1)",
    "Tutorial_1": "Return data type of a cell.",
    "Tutorial_2": "Data validation tasks.",
    "Tutorial_3": "Data type checking.",
    "Tutorial_4": "Automation scripts."
  },
  {
    "id": 484,
    "Function_name": "UNICHAR",
    "description_en": "Returns the Unicode character that is references by the given numeric value",
    "Category": "Text",
    "syntax_en": "UNICHAR(number)",
    "example_en": "=UNICHAR(65)",
    "Tutorial_1": "Return Unicode character by number.",
    "Tutorial_2": "Symbol insertion.",
    "Tutorial_3": "Text encoding tasks.",
    "Tutorial_4": "Multilingual data management."
  },
  {
    "id": 485,
    "Function_name": "UNICODE",
    "description_en": "Returns the number (code point) that corresponds to the first character of the text",
    "Category": "Text",
    "syntax_en": "UNICODE(text)",
    "example_en": "=UNICODE(\"A\")",
    "Tutorial_1": "Return Unicode number of character.",
    "Tutorial_2": "Text encoding analyses.",
    "Tutorial_3": "Data import checks.",
    "Tutorial_4": "Character assessments."
  },
  {
    "id": 486,
    "Function_name": "UNIQUE",
    "description_en": "Returns a list of unique values in a list or range",
    "Category": "Lookup and reference",
    "syntax_en": "UNIQUE(array, [by_col], [exactly_once])",
    "example_en": "=UNIQUE(A1:A8)",
    "Tutorial_1": "Extract unique values.",
    "Tutorial_2": "Duplicate data removal.",
    "Tutorial_3": "Data cleansing tasks.",
    "Tutorial_4": "Report summarization."
  },
  {
    "id": 487,
    "Function_name": "UPPER",
    "description_en": "Converts text to uppercase",
    "Category": "Text",
    "syntax_en": "UPPER(text)",
    "example_en": "=UPPER(\"excel\")",
    "Tutorial_1": "Convert text to uppercase.",
    "Tutorial_2": "Text standardization.",
    "Tutorial_3": "Data cleansing.",
    "Tutorial_4": "Report formatting."
  },
  {
    "id": 488,
    "Function_name": "VALUE",
    "description_en": "Converts a text argument to a number",
    "Category": "Text",
    "syntax_en": "VALUE(text)",
    "example_en": "=VALUE(\"1234\")",
    "Tutorial_1": "Convert text to numeric values.",
    "Tutorial_2": "Data formatting tasks.",
    "Tutorial_3": "Import data handling.",
    "Tutorial_4": "Numeric analysis."
  },
  {
    "id": 489,
    "Function_name": "VALUETOTEXT",
    "description_en": "Returns text from any specified value",
    "Category": "Text",
    "syntax_en": "VALUETOTEXT(value, [format])",
    "example_en": "=VALUETOTEXT(123.45)",
    "Tutorial_1": "Convert values to text strings.",
    "Tutorial_2": "Data reporting.",
    "Tutorial_3": "Formatting tasks.",
    "Tutorial_4": "Data export preparation."
  },
  {
    "id": 490,
    "Function_name": "VAR",
    "description_en": "Estimates variance based on a sample",
    "Category": "Compatibility",
    "syntax_en": "VAR(number1,[number2],...)",
    "example_en": "=VAR(A1:A8)",
    "Tutorial_1": "Sample variance calculation.",
    "Tutorial_2": "Statistical analyses.",
    "Tutorial_3": "Risk evaluations.",
    "Tutorial_4": "Data variability checks."
  },
  {
    "id": 491,
    "Function_name": "VAR.P",
    "description_en": "Calculates variance based on the entire population",
    "Category": "Statistical",
    "syntax_en": "VAR.P(number1,[number2],...)",
    "example_en": "=VAR.P(B1:B18)",
    "Tutorial_1": "Population variance calculation.",
    "Tutorial_2": "Complete dataset analysis.",
    "Tutorial_3": "Financial evaluations.",
    "Tutorial_4": "Statistical modeling."
  },
  {
    "id": 492,
    "Function_name": "VAR.S",
    "description_en": "Estimates variance based on a sample",
    "Category": "Statistical",
    "syntax_en": "VAR.S(number1,[number2],...)",
    "example_en": "=VAR.S(C1:C13)",
    "Tutorial_1": "Sample variance calculation (modern).",
    "Tutorial_2": "Research data analyses.",
    "Tutorial_3": "Statistical assessments.",
    "Tutorial_4": "Variance reporting tasks."
  },
  {
    "id": 493,
    "Function_name": "VARA",
    "description_en": "Estimates variance based on a sample, including numbers, text, and logical values",
    "Category": "Statistical",
    "syntax_en": "VARA(value1,[value2],...)",
    "example_en": "=VARA(A1:A3)",
    "Tutorial_1": "Variance calculation including logical/text as numbers.",
    "Tutorial_2": "Mixed-type data analyses.",
    "Tutorial_3": "Survey evaluations.",
    "Tutorial_4": "Statistical data management."
  },
  {
    "id": 494,
    "Function_name": "VARP",
    "description_en": "Calculates variance based on the entire population",
    "Category": "Compatibility",
    "syntax_en": "VARP(number1,[number2],...)",
    "example_en": "=VARP(B1:B8)",
    "Tutorial_1": "Legacy population variance.",
    "Tutorial_2": "Historical analyses.",
    "Tutorial_3": "Financial modeling.",
    "Tutorial_4": "Statistical reporting."
  },
  {
    "id": 495,
    "Function_name": "VARPA",
    "description_en": "Calculates variance based on the entire population, including numbers, text, and logical values",
    "Category": "Statistical",
    "syntax_en": "VARPA(value1,[value2],...)",
    "example_en": "=VARPA(A1:A3)",
    "Tutorial_1": "Population variance including logical/text as numbers.",
    "Tutorial_2": "Mixed data analyses.",
    "Tutorial_3": "Statistical modeling tasks.",
    "Tutorial_4": "Survey data analysis."
  },
  {
    "id": 496,
    "Function_name": "VDB",
    "description_en": "Returns the depreciation of an asset for a specified or partial period by using a declining balance method",
    "Category": "Financial",
    "syntax_en": "VDB(cost,salvage,life,start_period,end_period,[factor],[no_switch])",
    "example_en": "=VDB(5000,200,5,0,3)",
    "Tutorial_1": "Variable declining balance depreciation.",
    "Tutorial_2": "Asset valuation tasks.",
    "Tutorial_3": "Financial reporting.",
    "Tutorial_4": "Depreciation modeling."
  },
  {
    "id": 497,
    "Function_name": "VLOOKUP",
    "description_en": "Searches for a value in the first column...",
    "Category": "Lookup and reference",
    "syntax_en": "VLOOKUP(lookup_value, table_array, col_index_num, [range_lookup])",
    "example_en": "=VLOOKUP(\"Apple\", A498:B505, 2, FALSE)",
    "Tutorial_1": "Lookup prices from a product list.",
    "Tutorial_2": "Find student names from ID numbers.",
    "Tutorial_3": "Match employee ID with their departments.",
    "Tutorial_4": "Retrieve email addresses from a database."
  },
  {
    "id": 498,
    "Function_name": "VSTACK",
    "description_en": "AppendsÂ arrays vertically and in sequence to return a larger array",
    "Category": "Look and reference",
    "syntax_en": "VSTACK(array1,[array2],...)",
    "example_en": "=VSTACK(A1:A2,B1:B2)",
    "Tutorial_1": "Vertically stack multiple arrays.",
    "Tutorial_2": "Data merging tasks.",
    "Tutorial_3": "Reporting data organization.",
    "Tutorial_4": "Data compilation."
  },
  {
    "id": 499,
    "Function_name": "WEBSERVICE",
    "description_en": "Returns data from a web service.",
    "Category": "Web",
    "syntax_en": "WEBSERVICE(url)",
    "example_en": "=WEBSERVICE(\"http://example.com\")",
    "Tutorial_1": "Retrieve data from web URLs.",
    "Tutorial_2": "API data integration.",
    "Tutorial_3": "Real-time data updates.",
    "Tutorial_4": "Web data analyses."
  },
  {
    "id": 500,
    "Function_name": "WEEKDAY",
    "description_en": "Converts a serial number to a day of the week",
    "Category": "Date and time",
    "syntax_en": "WEEKDAY(serial_number,[return_type])",
    "example_en": "=WEEKDAY(\"2025-03-28\")",
    "Tutorial_1": "Determine day of week.",
    "Tutorial_2": "Scheduling tasks.",
    "Tutorial_3": "Date analyses.",
    "Tutorial_4": "Data categorization."
  },
  {
    "id": 501,
    "Function_name": "WEEKNUM",
    "description_en": "Converts a serial number to a number representing where the week falls numerically with a year",
    "Category": "Date and time",
    "syntax_en": "WEEKNUM(serial_number,[return_type])",
    "example_en": "=WEEKNUM(\"2025-01-01\")",
    "Tutorial_1": "Calculate week number.",
    "Tutorial_2": "Project timelines.",
    "Tutorial_3": "Reporting periods.",
    "Tutorial_4": "Date categorization tasks."
  },
  {
    "id": 502,
    "Function_name": "WEIBULL",
    "description_en": "Calculates variance based on the entire population, including numbers, text, and logical values",
    "Category": "Compatibility",
    "syntax_en": "WEIBULL(x,alpha,beta,cumulative)",
    "example_en": "=WEIBULL(2,1,2,TRUE)",
    "Tutorial_1": "Legacy Weibull distribution.",
    "Tutorial_2": "Reliability engineering.",
    "Tutorial_3": "Failure rate modeling.",
    "Tutorial_4": "Statistical analysis."
  },
  {
    "id": 503,
    "Function_name": "WEIBULL.DIST",
    "description_en": "Returns the Weibull distribution",
    "Category": "Statistical",
    "syntax_en": "WEIBULL.DIST(x,alpha,beta,cumulative)",
    "example_en": "=WEIBULL.DIST(1.5,1,2,FALSE)",
    "Tutorial_1": "Weibull distribution calculation.",
    "Tutorial_2": "Reliability assessments.",
    "Tutorial_3": "Quality control analysis.",
    "Tutorial_4": "Engineering evaluations."
  },
  {
    "id": 504,
    "Function_name": "WORKDAY",
    "description_en": "Returns the serial number of the date before or after a specified number of workdays",
    "Category": "Date and time",
    "syntax_en": "WORKDAY(start_date,days,[holidays])",
    "example_en": "=WORKDAY(\"2025-01-01\",10)",
    "Tutorial_1": "Calculate working days ahead.",
    "Tutorial_2": "Project scheduling.",
    "Tutorial_3": "Employee work planning.",
    "Tutorial_4": "Task deadlines."
  },
  {
    "id": 505,
    "Function_name": "WORKDAY.INTL",
    "description_en": "Returns the serial number of the date before or after a specified number of workdays using parameters to indicate which and how many days are weekend days",
    "Category": "Date and time",
    "syntax_en": "WORKDAY.INTL(start_date,days,[weekend],[holidays])",
    "example_en": "=WORKDAY.INTL(\"2025-01-01\",10,11)",
    "Tutorial_1": "Calculate working days with custom weekends.",
    "Tutorial_2": "Global scheduling.",
    "Tutorial_3": "International payroll tasks.",
    "Tutorial_4": "Project planning."
  },
  {
    "id": 506,
    "Function_name": "WRAPCOLS",
    "description_en": "Wraps the provided row or column of values by columns after a specified number of elements",
    "Category": "Look and reference",
    "syntax_en": "WRAPCOLS(vector,wrap_count,[pad_with])",
    "example_en": "=WRAPCOLS(A1:A11,4)",
    "Tutorial_1": "Wrap column vector into multiple columns.",
    "Tutorial_2": "Data rearrangement.",
    "Tutorial_3": "Report formatting.",
    "Tutorial_4": "Data summarization."
  },
  {
    "id": 507,
    "Function_name": "WRAPROWS",
    "description_en": "Wraps the provided row or column of values by rows after a specified number of elements",
    "Category": "Look and reference",
    "syntax_en": "WRAPROWS(vector,wrap_count,[pad_with])",
    "example_en": "=WRAPROWS(A1:L1,3)",
    "Tutorial_1": "Wrap row vector into multiple rows.",
    "Tutorial_2": "Data restructuring tasks.",
    "Tutorial_3": "Data presentations.",
    "Tutorial_4": "Data summarization."
  },
  {
    "id": 508,
    "Function_name": "XIRR",
    "description_en": "Returns the internal rate of return for a schedule of cash flows that is not necessarily periodic",
    "Category": "Financial",
    "syntax_en": "XIRR(values,dates,[guess])",
    "example_en": "=XIRR(A1:A4,B1:B4)",
    "Tutorial_1": "Internal rate of return for irregular cash flows.",
    "Tutorial_2": "Investment analyses.",
    "Tutorial_3": "Financial planning.",
    "Tutorial_4": "Project evaluation."
  },
  {
    "id": 509,
    "Function_name": "XLOOKUP",
    "description_en": "Searches a range or an array, and returnsÂ an itemÂ correspondingÂ to theÂ first match it finds. If a match doesn't exist,Â then XLOOKUP can return theÂ closest (approximate) match.",
    "Category": "Lookup and reference",
    "syntax_en": "XLOOKUP(lookup_value,lookup_array,return_array,[if_not_found],[match_mode],[search_mode])",
    "example_en": "=XLOOKUP(\"Excel\",A1:A9,B1:B9,\"Not Found\")",
    "Tutorial_1": "Enhanced data lookup.",
    "Tutorial_2": "Employee database queries.",
    "Tutorial_3": "Product searches.",
    "Tutorial_4": "Inventory control."
  },
  {
    "id": 510,
    "Function_name": "XMATCH",
    "description_en": "Returns theÂ relativeÂ position of an item in an array or range of cells.",
    "Category": "Lookup and reference",
    "syntax_en": "XMATCH(lookup_value,lookup_array,[match_mode],[search_mode])",
    "example_en": "=XMATCH(\"Excel\",A1:A9)",
    "Tutorial_1": "Enhanced match function.",
    "Tutorial_2": "Data indexing.",
    "Tutorial_3": "Validation tasks.",
    "Tutorial_4": "Search operations."
  },
  {
    "id": 511,
    "Function_name": "XNPV",
    "description_en": "Returns the net present value for a schedule of cash flows that is not necessarily periodic",
    "Category": "Financial",
    "syntax_en": "XNPV(rate,values,dates)",
    "example_en": "=XNPV(0.05,A1:A4,B1:B4)",
    "Tutorial_1": "Net present value with irregular intervals.",
    "Tutorial_2": "Investment planning.",
    "Tutorial_3": "Project financial modeling.",
    "Tutorial_4": "Cash flow analyses."
  },
  {
    "id": 512,
    "Function_name": "XOR",
    "description_en": "Returns a logical exclusive OR of all arguments",
    "Category": "Logical",
    "syntax_en": "XOR(logical1,[logical2],...)",
    "example_en": "=XOR(TRUE,FALSE)",
    "Tutorial_1": "Exclusive OR logical test.",
    "Tutorial_2": "Condition evaluation.",
    "Tutorial_3": "Logical data analysis.",
    "Tutorial_4": "Formula control."
  },
  {
    "id": 513,
    "Function_name": "YEAR",
    "description_en": "Converts a serial number to a year",
    "Category": "Date and time",
    "syntax_en": "YEAR(serial_number)",
    "example_en": "=YEAR(\"2025-03-28\")",
    "Tutorial_1": "Extract year from date.",
    "Tutorial_2": "Data categorization.",
    "Tutorial_3": "Report summarization.",
    "Tutorial_4": "Time analyses."
  },
  {
    "id": 514,
    "Function_name": "YEARFRAC",
    "description_en": "Returns the year fraction representing the number of whole days between start_date and end_date",
    "Category": "Date and time",
    "syntax_en": "YEARFRAC(start_date,end_date,[basis])",
    "example_en": "=YEARFRAC(\"2025-01-01\",\"2025-12-31\")",
    "Tutorial_1": "Fractional year between dates.",
    "Tutorial_2": "Investment duration calculations.",
    "Tutorial_3": "Project scheduling.",
    "Tutorial_4": "Financial planning."
  },
  {
    "id": 515,
    "Function_name": "YIELD",
    "description_en": "Returns the yield on a security that pays periodic interest",
    "Category": "Financial",
    "syntax_en": "YIELD(settlement,maturity,rate,pr,redemption,frequency,[basis])",
    "example_en": "=YIELD(\"2025-01-01\",\"2030-01-01\",0.05,95,100,2)",
    "Tutorial_1": "Yield calculation on securities.",
    "Tutorial_2": "Investment evaluations.",
    "Tutorial_3": "Financial market analyses.",
    "Tutorial_4": "Bond performance assessments."
  },
  {
    "id": 516,
    "Function_name": "YIELDDISC",
    "description_en": "Returns the annual yield for a discounted security; for example, a Treasury bill",
    "Category": "Financial",
    "syntax_en": "YIELDDISC(settlement,maturity,pr,redemption,[basis])",
    "example_en": "=YIELDDISC(\"2025-01-01\",\"2026-01-01\",97,100)",
    "Tutorial_1": "Yield for discounted securities.",
    "Tutorial_2": "Discount market analysis.",
    "Tutorial_3": "Investment scenarios.",
    "Tutorial_4": "Financial yield calculations."
  },
  {
    "id": 517,
    "Function_name": "YIELDMAT",
    "description_en": "Returns the annual yield of a security that pays interest at maturity",
    "Category": "Financial",
    "syntax_en": "YIELDMAT(settlement,maturity,issue,rate,pr,[basis])",
    "example_en": "=YIELDMAT(\"2025-01-01\",\"2026-01-01\",\"2024-12-31\",0.05,98)",
    "Tutorial_1": "Yield calculation at maturity.",
    "Tutorial_2": "Investment analyses.",
    "Tutorial_3": "Financial evaluations.",
    "Tutorial_4": "Bond market tasks."
  },
  {
    "id": 518,
    "Function_name": "Z.TEST",
    "description_en": "Returns the one-tailed probability-value of a z-test",
    "Category": "Statistical",
    "syntax_en": "Z.TEST(array,x,[sigma])",
    "example_en": "=Z.TEST(A1:A9,75,5)",
    "Tutorial_1": "Z-test statistical evaluation.",
    "Tutorial_2": "Hypothesis testing.",
    "Tutorial_3": "Data analysis tasks.",
    "Tutorial_4": "Research validations."
  },
  {
    "id": 519,
    "Function_name": "FALSE",
    "description_en": "Returns the logical value FALSE",
    "Category": "Logical",
    "syntax_en": "FALSE()",
    "example_en": "=FALSE()",
    "Tutorial_1": "Logical FALSE value for conditions.",
    "Tutorial_2": "Condition-based formula control.",
    "Tutorial_3": "Data validation logic.",
    "Tutorial_4": "Statistical hypothesis testing."
  },
  {
    "id": 520,
    "Function_name": "TRUE",
    "description_en": "Returns the logical value TRUE",
    "Category": "Logical",
    "syntax_en": "TRUE()",
    "example_en": "=TRUE()",
    "Tutorial_1": "Return logical TRUE.",
    "Tutorial_2": "Condition evaluation.",
    "Tutorial_3": "Logical functions.",
    "Tutorial_4": "Automation checks."
  }
]